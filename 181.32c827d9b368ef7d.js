(self.webpackChunkai=self.webpackChunkai||[]).push([[181],{6536:(Ke,Ee,Q)=>{"use strict";Q.d(Ee,{J:()=>be});var se=Q(2096);const Ye=["*"];let be=(()=>{class Re{constructor(){}ngOnInit(){}}return Re.\u0275fac=function(we){return new(we||Re)},Re.\u0275cmp=se.Xpm({type:Re,selectors:[["webex-con"]],ngContentSelectors:Ye,decls:2,vars:0,consts:[[1,"content"]],template:function(we,De){1&we&&(se.F$t(),se.TgZ(0,"div",0),se.Hsn(1),se.qZA())},styles:['[_nghost-%COMP%]{display:flex;height:auto;line-height:auto;width:100%;flex-direction:row}[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{display:block;height:auto;line-height:auto;width:15rem;content:"";flex:none}[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{display:block;height:auto;line-height:auto;width:auto;flex:1}@media screen and (min-width: 160rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:auto;flex:1}[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{width:160rem;flex:none}}@media screen and (max-width: 120rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:11.25rem}}@media screen and (max-width: 90rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:6.75rem}}@media screen and (max-width: 67.5rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:2rem}}@media screen and (max-width: 35rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:1rem}}']}),Re})()},7688:(Ke,Ee,Q)=>{"use strict";Q.d(Ee,{w:()=>ne});var se=Q(2096),Ye=Q(2313),be=Q(9808),Re=Q(6418);const Ce=["container"];function we(re,M){if(1&re&&se._UZ(0,"p",4),2&re){const L=se.oxw();se.Q6J("innerHTML",L.html(L.primary),se.oJD)}}const De=function(re){return{"fisrt-line":re}};function fe(re,M){if(1&re&&se._UZ(0,"p",5),2&re){const L=se.oxw();se.Q6J("ngClass",se.VKq(2,De,!L.primary))("innerHTML",L.html(L.secondary),se.oJD)}}function T(re,M){if(1&re&&(se.TgZ(0,"div",6)(1,"a",7),se._uU(2),se._UZ(3,"i"),se.qZA()()),2&re){const L=se.oxw();se.xp6(1),se.Q6J("ngClass",se.VKq(3,De,!L.primary&&!L.secondary))("routerLink",L.url),se.xp6(1),se.Oqu(L.link)}}let ne=(()=>{class re{constructor(L,W){this.viewContainerRef=L,this.sanitizer=W,this.className="",this.link=""}html(L){return this.sanitizer.bypassSecurityTrustHtml(L)}}return re.\u0275fac=function(L){return new(L||re)(se.Y36(se.s_b),se.Y36(Ye.H7))},re.\u0275cmp=se.Xpm({type:re,selectors:[["webex-description"]],viewQuery:function(L,W){if(1&L&&se.Gf(Ce,5),2&L){let Y;se.iGM(Y=se.CRH())&&(W.container=Y.first)}},inputs:{primary:"primary",secondary:"secondary",className:"className",url:"url",link:"link"},decls:4,vars:4,consts:[[3,"ngClass"],["class","primary",3,"innerHTML",4,"ngIf"],["class","secondary",3,"ngClass","innerHTML",4,"ngIf"],["class","link_warps",4,"ngIf"],[1,"primary",3,"innerHTML"],[1,"secondary",3,"ngClass","innerHTML"],[1,"link_warps"],[1,"link",3,"ngClass","routerLink"]],template:function(L,W){1&L&&(se.TgZ(0,"div",0),se.YNc(1,we,1,1,"p",1),se.YNc(2,fe,1,4,"p",2),se.YNc(3,T,4,5,"div",3),se.qZA()),2&L&&(se.Q6J("ngClass",W.className),se.xp6(1),se.Q6J("ngIf",W.primary),se.xp6(1),se.Q6J("ngIf",W.secondary),se.xp6(1),se.Q6J("ngIf",W.url))},dependencies:[be.mk,be.O5,Re.yS],styles:["[_nghost-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%]{display:block;height:auto}.center[_ngcontent-%COMP%]{text-align:center}.primary[_ngcontent-%COMP%]{font-size:2.625rem;line-height:3rem;margin-top:0;display:block;height:auto;width:100%;word-wrap:break-word}.secondary[_ngcontent-%COMP%]{font-size:1.25rem;line-height:1.5rem;margin-top:.75rem;display:block;height:auto;width:100%;word-wrap:break-word;color:#818181}.link_warps[_ngcontent-%COMP%]{display:block;height:3.5rem;line-height:3.5rem;width:100%;vertical-align:top}.link[_ngcontent-%COMP%]{font-size:.9375rem;margin-top:0;display:block;height:auto;display:inline-block;height:3.5rem;line-height:3.5rem;width:auto;padding:0 1.75rem;border-radius:1.75rem;background-color:#fff;color:#181818;vertical-align:top;cursor:pointer}.link[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{display:inline-block;height:3.5rem;line-height:3.5rem;width:.875rem;background:url(arrow-right.11c0d3c565e33c72.svg) no-repeat center;margin-left:.1875rem;vertical-align:middle}.large[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:4.5rem;line-height:4.5rem;margin-top:0;display:block;height:auto}.large[_ngcontent-%COMP%]   .link_warps[_ngcontent-%COMP%]{margin-top:4.5rem}.middle[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:2.625rem;line-height:3rem;margin-top:0;display:block;height:auto}.middle[_ngcontent-%COMP%]   .link_warps[_ngcontent-%COMP%]{margin-top:1.5rem}.small[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:1.5rem;line-height:1.625rem;margin-top:0;display:block;height:auto}.small[_ngcontent-%COMP%]   .secondary[_ngcontent-%COMP%]{font-size:1.125rem;line-height:1.25rem;margin-top:0;display:block;height:auto}.fisrt-line[_ngcontent-%COMP%]{margin-top:0!important}@media screen and (max-width: 67.5rem){.large[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:3.5rem;line-height:3.75rem;margin-top:0;display:block;height:auto}}@media screen and (max-width: 35rem){.large[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:2.625rem;line-height:3rem;margin-top:0;display:block;height:auto}.large[_ngcontent-%COMP%]   .link_warps[_ngcontent-%COMP%]{margin-top:1.5rem}.middle[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:2.25rem;line-height:2.5rem;margin-top:0;display:block;height:auto}.middle[_ngcontent-%COMP%]   .link_warps[_ngcontent-%COMP%]{margin-top:1.5rem}.small[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:1.25rem;line-height:1.5rem;margin-top:0;display:block;height:auto}.small[_ngcontent-%COMP%]   .secondary[_ngcontent-%COMP%]{font-size:1rem;line-height:1.25rem;margin-top:0;display:block;height:auto}}"],changeDetection:0}),re})()},1346:(Ke,Ee,Q)=>{"use strict";Q.d(Ee,{Xhn:()=>be,f3b:()=>Ge,B90:()=>We,BHj:()=>ms,qHZ:()=>Ox,ugM:()=>De,FBF:()=>oD,MB5:()=>Jk,o4J:()=>uD,nGf:()=>Ng,LGj:()=>ha,m7h:()=>Ye,knu:()=>Fs,lub:()=>V,p_j:()=>Ar,D5U:()=>se,lls:()=>Wt});var se={};Q.r(se),Q.d(se,{arraysEqual:()=>de,assert:()=>S,assertNonNegativeIntegerDimensions:()=>cs,assertNonNull:()=>J,assertShapesMatch:()=>ee,bytesFromStringArray:()=>Uf,bytesPerElement:()=>Pa,checkConversionForErrors:()=>Bf,clamp:()=>ze,computeStrides:()=>ke,convertBackendValuesAndArrayBuffer:()=>jf,createScalarValue:()=>Ts,createShuffledIndices:()=>Vt,decodeString:()=>$s,distSquared:()=>tt,encodeString:()=>_s,fetch:()=>_v,fingerPrint64:()=>gm,flatten:()=>Hs,getArrayFromDType:()=>pt,getTypedArrayFromDType:()=>rt,hasEncodingLoss:()=>Cc,hexToLong:()=>Fo,indexToLoc:()=>xr,inferDtype:()=>yr,inferFromImplicitShape:()=>kt,isBoolean:()=>Gf,isFunction:()=>Di,isInt:()=>qe,isNumber:()=>Ei,isPromise:()=>Oi,isScalarShape:()=>me,isString:()=>Qr,isTypedArray:()=>Bn,isValidDtype:()=>Wf,locToIndex:()=>Qn,makeOnesTypedArray:()=>Ri,makeZerosNestedTypedArray:()=>Nc,makeZerosTypedArray:()=>tn,nearestDivisor:()=>Ai,nearestLargerEven:()=>Le,now:()=>hn,parseAxisParam:()=>$e,randUniform:()=>Ze,repeatedTry:()=>zt,rightPad:()=>vt,shuffle:()=>Y,shuffleCombo:()=>Oe,sizeFromShape:()=>I,sizeToSquarishShape:()=>st,squeezeShape:()=>dt,sum:()=>en,swap:()=>ot,tanh:()=>Xe,toNestedArray:()=>zn,toTypedArray:()=>Gs});var Ye={};Q.r(Ye),Q.d(Ye,{Serializable:()=>Nr,SerializationMap:()=>Dn,registerClass:()=>te});var be={};Q.r(be),Q.d(be,{fromPixels:()=>nS,fromPixelsAsync:()=>eS,toPixels:()=>tS});var Re={};Q.r(Re),Q.d(Re,{assertParamsValid:()=>ed,computeFlatOffset:()=>sd,computeOutShape:()=>td,getNormalizedAxes:()=>aS,isSliceContinous:()=>nd,maskToAxes:()=>rS,parseSliceParams:()=>Yl,sliceInfo:()=>rd,startForAxis:()=>pg,startIndicesWithElidedDims:()=>cg,stopForAxis:()=>fg,stopIndicesWithElidedDims:()=>hg,stridesForAxis:()=>dg,stridesWithElidedDims:()=>ig});var Ce={};Q.r(Ce),Q.d(Ce,{collectGatherOpShapeInfo:()=>sp,computeOutShape:()=>xy,segOpComputeOptimalWindowSize:()=>yy});var we={};Q.r(we),Q.d(we,{ERF_A1:()=>Ud,ERF_A2:()=>Gd,ERF_A3:()=>Hd,ERF_A4:()=>jd,ERF_A5:()=>qd,ERF_P:()=>Wd,PARALLELIZE_THRESHOLD:()=>Ld,RowPartitionType:()=>jn,SELU_SCALE:()=>mu,SELU_SCALEALPHA:()=>fu,applyActivation:()=>lu,assertAndGetBroadcastShape:()=>Me,assertAxesAreInnerMostDims:()=>rn,assertParamsConsistent:()=>Pd,assignToTypedArray:()=>ty,axesAreInnerMostDims:()=>fd,calculateShapes:()=>Rr,checkEinsumDimSizes:()=>Qd,checkPadOnDimRoundingMode:()=>fn,combineLocations:()=>Sg,combineRaggedTensorToTensorShapes:()=>qg,complexWithEvenIndex:()=>Jg,complexWithOddIndex:()=>ey,computeConv2DInfo:()=>Xt,computeConv3DInfo:()=>Xs,computeDefaultPad:()=>od,computeDilation2DInfo:()=>Go,computeOptimalWindowSize:()=>pu,computeOutAndReduceShapes:()=>Zt,computeOutShape:()=>gs,computePool2DInfo:()=>Wn,computePool3DInfo:()=>Ds,convertConv2DDataFormat:()=>As,decodeEinsumEquation:()=>Zd,eitherStridesOrDilationsAreOne:()=>sn,expandShapeToKeepDim:()=>Ft,exponent:()=>sy,exponents:()=>ny,fromStringArrayToUint8:()=>by,fromUint8ToStringArray:()=>Vs,getAxesPermutation:()=>_t,getBroadcastDims:()=>la,getComplexWithIndex:()=>Kd,getEinsumComputePath:()=>Jd,getEinsumPermutation:()=>Yd,getFusedBiasGradient:()=>iu,getFusedDyActivation:()=>ou,getImageCenter:()=>Vd,getInnerMostAxes:()=>Pt,getPermuted:()=>ei,getRaggedRank:()=>Xg,getReductionAxes:()=>Bt,getReshaped:()=>Jo,getReshapedPermuted:()=>ti,getRowPartitionTypesHelper:()=>Kg,getSliceBeginCoords:()=>Md,getSliceSize:()=>zd,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>oy,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>iy,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ly,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>hy,getSparseReshapeInputOutputMismatchErrorMessage:()=>py,getSparseReshapeInputOutputMultipleErrorMessage:()=>dy,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>uy,getSparseReshapeNegativeOutputDimErrorMessage:()=>cy,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>gy,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>np,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>fy,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>my,getUndoAxesPermutation:()=>Ys,isIdentityPermutation:()=>ep,log:()=>wv,mergeRealAndImagArrays:()=>Ls,prepareAndValidate:()=>Bd,prepareSplitSize:()=>tp,segment_util:()=>Ce,shouldFuse:()=>uu,slice_util:()=>Re,splitRealAndImagArrays:()=>Qg,stridesOrDilationsArePositive:()=>Tr,tupleValuesAreOne:()=>Zs,upcastType:()=>Cn,validateDefaultValueShape:()=>Zg,validateInput:()=>nT,validateUpdateShape:()=>Yg,warn:()=>En});var De={};Q.r(De),Q.d(De,{Layer:()=>He,RNN:()=>zr,RNNCell:()=>di,activation:()=>GD,add:()=>JD,alphaDropout:()=>PA,average:()=>eA,averagePooling1d:()=>Zp,averagePooling2d:()=>Yp,averagePooling3d:()=>Qp,avgPool1d:()=>uA,avgPool2d:()=>hA,avgPool3d:()=>pA,avgPooling1d:()=>cA,avgPooling2d:()=>dA,avgPooling3d:()=>fA,batchNormalization:()=>oA,bidirectional:()=>_A,categoryEncoding:()=>BA,centerCrop:()=>MA,concatenate:()=>tA,conv1d:()=>FD,conv2d:()=>PD,conv2dTranspose:()=>LD,conv3d:()=>VD,conv3dTranspose:()=>MD,convLstm2d:()=>CA,convLstm2dCell:()=>NA,cropping2D:()=>BD,dense:()=>HD,depthwiseConv2d:()=>UD,dot:()=>aA,dropout:()=>jD,elu:()=>$D,embedding:()=>QD,flatten:()=>KD,gaussianDropout:()=>FA,gaussianNoise:()=>OA,globalAveragePooling1d:()=>mA,globalAveragePooling2d:()=>gA,globalMaxPool1d:()=>EA,globalMaxPool2d:()=>DA,globalMaxPooling1d:()=>Xb,globalMaxPooling2d:()=>Zb,gru:()=>xA,gruCell:()=>bA,input:()=>Ox,inputLayer:()=>_D,layerNormalization:()=>iA,leakyReLU:()=>DD,lstm:()=>wA,lstmCell:()=>vA,masking:()=>LA,maxPool1d:()=>AA,maxPool2d:()=>RA,maxPooling1d:()=>Yb,maxPooling2d:()=>Qb,maxPooling3d:()=>yA,maximum:()=>nA,minimum:()=>sA,multiply:()=>rA,permute:()=>YD,prelu:()=>AD,randomWidth:()=>WA,reLU:()=>ED,repeatVector:()=>XD,rescaling:()=>VA,reshape:()=>ZD,resizing:()=>zA,rnn:()=>kA,separableConv2d:()=>zD,simpleRNN:()=>IA,simpleRNNCell:()=>SA,softmax:()=>RD,spatialDropout1d:()=>qD,stackedRNNCells:()=>TA,thresholdedReLU:()=>OD,timeDistributed:()=>$A,upSampling2d:()=>WD,zeroPadding2d:()=>lA});var fe={};Q.r(fe),Q.d(fe,{addImpl:()=>M0,bincountImpl:()=>ff,bincountReduceImpl:()=>H0,castImpl:()=>V0,ceilImpl:()=>j0,concatImpl:()=>q0,equalImpl:()=>Z0,expImpl:()=>Q0,expm1Impl:()=>ew,floorDivImpl:()=>rw,floorImpl:()=>sw,gatherNdImpl:()=>aw,gatherV2Impl:()=>ow,greaterEqualImpl:()=>lw,greaterImpl:()=>iw,lessEqualImpl:()=>cw,lessImpl:()=>uw,linSpaceImpl:()=>hw,logImpl:()=>dw,maxImpl:()=>pw,maximumImpl:()=>mw,minimumImpl:()=>gw,multiplyImpl:()=>mf,negImpl:()=>xw,notEqualImpl:()=>bw,prodImpl:()=>Sw,raggedGatherImpl:()=>Nw,raggedRangeImpl:()=>Tw,raggedTensorToTensorImpl:()=>Ew,rangeImpl:()=>Dw,rsqrtImpl:()=>Aw,scatterImpl:()=>Hr,sigmoidImpl:()=>zR,simpleAbsImpl:()=>B0,sliceImpl:()=>G0,sparseFillEmptyRowsImpl:()=>Ow,sparseReshapeImpl:()=>Fw,sparseSegmentReductionImpl:()=>vf,sqrtImpl:()=>lM,squaredDifferenceImpl:()=>Pw,staticRegexReplaceImpl:()=>Lw,stridedSliceImpl:()=>Vw,stringNGramsImpl:()=>Mw,stringSplitImpl:()=>zw,stringToHashBucketFastImpl:()=>Bw,subImpl:()=>tw,tileImpl:()=>Ww,topKImpl:()=>Gw,transposeImpl:()=>df,uniqueImpl:()=>jw});var T=Q(5861);class M{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class L{refCount(t){return W("refCount")}incRef(t){return W("incRef")}timerAvailable(){return!0}time(t){return W("time")}read(t){return W("read")}readSync(t){return W("readSync")}readToGPU(t,e){return W("readToGPU")}numDataIds(){return W("numDataIds")}disposeData(t,e){return W("disposeData")}write(t,e,s){return W("write")}move(t,e,s,r,a){return W("move")}createTensorFromGPUData(t,e,s){return W("createTensorFromGPUData")}memory(){return W("memory")}floatPrecision(){return W("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return W("dispose")}}function W(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Y(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,ot(n,t,e)}function Oe(n,t){if(n.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${t.length}`);let e=n.length,s=0;for(;e>0;)s=Math.random()*e|0,e--,ot(n,e,s),ot(t,e,s)}function ze(n,t,e){return Math.max(n,Math.min(t,e))}function Le(n){return n%2==0?n:n+1}function ot(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function en(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function Ze(n,t){const e=Math.random();return t*e+(1-e)*n}function tt(n,t){let e=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(t[s]);e+=r*r}return e}function S(n,t){if(!n)throw new Error("string"==typeof t?t:t())}function ee(n,t,e=""){S(de(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function J(n){S(null!=n,()=>"The input to the tensor constructor must be a non-null value.")}function I(n){if(0===n.length)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function me(n){return 0===n.length}function de(n,t){if(n===t)return!0;if(null==n||null==t||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function qe(n){return n%1==0}function Xe(n){if(null!=Math.tanh)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const t=Math.exp(2*n);return(t-1)/(t+1)}}function st(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function Vt(n){const t=new Uint32Array(n);for(let e=0;e<n;++e)t[e]=e;return Y(t),t}function vt(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function zt(n,t=(r=>0),e,s){return new Promise((r,a)=>{let o=0;const i=()=>{if(n())return void r();o++;const l=t(o);null!=e&&o>=e?a():null!=s?s(i,l):setTimeout(i,l)};i()})}function kt(n,t){let e=1,s=-1;for(let a=0;a<n.length;++a)if(n[a]>=0)e*=n[a];else if(-1===n[a]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(n[a]<0)throw Error(`Shapes can not be < 0. Found ${n[a]} at dim ${a}`);if(-1===s){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(0===e)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function $e(n,t){const e=t.length;return S((n=null==n?t.map((s,r)=>r):[].concat(n)).every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),S(n.every(s=>qe(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function dt(n,t){const e=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:$e(t,n).sort();let o=0;for(let i=0;i<n.length;++i){if(null!=a){if(a[o]===i&&1!==n[i])throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(null==a[o]||a[o]>i)&&1===n[i]&&(e.push(n[i]),s.push(i)),a[o]<=i&&o++}1!==n[i]&&(e.push(n[i]),s.push(i))}return{newShape:e,keptDims:s}}function rt(n,t){return pt(n,t)}function pt(n,t){let e=null;if(null==n||"float32"===n)e=new Float32Array(t);else if("int32"===n)e=new Int32Array(t);else if("bool"===n)e=new Uint8Array(t);else{if("string"!==n)throw new Error(`Unknown data type ${n}`);e=new Array(t)}return e}function Bf(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Wf(n){return"bool"===n||"complex64"===n||"float32"===n||"int32"===n||"string"===n}function Cc(n,t){return!("complex64"===t||"float32"===t&&"complex64"!==n||"int32"===t&&"float32"!==n&&"complex64"!==n||"bool"===t&&"bool"===n)}function Pa(n){if("float32"===n||"int32"===n)return 4;if("complex64"===n)return 8;if("bool"===n)return 1;throw new Error(`Unknown dtype ${n}`)}function Uf(n){if(null==n)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Qr(n){return"string"==typeof n||n instanceof String}function Gf(n){return"boolean"==typeof n}function Ei(n){return"number"==typeof n}function yr(n){return Array.isArray(n)?yr(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Ei(n)?"float32":Qr(n)?"string":Gf(n)?"bool":"float32"}function Di(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Ai(n,t){for(let e=t;e<n;++e)if(n%e==0)return e;return n}function ke(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Hf(n,t,e,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=e[n+o]}else{const a=t[0],o=t.slice(1),i=o.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<a;l++)r[l]=Hf(n+l*i,o,e,s)}return r}function zn(n,t,e=!1){if(0===n.length)return t[0];const s=n.reduce((r,a)=>r*a)*(e?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Hf(0,n,t,e)}function jf(n,t){if(Array.isArray(n))return n;if("float32"===t)return n instanceof Float32Array?n:new Float32Array(n);if("int32"===t)return n instanceof Int32Array?n:new Int32Array(n);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function Ri(n,t){const e=tn(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function tn(n,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t)return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function Nc(n,t){const e=n.reduce((s,r)=>s*r,1);if(null==t||"float32"===t)return zn(n,new Float32Array(e));if("int32"===t)return zn(n,new Int32Array(e));if("bool"===t)return zn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function cs(n){n.forEach(t=>{S(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Qn(n,t,e){if(0===t)return 0;if(1===t)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function xr(n,t,e){if(0===t)return[];if(1===t)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Oi(n){return n&&n.then&&"function"==typeof n.then}const qf="tfjsflags";class dv{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=pv,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},null!=this.urlFlags[t]){const r=this.urlFlags[t];z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}getAsync(t){var e=this;return(0,T.Z)(function*(){return t in e.flags||(e.flags[t]=yield e.evaluateFlag(t)),e.flags[t]})()}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Oi(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);qf in t&&t[qf].split(",").forEach(s=>{const[r,a]=s.split(":");this.urlFlags[r]=function mv(n,t){const e=t.toLowerCase();return"true"===e||"false"===e?"true"===e:""+ +e===e?+e:t}(0,a)})}}function pv(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(function fv(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}(t,s[0],s[1]),s.join("="))),t}function z(){return Kf}let kc,Kf=null;function Xf(){if(null==kc){let n;if("undefined"!=typeof window)n=window;else if("undefined"!=typeof global)n=global;else if("undefined"!=typeof process)n=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");n=self}kc=n}return kc}function Tc(n,t){const e=function yv(){const n=Xf();return null==n._tfGlobals&&(n._tfGlobals=new Map),n._tfGlobals}();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Fi="Abs",La="Acos",Va="Acosh",Jr="Add",_c="AddN",Pi="ArgMax",Li="ArgMin",Ma="Asin",za="Asinh",Ba="Atan",Wa="Atanh",Ua="Atan2",Vi="AvgPool",Dc="AvgPoolGrad",Mi="AvgPool3D",Ac="AvgPool3DGrad",zi="BatchMatMul",Bi="BatchToSpaceND",Rc="Bincount",Zf="BroadcastArgs",Ga="Cast",Ha="Ceil",ja="ClipByValue",Oc="Complex",Wi="ComplexAbs",Ui="Concat",Gi="Conv2D",Fc="Conv2DBackpropFilter",Hi="Conv2DBackpropInput",ji="Conv3D",Pc="Conv3DBackpropFilterV2",Lc="Conv3DBackpropInputV2",qa="Cos",Ka="Cosh",Vc="Cumprod",qi="Cumsum",Mc="CropAndResize",zc="DenseBincount",Bc="DepthToSpace",Ki="DepthwiseConv2dNative",Wc="DepthwiseConv2dNativeBackpropFilter",Uc="DepthwiseConv2dNativeBackpropInput",Xi="Dilation2D",Gc="Dilation2DBackpropInput",Hc="Dilation2DBackpropFilter",Xa="RealDiv",Za="Elu",jc="EluGrad",Ya="Erf",Zi="Equal",Qa="Exp",Yi="ExpandDims",Ja="Expm1",Kc="Fill",Xc="FlipLeftRight",eo="Floor",to="FloorDiv",Qi="FusedBatchNorm",Ji="GatherV2",Jf="GatherNd",el="Greater",no="GreaterEqual",so="Identity",Zc="IFFT",Yc="Imag",ro="IsFinite",ao="IsInf",oo="IsNan",tl="LeakyRelu",nl="Less",sl="LessEqual",em="LinSpace",lo="Log",uo="Log1p",rl="LogicalAnd",al="LogicalNot",ol="LogicalOr",il="LRN",Qc="LRNGrad",ll="Max",co="Maximum",ul="MaxPool",Jc="MaxPoolGrad",cl="MaxPool3D",eh="MaxPool3DGrad",tm="MaxPoolWithArgmax",hl="Mean",dl="Min",ho="Minimum",pl="MirrorPad",po="Mod",nm="Multinomial",fo="Multiply",fl="Neg",ml="NotEqual",th="NonMaxSuppressionV3",nh="NonMaxSuppressionV4",sh="NonMaxSuppressionV5",gl="OnesLike",yl="OneHot",xl="Pack",bl="PadV2",mo="Pow",wl="Prelu",vl="Prod",sm="RaggedGather",rm="RaggedRange",am="RaggedTensorToTensor",rh="Range",ah="Real",go="Reciprocal",yo="Relu",Il="Reshape",Sl="ResizeNearestNeighbor",oh="ResizeNearestNeighborGrad",Cl="ResizeBilinear",ih="ResizeBilinearGrad",xo="Relu6",Nl="Reverse",bo="Round",wo="Rsqrt",om="ScatterNd",im="TensorScatterUpdate",lm="SearchSorted",kl="Select",vo="Selu",Tl="Slice",Io="Sin",So="Sinh",Co="Sign",No="Sigmoid",ko="Softplus",To="Sqrt",_l="Sum",$l="SpaceToBatchND",El="SplitV",Dl="Softmax",lh="SparseFillEmptyRows",uh="SparseReshape",ch="SparseSegmentMean",hh="SparseSegmentSum",um="SparseToDense",_o="SquaredDifference",dh="Square",Al="StaticRegexReplace",ph="StridedSlice",fh="StringNGrams",mh="StringSplit",gh="StringToHashBucketFast",$o="Sub",Eo="Tan",Do="Tanh",Ao="Tile",yh="TopK",xh="Transform",ea="Transpose",bh="Unique",Rl="Unpack",Ol="UnsortedSegmentSum",Fl="ZerosLike",Ro="Step",wh="FromPixels",vh="RotateWithOffset",Pl="_FusedMatMul",Ll="FusedConv2D",Vl="FusedDepthwiseConv2D";function En(...n){z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(...n)}function wv(...n){z().getBool("IS_TEST")||z().getBool("PROD")||console.log(...n)}const ta=Tc("kernelRegistry",()=>new Map),Oo=Tc("gradRegistry",()=>new Map);function Ih(n,t){const e=Nh(n,t);return ta.get(e)}function cm(n){return Oo.get(n)}function Sh(n){const t=ta.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,o]=r,[i]=a.split("_");i===n&&e.push(o)}return e}function Ch(n){const{kernelName:t,backendName:e}=n,s=Nh(t,e);ta.has(s)&&En(`The kernel '${t}' for backend '${e}' is already registered`),ta.set(s,n)}function vv(n){const{kernelName:t}=n;Oo.has(t)&&z().getBool("DEBUG")&&En(`Overriding the gradient for '${t}'`),Oo.set(t,n)}function Nh(n,t){return`${t}_${n}`}function hm(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var dm=Q(7658);const br=Q.n(dm)()||dm;function Fo(n){return br.fromString(n,!0,16)}const pm=Fo("c3a5c85c97cb3127"),wr=Fo("b492b66fbe98f273"),cn=Fo("9ae16a3b2f90404f");function kh(n){return n.xor(n.shru(47))}function fm(n,t,e){const s=n.slice(t,t+e);return br.fromBytes(Array.from(s),!0,!0)}function mt(n,t){return fm(n,t,8)}function mm(n,t){return fm(n,t,4)}function qt(n,t){return 0===t?n:n.shru(t).or(n.shl(64-t))}function Us(n,t,e=Fo("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let r=t.xor(s).mul(e);return r=r.xor(r.shru(47)),r=r.mul(e),r}function Ml(n,t,e,s){return function Sv(n,t,e,s,r,a){r=r.add(n),a=qt(a.add(r).add(s),21);const o=r;return r=(r=r.add(t)).add(e),a=a.add(qt(r,44)),[r.add(s),a.add(o)]}(mt(n,t),mt(n,t+8),mt(n,t+16),mt(n,t+24),e,s)}function gm(n,t=n.length){const e=br.fromNumber(81,!0);if(t<=32)return t<=16?function Cv(n,t=n.length){if(t>=8){const e=cn.add(2*t),s=mt(n,0).add(cn),r=mt(n,t-8);return Us(qt(r,37).mul(e).add(s),qt(s,25).add(r).mul(e),e)}if(t>=4){const e=cn.add(2*t);return Us(mm(n,0).shl(3).add(t),mm(n,t-4),e)}if(t>0){const o=t+(n[t-1]<<2);return kh(cn.mul(n[0]+(n[t>>1]<<8)).xor(pm.mul(o))).mul(cn)}return cn}(n,t):function Nv(n,t=n.length){const e=cn.add(2*t),s=mt(n,0).mul(wr),r=mt(n,8),a=mt(n,t-8).mul(e),o=mt(n,t-16).mul(cn);return Us(qt(s.add(r),43).add(qt(a,30)).add(o),s.add(qt(r.add(cn),18)).add(a),e)}(n,t);if(t<=64)return function kv(n,t=n.length){const e=cn.add(2*t),s=mt(n,0).mul(cn),r=mt(n,8),a=mt(n,t-8).mul(e),o=mt(n,t-16).mul(cn),i=qt(s.add(r),43).add(qt(a,30)).add(o),l=Us(i,s.add(qt(r.add(cn),18)).add(a),e),u=mt(n,16).mul(e),c=mt(n,24),h=i.add(mt(n,t-32)).mul(e),d=l.add(mt(n,t-24)).mul(e);return Us(qt(u.add(c),43).add(qt(h,30)).add(d),u.add(qt(c.add(s),18)).add(h),e)}(n,t);let s=e,r=e.mul(wr).add(113),a=kh(r.mul(cn).add(113)).mul(cn),o=[br.UZERO,br.UZERO],i=[br.UZERO,br.UZERO];s=s.mul(cn).add(mt(n,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=qt(s.add(r).add(o[0]).add(mt(n,l+8)),37).mul(wr),r=qt(r.add(o[1]).add(mt(n,l+48)),42).mul(wr),s=s.xor(i[1]),r=r.add(o[0]).add(mt(n,l+40)),a=qt(a.add(i[0]),33).mul(wr),o=Ml(n,l,o[1].mul(wr),s.add(i[0])),i=Ml(n,l+32,a.add(i[1]),r.add(mt(n,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=wr.add(a.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=qt(s.add(r).add(o[0]).add(mt(n,l+8)),37).mul(h),r=qt(r.add(o[1]).add(mt(n,l+48)),42).mul(h),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(mt(n,l+40))),a=qt(a.add(i[0]),33).mul(h),o=Ml(n,l,o[1].mul(h),s.add(i[0])),i=Ml(n,l+32,a.add(i[1]),r.add(mt(n,l+16))),[a,s]=[s,a],Us(Us(o[0],i[0],h).add(kh(r).mul(pm)).add(a),Us(o[1],i[1],h).add(s),h)}function Ts(n,t){return"string"===t?_s(n):Gs([n],t)}function Gs(n,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Hs(n)),z().getBool("DEBUG")&&Bf(n,t),function Tv(n,t){return n instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t}(n,t))return n;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)0!==Math.round(n[s])&&(e[s]=1);return e}throw new Error(`Unknown data type ${t}`)}function hn(){return z().platform.now()}function _v(n,t){return z().platform.fetch(n,t)}function _s(n,t="utf-8"){return t=t||"utf-8",z().platform.encode(n,t)}function $s(n,t="utf-8"){return t=t||"utf-8",z().platform.decode(n,t)}function Bn(n){return null!=z().platform.isTypedArray?z().platform.isTypedArray(n):hm(n)}function Hs(n,t=[],e=!1){if(null==t&&(t=[]),"boolean"==typeof n||"number"==typeof n||"string"==typeof n||Oi(n)||null==n||Bn(n)&&e)t.push(n);else if(Array.isArray(n)||Bn(n))for(let s=0;s<n.length;++s)Hs(n[s],t,e);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Hs(n[r],t,e)}return t}class $v{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Dv)}profileKernel(t,e,s){let r;const a=()=>{r=s()};let o;const i=hn();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(a);else{a();for(const u of r)u.dataSync();o=Promise.resolve({kernelMs:hn()-i})}if(z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{Ev(h,c.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:o.then(u=>u.kernelMs),extraInfo:o.then(u=>null!=u.getExtraProfileInfo?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:a,extraInfo:o}=t;s.forEach(i=>{Promise.all([i.data(),r,o]).then(l=>{this.logger.logKernelProfile(e,i,l[0],l[1],a,l[2])})})}}function Ev(n,t,e){if("float32"!==t)return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class Dv{logKernelProfile(t,e,s,r,a,o){const i="number"==typeof r?vt(`${r}ms`,9):r.error,l=vt(t,25),u=e.rank,c=e.size,h=vt(e.shape.toString(),14);let d="";for(const p in a){const f=a[p];if(null!=f){const g=f.shape||e.shape,m=g.length;d+=`${p}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}\t%c${i}\t%c${u}D ${h}\t%c${c}\t%c${d}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ov(n,t,e,s){const r=ke(t),a=function Fv(n,t,e,s){const r=I(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l="complex64"===e?Vo(n):n;if(i>1)for(let u=0;u<r/a;u++){const c=u*a;for(let h=0;h<a;h++)o[h]=Math.max(o[h],Lo(l[c+h],0,e).length)}return o}(n,t,e,r),o=t.length,i=zl(n,t,e,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join("\n")),l.join("\n")}function Lo(n,t,e){let s;return s=Array.isArray(n)?`${parseFloat(n[0].toFixed(7))} + ${parseFloat(n[1].toFixed(7))}j`:Qr(n)?`'${n}'`:"bool"===e?xm(n):parseFloat(n.toFixed(7)).toString(),vt(s,t)}function xm(n){return 0===n?"false":"true"}function zl(n,t,e,s,r,a=!0){const o="complex64"===e?2:1,i=t[0],l=t.length;if(0===l)return"complex64"===e?[Lo(Vo(n)[0],0,e)]:"bool"===e?[xm(n[0])]:[n[0].toString()];if(1===l){if(i>20){let y=Array.from(n.slice(0,3*o)),x=Array.from(n.slice((i-3)*o,i*o));return"complex64"===e&&(y=Vo(y),x=Vo(x)),["["+y.map((b,w)=>Lo(b,r[w],e)).join(", ")+", ..., "+x.map((b,w)=>Lo(b,r[i-3+w],e)).join(", ")+"]"]}return["["+("complex64"===e?Vo(n):Array.from(n)).map((m,y)=>Lo(m,r[y],e)).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*o,d=[];if(i>20){for(let g=0;g<3;g++){const m=g*h;d.push(...zl(n.slice(m,m+h),u,e,c,r,!1))}d.push("...");for(let g=i-3;g<i;g++){const m=g*h;d.push(...zl(n.slice(m,m+h),u,e,c,r,g===i-1))}}else for(let g=0;g<i;g++){const m=g*h;d.push(...zl(n.slice(m,m+h),u,e,c,r,g===i-1))}const p=2===l?",":"";d[0]="["+(i>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<l;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Vo(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}class nn{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=I(t),null!=s){const r=s.length;S(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||pt(e,this.size),this.strides=ke(t)}set(t,...e){0===e.length&&(e=[0]),S(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e])throw new Error(`Requested out of range element at ${t}.   Buffer shape=${this.shape}`);e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Jn().makeTensor(this.values,this.shape,this.dtype)}}let Jn=null,na=null,bm=null;class Rt{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=I(t),this.strides=ke(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var t=this;return(0,T.Z)(function*(){const e=yield t.data();return na.buffer(t.shape,t.dtype,e)})()}bufferSync(){return na.buffer(this.shape,this.dtype,this.dataSync())}array(){var t=this;return(0,T.Z)(function*(){const e=yield t.data();return zn(t.shape,e,"complex64"===t.dtype)})()}arraySync(){return zn(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var t=this;return(0,T.Z)(function*(){t.throwIfDisposed();const e=Jn().read(t.dataId);if("string"===t.dtype){const s=yield e;try{return s.map(r=>$s(r))}catch(r){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})()}dataToGPU(t){return this.throwIfDisposed(),Jn().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Jn().readSync(this.dataId);if("string"===this.dtype)try{return t.map(e=>$s(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){var t=this;return(0,T.Z)(function*(){t.throwIfDisposed();const e=yield Jn().read(t.dataId);return"string"===t.dtype?e:new Uint8Array(e.buffer)})()}dispose(){this.isDisposed||(Jn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return na.print(this,t)}clone(){return this.throwIfDisposed(),na.clone(this)}toString(t=!1){return Ov(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),na.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),Jn().makeVariable(this,t,e,s)}}function q(){return Tc("Tensor",()=>Rt)}Object.defineProperty(Rt,Symbol.hasInstance,{value:n=>!!n&&null!=n.data&&null!=n.dataSync&&null!=n.throwIfDisposed}),q();class Bl extends Rt{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!de(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Jn().disposeTensor(this),this.dataId=t.dataId,Jn().incRef(this,null)}dispose(){Jn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Bl,Symbol.hasInstance,{value:n=>n instanceof Rt&&null!=n.assign&&n.assign instanceof Function});var Wl=(()=>{return(n=Wl||(Wl={})).float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64",Wl;var n})(),Ul=(()=>{return(n=Ul||(Ul={})).float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64",Ul;var n})(),Gl=(()=>{return(n=Gl||(Gl={})).float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64",Gl;var n})(),Hl=(()=>{return(n=Hl||(Hl={})).float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64",Hl;var n})();const Mv={float32:Gl,int32:Wl,bool:Ul,complex64:Hl};function Cn(n,t){if("string"===n||"string"===t){if("string"===n&&"string"===t)return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return Mv[n][t]}function _h(n){return Cn(n,"int32")}function wm(n){return null!=n&&"object"==typeof n&&"texture"in n&&n.texture instanceof WebGLTexture}function vm(n){return"undefined"!=typeof GPUBuffer&&null!=n&&"object"==typeof n&&"buffer"in n&&n.buffer instanceof GPUBuffer}function Dt(n,t){if(n.dtype===t.dtype)return[n,t];const e=Cn(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function Im(n){const t=[];return Sm(n,t,new Set),t}function Sm(n,t,e){if(null==n)return;if(n instanceof Rt)return void t.push(n);if(!function zv(n){return Array.isArray(n)||"object"==typeof n}(n))return;const s=n;for(const r in s){const a=s[r];e.has(a)||(e.add(a),Sm(a,t,e))}}function $h(n){return null!=n.kernelName}class Cm{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}let Bv=(()=>{class n{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Cm}ready(){var e=this;return(0,T.Z)(function*(){if(null!=e.pendingBackendInit)return e.pendingBackendInit.then(()=>{});if(null!=e.backendInstance)return;const s=e.getSortedBackends();for(let r=0;r<s.length;r++){const a=s[r];if(yield e.initializeBackend(a).success)return void(yield e.setBackend(a))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:s}=this.initializeBackendsAndReturnBest();if(s)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:s}=this.initializeBackend(e);if(s)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,s,r=1){return e in this.registryFactory?(En(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:s,priority:r},!0)}setBackend(e){var s=this;return(0,T.Z)(function*(){if(null==s.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(s.backendName=e,null==s.registry[e]){s.backendInstance=null;const{success:r,asyncInit:a}=s.initializeBackend(e);if(!(a?yield r:r))return!1}return s.backendInstance=s.registry[e],s.setupRegisteredKernels(),s.profiler=new $v(s.backendInstance),!0})()}setupRegisteredKernels(){Sh(this.backendName).forEach(s=>{null!=s.setupFunc&&s.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Sh(e).forEach(r=>{null!=r.disposeFunc&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const s=this.registryFactory[e];if(null==s)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=s.factory();if(!r||r instanceof L||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const a=++this.pendingBackendInitId,o=r.then(i=>!(a<this.pendingBackendInitId||(this.registry[e]=i,this.pendingBackendInit=null,0))).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,En(`Initialization of backend ${e} failed`),En(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}}catch(r){return En(`Initialization of backend ${e} failed`),En(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,s)=>this.registryFactory[s].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let s=0;s<e.length;s++){const r=e[s],{success:a,asyncInit:o}=this.initializeBackend(r);if(o||a)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,s){const r=this.state.tensorInfo.get(s),a=r.backend,o=this.readSync(s),i=a.refCount(s);a.disposeData(s,!0),r.backend=e,e.move(s,o,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,s){let a,r=null;if(null==s){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");s=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof s)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(a),()=>(a=s(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,s,r){e();try{const a=r();return s(),a}catch(a){throw s(),a}}nextTensorId(){return n.nextTensorId++}nextVariableId(){return n.nextVariableId++}clone(e){const s=R.runKernel(so,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[s],i=>({x:()=>R.runKernel(Ga,{x:i},{dtype:"float32"})}),[],{}),s}runKernel(e,s,r){if(null==Ih(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:s,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,s,r){const a=this.backend.numDataIds();let o=0;r.forEach(u=>{o+="complex64"===u.dtype?3:1});const l=a-s-o-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let s,r=[];const a=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;let l,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const c=$h(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if($h(e)){const{kernelName:g,inputs:m,attrs:y}=e,x=Ih(g,this.backendName);S(null!=x,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{const b=this.backend.numDataIds();u=x.kernelFunc({inputs:m,attrs:y,backend:this.backend});const w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,b,w);const v=w.map(C=>null!=C.rank?C:this.makeTensorFromTensorInfo(C));if(a){const C=this.getTensorsForGradient(g,m,v);r=this.saveTensorsForBackwardMode(C)}return v}}else{const{forwardFunc:g}=e,m=y=>{!a||(r=y.map(x=>this.keep(this.clone(x))))};l=()=>{const y=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,m));const x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,x),x}}const{inputs:h,attrs:d}=e,p=$h(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,h,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),s=f.outputs):s=l()}),a&&this.addTapeNode(c,h,s,p,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(g=>null!=h[g]?h[g].shape:null),outputShapes:s.map(g=>g.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?s:s[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,s,r){const a=cm(e);if(null!=a){const o=a.inputsToSave||[],i=a.outputsToSave||[];let l;a.saveAllInputs?(S(Array.isArray(s),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(s).map(c=>s[c])):l=o.map(c=>s[c]);const u=r.filter((c,h)=>i[h]);return l.concat(u)}return[]}makeTensor(e,s,r,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");a=a||this.backend;let o=e;"string"===(r=r||"float32")&&Qr(e[0])&&(o=e.map(u=>_s(u)));const i=a.write(o,s,r),l=new Rt(s,r,i,this.nextTensorId());if(this.trackTensor(l,a),"string"===r){const u=this.state.tensorInfo.get(i),c=Uf(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,s,r,a){return this.makeTensorFromTensorInfo({dataId:e,shape:s,dtype:r=r||"float32"},a)}makeTensorFromTensorInfo(e,s){const{dataId:r,shape:a,dtype:o}=e,i=new Rt(a,o,r,this.nextTensorId());return this.trackTensor(i,s),i}makeVariable(e,s=!0,r,a){r=r||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const o=new Bl(e,s,r,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,s){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*Pa(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:s||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Bl||this.track(e)}incRef(e,s){this.trackTensor(e,s),this.backend.incRef(e.dataId)}removeDataId(e,s){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===s&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const s=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=s.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const r=e.size*Pa(e.dtype);this.state.numBytes-=r}s.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,s.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){var s=this;return(0,T.Z)(function*(){s.state.profiling=!0;const r=s.state.numBytes,a=s.state.numTensors;s.state.activeProfile.kernels=[],s.state.activeProfile.result=yield e(),s.state.profiling=!1,s.state.activeProfile.peakBytes=Math.max(...s.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),s.state.activeProfile.newBytes=s.state.numBytes-r,s.state.activeProfile.newTensors=s.state.numTensors-a;for(const o of s.state.activeProfile.kernels)o.kernelTimeMs=yield o.kernelTimeMs,o.extraInfo=yield o.extraInfo;return s.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,s,r,a,o,i){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:s,outputs:r,saved:o},u=cm(e);null!=u&&(a=u.gradFunc),null!=a&&(l.gradient=c=>(c=c.map((h,d)=>{if(null==h){const p=r[d],f=tn(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return h}),a(c.length>1?c:c[0],o,i))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const s={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(s.name=e),this.state.scopeStack.push(s),this.state.activeScope=s}endScope(e){const s=Im(e),r=new Set(s.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!r.has(i.id)&&i.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],s.forEach(o=>{!o.kept&&o.scopeId===a.id&&this.track(o)})}gradients(e,s,r,a=!1){if(S(s.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));S(o instanceof Rt,()=>"The result y returned by f() must be a tensor.");const i=function Av(n,t,e){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){u.outputs.forEach(g=>s[g.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const a={};a[e.id]=!0;const o={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(a[u.outputs[h].id]){for(const d in c)a[c[d].id]=!0,o[u.id]=!0;break}}const i=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&o[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,i.push(h)}}return i}(this.state.activeTape,s,o);if(!a&&0===i.length&&s.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[o.id]=null==r?function Wv(n){const t=Ri(I(n),"float32");return R.makeTensor(t,n,"float32")}(o.shape):r,function Rv(n,t,e,s){for(let r=t.length-1;r>=0;r--){const a=t[r],o=[];if(a.outputs.forEach(l=>{const u=n[l.id];o.push(null!=u?u:null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);const u=e(()=>i[l]());if("float32"!==u.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=a.inputs[l];if(!de(u.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(null==n[c.id])n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}(l,i,c=>this.tidy(c),Uv);const u=s.map(c=>l[c.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(c=>{for(const h of c.saved)h.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return S(Di(e),()=>"The f passed in customGrad(f) must be a function."),(...s)=>{let r;S(s.every(l=>l instanceof Rt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const a={};return s.forEach((l,u)=>{a[u]=l}),this.runKernelFunc({forwardFunc:(l,u)=>(r=e(...s,u),S(r.value instanceof Rt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),S(Di(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(l,u)=>{const c=r.gradFunc(l,u),h=Array.isArray(c)?c:[c];S(h.length===s.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),S(h.every(p=>p instanceof Rt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return h.forEach((p,f)=>{d[f]=()=>p}),d},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,s){return this.state.tensorInfo.get(e).backend.readToGPU(e,s)}time(e){var s=this;return(0,T.Z)(function*(){const r=hn(),a=yield s.backend.time(e);return a.wallMs=hn()-r,a})()}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Cm;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return n.nextTensorId=0,n.nextVariableId=0,n})();function Nm(){const n=Xf();if(null==n._tfengine){const t=new dv(n);n._tfengine=new Bv(t)}return function gv(n){Kf=n}(n._tfengine.ENV),function Pv(n){Jn=n}(()=>n._tfengine),n._tfengine}const R=Nm();function Uv(n,t){return R.runKernel(Jr,{a:n,b:t})}function km(n){if(n||function Gv(){return"undefined"!=typeof navigator&&null!=navigator}()){if(n||(n=navigator),"ReactNative"===n.product)return!0;const t=n.userAgent||n.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Tm(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const wn=z();function Mo(n,t){let e=n;if(Bn(n))return"string"===t?[]:[n.length];if(wm(n))return[n.height,n.width*(n.channels||"RGBA").length];if(vm(n))return[n.buffer.size/(null==t?4:Pa(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||Bn(e)&&"string"!==t;)s.push(e.length),e=e[0];return Array.isArray(n)&&z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&_m(n,s,[]),s}function _m(n,t,e){if(e=e||[],!Array.isArray(n)&&!Bn(n))return void S(0===t.length,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);S(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),S(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)_m(n[r],s,e.concat(r))}function $m(n,t,e,s){if("string_or_numeric"!==n){if(null==n)throw new Error("Expected dtype cannot be null.");if("numeric"!==n&&n!==t||"numeric"===n&&"string"===t)throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function N(n,t,e,s="numeric"){if(n instanceof Rt)return $m(s,n.dtype,t,e),n;let r=yr(n);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),$m(s,r,t,e),null==n||!Bn(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${null==n?"null":n.constructor.name}'`);const a=Mo(n,r);!Bn(n)&&!Array.isArray(n)&&(n=[n]);const i="string"!==r?Gs(n,r):Hs(n,[],!0);return R.makeTensor(i,a,r)}function Em(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((a,o)=>N(a,`${t}[${o}]`,e,s))}function O(n){const t=Object.keys(n);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e+="__op";const r=(...a)=>{R.startScope(e);try{const o=s(...a);return Oi(o)&&console.error("Cannot return a Promise inside of tidy."),R.endScope(o),o}catch(o){throw R.endScope(null),o}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}wn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),wn.registerFlag("IS_BROWSER",()=>Tm()),wn.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),wn.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),wn.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),wn.registerFlag("PROD",()=>!1),wn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>wn.getBool("DEBUG")),wn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),wn.registerFlag("IS_TEST",()=>!1),wn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>wn.getBool("DEBUG")),wn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),wn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),wn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const vr=O({complex_:function jv(n,t){const e=N(n,"real","complex"),s=N(t,"imag","complex");return ee(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`),R.runKernel(Oc,{real:e,imag:s})}});function zo(n,t,e,s){if(null==s)s=yr(n);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(vm(n)||wm(n)){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return R.backend.createTensorFromGPUData(n,t||e,s)}if(!Bn(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){cs(t);const r=I(t),a=I(e);S(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<e.length;++o){const i=e[o],l=o!==e.length-1||i!==I(t.slice(o));S(e[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Bn(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n="string"!==s?Gs(n,s):Hs(n,[],!0),R.makeTensor(n,t,s)}function Bo(n,t,e){return zo(n,t,Mo(n,e),e)}const Dh={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function Dm(n,t){return Ah.apply(this,arguments)}function Ah(){return Ah=(0,T.Z)(function*(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<r.length;++o){const i=r[o],l=Array.isArray(n)?n[o].tensor:n[i];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);const u={name:i,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){const c=new Promise(function(){var h=(0,T.Z)(function*(d){const p=yield l.bytes(),f=p.reduce((y,x)=>y+x.length,0)+4*p.length,g=new Uint8Array(f);let m=0;for(let y=0;y<p.length;y++){const x=p[y],b=new Uint8Array(new Uint32Array([x.length]).buffer);g.set(b,m),m+=4,g.set(x,m),m+=x.length}d(g)});return function(d){return h.apply(this,arguments)}}());s.push(c)}else s.push(l.data());null!=t&&(u.group=t),e.push(u)}return{data:qv(yield Promise.all(s)),specs:e}}),Ah.apply(this,arguments)}function qv(n){if(null===n)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(a=>{if(t+=a.byteLength,e.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}const Rh="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Rm(n){return Rh?Buffer.byteLength(n):new Blob([n]).size}function Oh(n){if(1===n.length)return n[0];let t=0;n.forEach(r=>{t+=r.byteLength});const e=new Uint8Array(t);let s=0;return n.forEach(r=>{e.set(new Uint8Array(r),s),s+=r.byteLength}),e.buffer}function Fm(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return null!=n.signature&&(e.signature=n.signature),null!=n.userDefinedMetadata&&(e.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(e.modelInitializer=n.modelInitializer),null!=n.initializerSignature&&(e.initializerSignature=n.initializerSignature),null!=n.trainingConfig&&(e.trainingConfig=n.trainingConfig),e}function Zv(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(null!=n.trainingConfig&&(s.trainingConfig=n.trainingConfig),null!=n.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return null!=n.signature&&(s.signature=n.signature),null!=n.userDefinedMetadata&&(s.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(s.modelInitializer=n.modelInitializer),null!=n.initializerSignature&&(s.initializerSignature=n.initializerSignature),s}function Fh(){return(Fh=(0,T.Z)(function*(n,t){let e,s;return null!=n.weightsManifest&&([e,s]=yield t(n.weightsManifest)),Zv(n,e,s)})).apply(this,arguments)}function ql(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==n.modelTopology?0:Rm(JSON.stringify(n.modelTopology)),weightSpecsBytes:null==n.weightSpecs?0:Rm(JSON.stringify(n.weightSpecs)),weightDataBytes:null==n.weightData?0:n.weightData.byteLength}}function tI(){const n=function Qv(){const n=e=>{let s=e<<13,r=0;for(;0==(8388608&s);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function Jv(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}(),e=function eI(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){const i=s[o];a[o]=n[e[i>>10]+(1023&i)]+t[i>>10]}return new Float32Array(r)}}class Tt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Tt.instance&&(Tt.instance=new Tt),Tt.instance}static registerSaveRouter(t){Tt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Tt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Tt.getHandlers(t,"save")}static getLoadHandlers(t,e){return Tt.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return("load"===e?Tt.getInstance().loadRouters:Tt.getInstance().saveRouters).forEach(o=>{const i=o(t,s);null!==i&&r.push(i)}),r}}const sI=(n,t)=>Tt.getLoadHandlers(n,t),Kl="tensorflowjs",Ir="models_store",js="model_info_store";function Vh(){if(!z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n="undefined"==typeof window?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Mh(n){const t=n.result;t.createObjectStore(Ir,{keyPath:"modelPath"}),t.createObjectStore(js,{keyPath:"modelPath"})}let sa=(()=>{class n{constructor(e){if(this.indexedDB=Vh(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){var s=this;return(0,T.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return s.databaseAction(s.modelPath,e)})()}load(){var e=this;return(0,T.Z)(function*(){return e.databaseAction(e.modelPath)})()}databaseAction(e,s){return new Promise((r,a)=>{const o=this.indexedDB.open(Kl,1);o.onupgradeneeded=()=>Mh(o),o.onsuccess=()=>{const i=o.result;if(null==s){const l=i.transaction(Ir,"readonly"),c=l.objectStore(Ir).get(this.modelPath);c.onsuccess=()=>{if(null==c.result)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=h=>(i.close(),a(c.error)),l.oncomplete=()=>i.close()}else{const l=ql(s),u=i.transaction(js,"readwrite");let h,d,c=u.objectStore(js);try{h=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(p){return a(p)}h.onsuccess=()=>{d=i.transaction(Ir,"readwrite");const p=d.objectStore(Ir);let f;try{f=p.put({modelPath:this.modelPath,modelArtifacts:s,modelArtifactsInfo:l})}catch(g){return a(g)}f.onsuccess=()=>r({modelArtifactsInfo:l}),f.onerror=g=>{c=u.objectStore(js);const m=c.delete(this.modelPath);m.onsuccess=()=>(i.close(),a(f.error)),m.onerror=y=>(i.close(),a(f.error))}},h.onerror=p=>(i.close(),a(h.error)),u.oncomplete=()=>{null==d?i.close():d.oncomplete=()=>i.close()}}},o.onerror=i=>a(o.error)})}}return n.URL_SCHEME="indexeddb://",n})();const Lm=n=>z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(sa.URL_SCHEME)?function rI(n){return new sa(n)}(n.slice(sa.URL_SCHEME.length)):null;Tt.registerSaveRouter(Lm),Tt.registerLoadRouter(Lm);class oI{constructor(){this.indexedDB=Vh()}listModels(){var t=this;return(0,T.Z)(function*(){return new Promise((e,s)=>{const r=t.indexedDB.open(Kl,1);r.onupgradeneeded=()=>Mh(r),r.onsuccess=()=>{const a=r.result,o=a.transaction(js,"readonly"),l=o.objectStore(js).getAll();l.onsuccess=()=>{const u={};for(const c of l.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},l.onerror=u=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()},r.onerror=a=>s(r.error)})})()}removeModel(t){var e=this;return(0,T.Z)(function*(){return t=function aI(n){return n.startsWith(sa.URL_SCHEME)?n.slice(sa.URL_SCHEME.length):n}(t),new Promise((s,r)=>{const a=e.indexedDB.open(Kl,1);a.onupgradeneeded=()=>Mh(a),a.onsuccess=()=>{const o=a.result,i=o.transaction(js,"readwrite"),l=i.objectStore(js),u=l.get(t);let c;u.onsuccess=()=>{if(null==u.result)return o.close(),r(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const h=l.delete(t),d=()=>{c=o.transaction(Ir,"readwrite");const f=c.objectStore(Ir).delete(t);f.onsuccess=()=>s(u.result.modelArtifactsInfo),f.onerror=g=>r(u.error)};h.onsuccess=d,h.onerror=p=>(d(),o.close(),r(u.error))}},u.onerror=h=>(o.close(),r(u.error)),i.oncomplete=()=>{null==c?o.close():c.oncomplete=()=>o.close()}},a.onerror=o=>r(a.error)})})()}}const hs="/",Sr="tensorflowjs_models",Vm="info",iI="model_topology",lI="weight_specs",uI="weight_data",cI="model_metadata";function Mm(n){return{info:[Sr,n,Vm].join(hs),topology:[Sr,n,iI].join(hs),weightSpecs:[Sr,n,lI].join(hs),weightData:[Sr,n,uI].join(hs),modelMetadata:[Sr,n,cI].join(hs)}}function zm(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function Bm(n){const t=n.split(hs);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(hs)}let ra=(()=>{class n{constructor(e){if(!z().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Mm(this.modelPath)}save(e){var s=this;return(0,T.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const r=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),o=ql(e);try{return s.LS.setItem(s.keys.info,JSON.stringify(o)),s.LS.setItem(s.keys.topology,r),s.LS.setItem(s.keys.weightSpecs,a),s.LS.setItem(s.keys.weightData,function Kv(n){if(Rh)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}(e.weightData)),s.LS.setItem(s.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:o}}catch(i){throw zm(s.keys),new Error(`Failed to save model '${s.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}})()}load(){var e=this;return(0,T.Z)(function*(){const s=JSON.parse(e.LS.getItem(e.keys.info));if(null==s)throw new Error(`In local storage, there is no model with name '${e.modelPath}'`);if("JSON"!==s.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const r={},a=JSON.parse(e.LS.getItem(e.keys.topology));if(null==a)throw new Error(`In local storage, the topology of model '${e.modelPath}' is missing.`);r.modelTopology=a;const o=JSON.parse(e.LS.getItem(e.keys.weightSpecs));if(null==o)throw new Error(`In local storage, the weight specs of model '${e.modelPath}' are missing.`);r.weightSpecs=o;const i=e.LS.getItem(e.keys.modelMetadata);if(null!=i){const u=JSON.parse(i);r.format=u.format,r.generatedBy=u.generatedBy,r.convertedBy=u.convertedBy,null!=u.signature&&(r.signature=u.signature),null!=u.userDefinedMetadata&&(r.userDefinedMetadata=u.userDefinedMetadata),null!=u.modelInitializer&&(r.modelInitializer=u.modelInitializer),null!=u.initializerSignature&&(r.initializerSignature=u.initializerSignature),null!=u.trainingConfig&&(r.trainingConfig=u.trainingConfig)}const l=e.LS.getItem(e.keys.weightData);if(null==l)throw new Error(`In local storage, the binary weight values of model '${e.modelPath}' are missing.`);return r.weightData=function Xv(n){if(Rh){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}(l),r})()}}return n.URL_SCHEME="localstorage://",n})();const Wm=n=>z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ra.URL_SCHEME)?function dI(n){return new ra(n)}(n.slice(ra.URL_SCHEME.length)):null;Tt.registerSaveRouter(Wm),Tt.registerLoadRouter(Wm);class pI{constructor(){S(z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),S("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var t=this;return(0,T.Z)(function*(){const e={},s=Sr+hs,r=hs+Vm;for(let a=0;a<t.LS.length;++a){const o=t.LS.key(a);o.startsWith(s)&&o.endsWith(r)&&(e[Bm(o)]=JSON.parse(t.LS.getItem(o)))}return e})()}removeModel(t){var e=this;return(0,T.Z)(function*(){const s=Mm(t=function hI(n){return n.startsWith(ra.URL_SCHEME)?n.slice(ra.URL_SCHEME.length):n}(t));if(null==e.LS.getItem(s.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(e.LS.getItem(s.info));return zm(s),r})()}}class dn{constructor(){this.managers={}}static getInstance(){return null==dn.instance&&(dn.instance=new dn),dn.instance}static registerManager(t,e){S(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),S(t.length>0,()=>"scheme must not be an empty string.");const s=dn.getInstance();S(null==s.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=dn.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(dn.getInstance().managers)}}class fI{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){"undefined"!=typeof window&&z().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{s.source===window&&s.data.name===this.messageName&&(s.stopPropagation(),(0,this.functionRefs[s.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(t,e)}isTypedArray(t){return hm(t)}}if(z().get("IS_BROWSER")){z().setPlatform("browser",new fI);try{dn.registerManager(ra.URL_SCHEME,new pI)}catch(n){}try{dn.registerManager(sa.URL_SCHEME,new oI)}catch(n){}}let oa;function Ge(n,t="float32",e){return t=t||"float32",cs(n),new nn(n,t,e)}z().get("IS_NODE")&&!z().get("IS_BROWSER")&&z().setPlatform("node",new class gI{constructor(){this.util=Q(8628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=z().global.fetch?z().global.fetch(t,e):(null==oa&&(oa=Q(5410)),oa(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}});const ge=O({cast_:function yI(n,t){const e=N(n,"x","cast");if(!Wf(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==e.dtype||"string"!==t&&"string"===e.dtype)throw new Error("Only strings can be casted to strings");return R.runKernel(Ga,{x:e},{dtype:t})}}),Cr=O({clone_:function xI(n){const e={x:N(n,"x","clone","string_or_numeric")};return R.runKernel(so,e)}});function ds(){return R}function Hh(){return R.memory()}function V(n,t){return R.tidy(n,t)}function We(n){Im(n).forEach(e=>e.dispose())}function ps(n){return R.keep(n)}function Gm(n,t,e=1){return R.registerBackend(n,t,e)}Nm(),function Lv(n){na=n}({buffer:Ge,cast:ge,clone:Cr,print:function bI(n,t=!1){console.log(n.toString(t))}}),function Vv(n){bm=n}(function wI(n){z().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")});const oe=O({add_:function II(n,t){let e=N(n,"a","add"),s=N(t,"b","add");return[e,s]=Dt(e,s),R.runKernel(Jr,{a:e,b:s})}}),Hm=O({floorDiv_:function SI(n,t){let e=N(n,"a","floorDiv"),s=N(t,"b","floorDiv");return[e,s]=Dt(e,s),R.runKernel(to,{a:e,b:s})}}),Te=O({div_:function CI(n,t){let e=N(n,"a","div"),s=N(t,"b","div");return[e,s]=Dt(e,s),"int32"===e.dtype&&"int32"===s.dtype?Hm(e,s):R.runKernel(Xa,{a:e,b:s},{})}}),D=O({mul_:function NI(n,t){let e=N(n,"a","mul"),s=N(t,"b","mul");return[e,s]=Dt(e,s),R.runKernel(fo,{a:e,b:s})}}),pn=O({sqrt_:function kI(n){const e={x:N(n,"x","sqrt","float32")};return R.runKernel(To,e)}}),gt=O({square_:function TI(n){const t=N(n,"x","square");return R.runKernel("Square",{x:t},{})}}),Qe=O({zerosLike_:function _I(n){const e={x:N(n,"x","zerosLike")};return R.runKernel(Fl,e)}});function Es(n){return R.customGrad(n)}function Ve(n,t){if((Bn(n)&&"string"!==t||Array.isArray(n))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Bn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return zo(n,[],[],t)}class Nr{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Dn{constructor(){this.classNameMap={}}static getMap(){return null==Dn.instance&&(Dn.instance=new Dn),Dn.instance}static register(t){Dn.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function te(n){S(null!=n.className,()=>"Class being registered does not have the static className property defined."),S("string"==typeof n.className,()=>"className is required to be a string, but got type "+typeof n.className),S(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Dn.register(n)}class qs extends Nr{minimize(t,e=!1,s){const{value:r,grads:a}=this.computeGradients(t,s);if(null!=s){const o=s.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(o)}else this.applyGradients(a);return We(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function $I(n,t){S(Di(n),()=>"The f passed in variableGrads(f) must be a function"),S(null==t||Array.isArray(t)&&t.every(u=>u instanceof Bl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=null!=t;if(!e){t=[];for(const u in R.registeredVariables)t.push(R.registeredVariables[u])}const s=e?t.filter(u=>!u.trainable):null,r=t.length;S((t=t.filter(u=>u.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const{value:o,grads:i}=R.gradients(n,t,null,!0);S(i.some(u=>null!=u),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),S(0===o.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((u,c)=>{null!=i[c]&&(l[u.name]=i[c])}),null!=s&&s.forEach(u=>l[u.name]=null),{value:o,grads:l}}(t,e)}dispose(){null!=this.iterations_&&We(this.iterations_)}saveIterations(){var t=this;return(0,T.Z)(function*(){return null==t.iterations_&&(t.iterations_=0),{name:"iter",tensor:Ve(t.iterations_,"int32")}})()}getWeights(){return(0,T.Z)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(t){var e=this;return(0,T.Z)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${e.getClassName()}`)})()}extractIterations(t){var e=this;return(0,T.Z)(function*(){return e.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})()}}Object.defineProperty(qs,Symbol.hasInstance,{value:n=>null!=n.minimize&&null!=n.computeGradients&&null!=n.applyGradients});class jm extends qs{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==s&&(this.epsilon=R.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=R.registeredVariables[s];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:V(()=>Qe(a).variable(!1))}),null==this.accumulatedUpdates[r]&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:V(()=>Qe(a).variable(!1))});const i=Array.isArray(t)?t[r].tensor:t[s];if(null==i)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;V(()=>{const c=oe(D(l,this.rho),D(gt(i),1-this.rho)),h=D(Te(pn(oe(u,this.epsilon)),pn(oe(l,this.epsilon))),i),d=oe(D(u,this.rho),D(gt(h),1-this.rho));l.assign(c),u.assign(d);const p=oe(D(h,-this.learningRate),a);a.assign(p)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(We(this.accumulatedGrads.map(t=>t.variable)),We(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){var t=this;return(0,T.Z)(function*(){const e=[...t.accumulatedGrads,...t.accumulatedUpdates];return[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){const s=(t=yield e.extractIterations(t)).length/2;e.accumulatedGrads=t.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),e.accumulatedUpdates=t.slice(s,2*s).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function Wo(n,t,e){return cs(n),e=e||yr(t),R.runKernel(Kc,{},{shape:n,value:t,dtype:e})}class qm extends qs{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=R.registeredVariables[s];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:V(()=>Wo(a.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[r].tensor:t[s];if(null==o)return;const i=this.accumulatedGrads[r].variable;V(()=>{const l=oe(i,gt(o));i.assign(l);const u=oe(D(Te(o,pn(oe(l,R.backend.epsilon()))),-this.learningRate),a);a.assign(u)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&We(this.accumulatedGrads.map(t=>t.variable))}getWeights(){var t=this;return(0,T.Z)(function*(){return[yield t.saveIterations()].concat(t.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){t=yield e.extractIterations(t),e.accumulatedGrads=t.map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}const ia=O({pow_:function EI(n,t){let e=N(n,"base","pow"),s=N(t,"exp","pow");return[e,s]=Dt(e,s),R.runKernel(mo,{a:e,b:s})}}),Ie=O({sub_:function DI(n,t){let e=N(n,"a","sub"),s=N(t,"b","sub");return[e,s]=Dt(e,s),R.runKernel($o,{a:e,b:s})}});class Km extends qs{static get className(){return"Adam"}constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=Ve(e).variable(),this.accBeta2=Ve(s).variable()}),null==r&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);V(()=>{const s=Ie(1,this.accBeta1),r=Ie(1,this.accBeta2);e.forEach((a,o)=>{const i=R.registeredVariables[a];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:`${a}/m`,variable:V(()=>Qe(i).variable(!1))}),null==this.accumulatedSecondMoment[o]&&(this.accumulatedSecondMoment[o]={originalName:`${a}/v`,variable:V(()=>Qe(i).variable(!1))});const u=Array.isArray(t)?t[o].tensor:t[a];if(null==u)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=oe(D(c,this.beta1),D(u,1-this.beta1)),p=oe(D(h,this.beta2),D(gt(u),1-this.beta2)),f=Te(d,s),g=Te(p,r);c.assign(d),h.assign(p);const m=oe(D(Te(f,oe(pn(g),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(D(this.accBeta1,this.beta1)),this.accBeta2.assign(D(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&We(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&We(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){var t=this;return(0,T.Z)(function*(){const e=[...t.accumulatedFirstMoment,...t.accumulatedSecondMoment];return[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){t=yield e.extractIterations(t),V(()=>{e.accBeta1.assign(ia(e.beta1,e.iterations_+1)),e.accBeta2.assign(ia(e.beta2,e.iterations_+1))});const s=t.length/2;e.accumulatedFirstMoment=t.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),e.accumulatedSecondMoment=t.slice(s,2*s).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}const Kt=O({abs_:function AI(n){const t=N(n,"x","abs");return R.runKernel("complex64"===t.dtype?Wi:Fi,{x:t})}});function la(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const a=e-1-r,o=n[a]||1;(t[t.length-1-r]||1)>1&&1===o&&s.unshift(a)}return s}function Bt(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],a=t.length-s-1,o=t[a];(null==r||1===r&&o>1)&&e.unshift(a)}return e}function Me(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let r=0;r<e;r++){let a=n[n.length-r-1];null==a&&(a=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===a)s[e-r-1]=o;else if(1===o)s[e-r-1]=a;else{if(a!==o)throw Error(`Operands could not be broadcast together with shapes ${n} and ${t}.`);s[e-r-1]=a}}return s}const Ks=O({maximum_:function RI(n,t){let e=N(n,"a","maximum"),s=N(t,"b","maximum");return[e,s]=Dt(e,s),"bool"===e.dtype&&(e=ge(e,"int32"),s=ge(s,"int32")),Me(e.shape,s.shape),R.runKernel(co,{a:e,b:s})}});class Xm extends qs{static get className(){return"Adamax"}constructor(t,e,s,r=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=Ve(0).variable(),this.accBeta1=Ve(e).variable()}),null==r&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);V(()=>{const s=Ie(1,this.accBeta1),r=Te(-this.learningRate,oe(D(this.iteration,this.decay),1));e.forEach((a,o)=>{const i=R.registeredVariables[a];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:`${a}/m`,variable:Qe(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[o]&&(this.accumulatedWeightedInfNorm[o]={originalName:`${a}/v`,variable:Qe(i).variable(!1)});const u=Array.isArray(t)?t[o].tensor:t[a];if(null==u)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=oe(D(c,this.beta1),D(u,1-this.beta1)),p=D(h,this.beta2),f=Kt(u),g=Ks(p,f);c.assign(d),h.assign(g);const m=oe(D(Te(r,s),Te(d,oe(g,this.epsilon))),i);i.assign(m)}),this.iteration.assign(oe(this.iteration,1)),this.accBeta1.assign(D(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&We(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&We(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return(0,T.Z)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(t){return(0,T.Z)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}class jh extends qs{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=Array.isArray(t)?t[r].tensor:t[s];if(null==a)return;const o=R.registeredVariables[s];V(()=>{const i=oe(D(this.c,a),o);o.assign(i)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=ps(Ve(-t))}dispose(){this.c.dispose()}getWeights(){var t=this;return(0,T.Z)(function*(){return[yield t.saveIterations()]})()}setWeights(t){var e=this;return(0,T.Z)(function*(){if(0!==(t=yield e.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}class Zm extends jh{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Ve(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=R.registeredVariables[s];null==this.accumulations[r]&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:V(()=>Qe(a).variable(!1))});const o=this.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[s];null!=i&&V(()=>{let l;const u=oe(D(this.m,o),i);l=oe(D(this.c,this.useNesterov?oe(i,D(u,this.m)):u),a),o.assign(u),a.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&We(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){var t=this;return(0,T.Z)(function*(){return[yield t.saveIterations()].concat(t.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){t=yield e.extractIterations(t),e.accumulations=t.map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}class Ym extends qs{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,r=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=R.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=R.registeredVariables[s],o=!1;null==this.accumulatedMeanSquares[r]&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:V(()=>Qe(a).variable(o))}),null==this.accumulatedMoments[r]&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:V(()=>Qe(a).variable(o))}),null==this.accumulatedMeanGrads[r]&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:V(()=>Qe(a).variable(o))});const i=Array.isArray(t)?t[r].tensor:t[s];if(null==i)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;V(()=>{const c=oe(D(l,this.decay),D(gt(i),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=oe(D(h,this.decay),D(i,1-this.decay)),p=Te(D(i,this.learningRate),pn(Ie(c,oe(gt(d),this.epsilon)))),f=oe(D(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const g=Ie(a,f);a.assign(g)}else{const h=oe(D(l,this.decay),D(gt(i),1-this.decay)),d=oe(D(u,this.momentum),Te(D(i,this.learningRate),pn(oe(h,this.epsilon))));l.assign(h),u.assign(d);const p=Ie(a,d);a.assign(p)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&We(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&We(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&We(this.accumulatedMoments.map(t=>t.variable))}getWeights(){var t=this;return(0,T.Z)(function*(){const e=[...t.accumulatedMeanSquares,...t.accumulatedMoments];return t.centered&&e.push(...t.accumulatedMeanGrads),[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){t=yield e.extractIterations(t);const s=e.centered?t.length/3:t.length/2,r=!1;e.accumulatedMeanSquares=t.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})),e.accumulatedMoments=t.slice(s,2*s).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})),e.centered&&(e.accumulatedMeanGrads=t.slice(2*s,3*s).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}const OI=[jm,qm,Km,Xm,Zm,Ym,jh];function Qm(n){return new Promise(t=>setTimeout(t)).then(n)}let qh=(()=>{class n{constructor(e){if(!z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(n.URL_SCHEME)&&(e=e.slice(n.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}save(e){var s=this;return(0,T.Z)(function*(){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const r=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const o=Fm(e,[{paths:["./"+s.weightDataFileName],weights:e.weightSpecs}]),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),l=null==s.modelJsonAnchor?document.createElement("a"):s.modelJsonAnchor;if(l.download=s.modelJsonFileName,l.href=i,yield Qm(()=>l.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const u=null==s.weightDataAnchor?document.createElement("a"):s.weightDataAnchor;u.download=s.weightDataFileName,u.href=r,yield Qm(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ql(e)}}})()}}return n.URL_SCHEME="downloads://",n})();function Jm(n,t,e,s){(function o(l){S(null!=l&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")})(n),function i(l,u){S(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),S(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),S(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}(e=null==e?0:e,s=null==s?1:s);let r=0;return Promise.all(n.map(l=>(l.then(u=>{const c=e+ ++r/n.length*(s-e);return t(c),u}),l)))}function eg(n,t){return Kh.apply(this,arguments)}function Kh(){return(Kh=(0,T.Z)(function*(n,t){null==t&&(t={});const e=null==t.fetchFunc?z().platform.fetch:t.fetchFunc,s=n.map(h=>e(h,t.requestInit,{isBinary:!0})),i=(null==t.onProgress?yield Promise.all(s):yield Jm(s,t.onProgress,0,.5)).map(h=>h.arrayBuffer());return null==t.onProgress?yield Promise.all(i):yield Jm(i,t.onProgress,.5,1)})).apply(this,arguments)}Tt.registerSaveRouter(n=>z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(qh.URL_SCHEME)?function BI(n="model"){return new qh(n)}(n.slice(qh.URL_SCHEME.length)):null);let tg=(()=>{class n{constructor(e,s){if(this.DEFAULT_METHOD="POST",null==s&&(s={}),this.weightPathPrefix=s.weightPathPrefix,this.onProgress=s.onProgress,this.weightUrlConverter=s.weightUrlConverter,null!=s.fetchFunc?(S("function"==typeof s.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=s.fetchFunc):this.fetch=z().platform.fetch,S(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&S(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=s.requestInit&&null!=s.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=s.requestInit||{}}save(e){var s=this;return(0,T.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const r=Object.assign({method:s.DEFAULT_METHOD},s.requestInit);r.body=new FormData;const o=Fm(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);r.body.append("model.json",new Blob([JSON.stringify(o)],{type:"application/json"}),"model.json"),null!=e.weightData&&r.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const i=yield s.fetch(s.path,r);if(i.ok)return{modelArtifactsInfo:ql(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)})()}load(){var e=this;return(0,T.Z)(function*(){const s=yield e.fetch(e.path,e.requestInit);if(!s.ok)throw new Error(`Request to ${e.path} failed with status code ${s.status}. Please verify this URL points to the model JSON of the model to load.`);let r;try{r=yield s.json()}catch(i){let l=`Failed to parse model JSON of response from ${e.path}.`;throw e.path.endsWith(".pb")?l+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":l+=" Please make sure the server is serving valid JSON for this request.",new Error(l)}if(null==r.modelTopology&&null==r.weightsManifest)throw new Error(`The JSON from HTTP path ${e.path} contains neither model topology or manifest for weights.`);return function Pm(n,t){return Fh.apply(this,arguments)}(r,i=>e.loadWeights(i))})()}loadWeights(e){var s=this;return(0,T.Z)(function*(){const r=Array.isArray(s.path)?s.path[1]:s.path,[a,o]=function HI(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?");return[n.substring(0,t)+"/",e>t?n.substring(e):""]}(r),i=s.weightPathPrefix||a,l=function Yv(n){const t=[];for(const e of n)t.push(...e.weights);return t}(e),u=[],c=[];for(const d of e)for(const p of d.paths)null!=s.weightUrlConverter?c.push(s.weightUrlConverter(p)):u.push(i+p+o);return s.weightUrlConverter&&u.push(...yield Promise.all(c)),[l,Oh(yield eg(u,{requestInit:s.requestInit,fetchFunc:s.fetch,onProgress:s.onProgress}))]})()}}return n.URL_SCHEME_REGEX=/^https?:\/\//,n})();function ng(n){return null!=n.match(tg.URL_SCHEME_REGEX)}const sg=(n,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let e=!0;if(e=Array.isArray(n)?n.every(s=>ng(s)):ng(n),e)return rg(n,t)}return null};function rg(n,t){return new tg(n,t)}function jI(n,t){return rg(n,t)}let kr;function og(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==n)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(n.data instanceof Uint8Array)e=!0;else if("undefined"!=typeof ImageData&&n instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&n instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&n instanceof HTMLImageElement)a=!0;else if(null!=n.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&n instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);i=!0}if(null!=Ih(wh,R.backendName))return R.runKernel(wh,{pixels:n},{numChannels:t});const[u,c]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h,d;if(o)h=n.getContext("2d").getImageData(0,0,u,c).data;else if(s||e)h=n.data;else if(a||r||i){if(null==kr)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");kr=new OffscreenCanvas(1,1).getContext("2d")}else kr=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});kr.canvas.width=u,kr.canvas.height=c,kr.drawImage(n,0,0,u,c),h=kr.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(h);else{const f=u*c;d=new Int32Array(f*t);for(let g=0;g<f;g++)for(let m=0;m<t;++m)d[g*t+m]=h[4*g+m]}return function XI(n,t,e){if(J(n),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Mo(n,e);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return zo(n,t,s,e)}(d,[c,u,t],"int32")}function JI(n){return function YI(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}()&&!(n instanceof ImageBitmap)&&function QI(n){return null!=n&&0!==n.width&&0!==n.height}(n)&&!function ZI(n){return null!=n&&n.data instanceof Uint8Array}(n)}function eS(n){return Yh.apply(this,arguments)}function Yh(){return(Yh=(0,T.Z)(function*(n,t=3){let e=null;if(z().getBool("WRAP_TO_IMAGEBITMAP")&&JI(n)){let s;try{s=yield createImageBitmap(n,{premultiplyAlpha:"none"})}catch(r){s=null}e=null!=s&&s.width===n.width&&s.height===n.height?s:n}else e=n;return og(e,t)})).apply(this,arguments)}function tS(n,t){return Qh.apply(this,arguments)}function Qh(){return(Qh=(0,T.Z)(function*(n,t){let e=N(n,"img","toPixels");if(!(n instanceof Rt)){const u=e;e=ge(u,"int32"),u.dispose()}if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const[s,r]=e.shape.slice(0,2),a=2===e.rank?1:e.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);const o=yield e.data(),i="float32"===e.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const c=[0,0,0,255];for(let d=0;d<a;d++){const p=o[u*a+d];if("float32"===e.dtype){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if("int32"===e.dtype&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);1===a?(c[0]=p*i,c[1]=p*i,c[2]=p*i):c[d]=p*i}const h=4*u;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(null!=t){t.width=r,t.height=s;const u=t.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return e!==n&&e.dispose(),l})).apply(this,arguments)}Tt.registerSaveRouter(sg),Tt.registerLoadRouter(sg);const nS=O({fromPixels_:og});function ed(n,t,e){const s=n.shape.length;S(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),S(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)S(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function rS(n){const t=[];let e=0;for(;n>0;)1&n&&t.push(e),n/=2,e++;return t}function td(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function ig(n,t,e,s){const r=[...n];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<e;a++)0===a?r[t]=1:(r.splice(t,0,1),r.pop());return r}function lg(n,t,e){return e<=n?e:e-(t-1)}function ug(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function aS(n,t,e,s,r,a,o,i,l){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&e>0){const p=t[0],f=e+1;c=cg(o,p,f,s,n),h=hg(i,p,f,r,n),d=ig(a,p,f,n)}else for(let p=0;p<u;p++)c[p]=pg(o,s,a,n,p,l),h[p]=fg(i,r,a,n,p,l),d[p]=dg(a,p,l);return{begin:c,end:h,strides:d}}function cg(n,t,e,s,r){const a=[...r],o=ug(e,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{const l=lg(t,e,i);let u=s[l];n&1<<l&&(u=0),a[i]=u}return a}function hg(n,t,e,s,r){const a=[...r],o=ug(e,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{const l=lg(t,e,i);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),a[i]=u}for(let i=0;i<a.length;i++){const l=r[i];a[i]<0&&(a[i]+=l),a[i]=ze(0,a[i],r[i])}return a}function dg(n,t,e){let s=n[t];return(e&1<<t||null==s)&&(s=1),s}function pg(n,t,e,s,r,a){let o=t[r];(n&1<<r||a&1<<r||null==o)&&(o=(e[r]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),o=ze(0,o,l-1),o}function fg(n,t,e,s,r,a){let o=t[r];const i=e[r]||1;(n&1<<r||a&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),o=i>0?ze(0,o,l):ze(-1,o,l-1),o}function nd(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function sd(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Yl(n,t,e){let s;const r=n.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach(o=>{S(-1!==o,()=>"slice() does not support negative begin indexing.")}),a=null==e?new Array(r).fill(-1):"number"==typeof e?[e,...new Array(r-1).fill(-1)]:e.length<r?e.concat(new Array(r-e.length).fill(-1)):e,a=a.map((o,i)=>o>=0?o:(S(-1===o,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,a]}function rd(n,t,e,s,r,a,o,i,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&0!=(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function oS(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=null!=n.begin,t.endValid=null!=n.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<r;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=n.begin&&(t.begin[e]=n.begin[s]),null!=n.end&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}(h,d);let p=!0,f=!0,g=!0;const m=[],y=[];for(let b=0;b<n.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<b),v=n[b];if(-1===v){m.push(w?1:-1);continue}const C=[d.beginMask&1<<b,d.endMask&1<<b],k=[d.strides[b]>0?0:-1,d.strides[b]>0?v:v-1];if(w&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[b];const _=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(w){const B=d.begin[b]<0?v+d.begin[b]:d.begin[b];if(d.begin[b]=B,d.end[b]=d.begin[b]+1,B<0||B>=v)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=mg(d.begin[b],0,d.strides[b],v,C,k),d.end[b]=mg(d.end[b],1,d.strides[b],v,C,k);const P=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===v;p=p&&P,f=f&&(0===b&&1===d.strides[b]||P)}else p=p&&1===d.strides[b]&&_,f=f&&(0===b&&1===d.strides[b]||_);let $,E=!1;if(d.beginValid&&d.endValid?($=d.end[b]-d.begin[b],E=!0):w?($=1,E=!0):_&&v>=0&&($=d.strides[b]<0?-v:v,E=!0),E){let P;P=0===$||$<0!=d.strides[b]<0?0:Math.trunc($/d.strides[b])+($%d.strides[b]!=0?1:0),m.push(P)}else m.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const w=d.finalShapeGatherIndices[b];w>=0?y.push(m[w]):-2===w&&y.push(1)}return{finalShapeSparse:y.filter((b,w)=>-2!==d.finalShapeGatherIndices[w]),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function mg(n,t,e,s,r,a){if(r[t])return e>0?a[t]:a[t+1&1];{const o=n<0?s+n:n;return o<a[0]?a[0]:o>a[1]?a[1]:o}}const gg=O({all_:function lS(n,t=null,e=!1){const r={x:N(n,"x","all","bool")};return R.runKernel("All",r,{axis:t,keepDims:e})}}),ad=O({any_:function uS(n,t=null,e=!1){const r={x:N(n,"x","any","bool")};return R.runKernel("Any",r,{axis:t,keepDims:e})}}),Uo=O({argMax_:function cS(n,t=0){const s={x:N(n,"x","argMax")};return R.runKernel(Pi,s,{axis:t})}});function Go(n,t,e,s,r="NHWC",a){return Xt(n,[...t,n[3]],e,a,s,null,null,As(r))}function Wn(n,t,e,s,r,a,o="channelsLast"){const[i,l]=Ho(t);let u;if("channelsLast"===o)u=[i,l,n[3],n[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);u=[i,l,n[1],n[1]]}return Xt(n,u,e,s,r,a,!1,o)}function Ds(n,t,e,s,r,a,o="NDHWC"){const[i,l,u]=id(t);let c,h;if("NDHWC"===o)h="channelsLast",c=[i,l,u,n[4],n[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[i,l,u,n[1],n[1]]}return Xs(n,c,e,s,r,!1,h,a)}function Xt(n,t,e,s,r,a,o=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h]=n;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,c]=n}const[d,p,,f]=t,[g,m]=Ho(e),[y,x]=Ho(s),b=ua(d,y),w=ua(p,x),{padInfo:v,outHeight:C,outWidth:k}=function pS(n,t,e,s,r,a,o,i,l){let u,c,h;if("number"==typeof n){u={top:n,bottom:n,left:n,right:n,type:0===n?"VALID":"NUMBER"};const p=function hS(n,t,e,s,r){null==s&&(s=od(n,t,e));const o=n[1];return[jo((n[0]-t+2*s)/e+1,r),jo((o-t+2*s)/e+1,r)]}([t,e],a,s,n,i);c=p[0],h=p[1]}else if("same"===n){c=Math.ceil(t/s),h=Math.ceil(e/r);const d=Math.max(0,(c-1)*s+a-t),p=Math.max(0,(h-1)*r+o-e),f=Math.floor(d/2),g=d-f,m=Math.floor(p/2);u={top:f,bottom:g,left:m,right:p-m,type:"SAME"}}else if("valid"===n)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((e-o+1)/r);else{if("object"!=typeof n)throw Error(`Unknown padding parameter: ${n}`);{const d="channelsLast"===l?n[1][0]:n[2][0],p="channelsLast"===l?n[1][1]:n[2][1],f="channelsLast"===l?n[2][0]:n[3][0],g="channelsLast"===l?n[2][1]:n[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=jo((t-a+d+p)/s+1,i),h=jo((e-o+f+g)/r+1,i)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,g,m,b,w,a,i),_=o?f*h:f;let $;return"channelsFirst"===i?$=[l,_,C,k]:"channelsLast"===i&&($=[l,C,k,_]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:C,outWidth:k,outChannels:_,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:x,inShape:n,outShape:$,filterShape:t}}function Xs(n,t,e,s,r,a=!1,o="channelsLast",i){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h,d]=n;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,d,u,c,h]=n}const[p,f,g,,m]=t,[y,x,b]=id(e),[w,v,C]=id(s),k=ua(p,w),_=ua(f,v),$=ua(g,C),{padInfo:E,outDepth:P,outHeight:B,outWidth:U}=function fS(n,t,e,s,r,a,o,i,l,u,c){let h,d,p,f;if("valid"===n&&(n=0),"number"==typeof n){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:0===n?"VALID":"NUMBER"};const m=function dS(n,t,e,s,r,a){null==r&&(r=od(n,t[0],s[0]));const o=[0,0,0,e];for(let i=0;i<3;i++)n[i]+2*r>=t[i]&&(o[i]=jo((n[i]-t[i]+2*r)/s[i]+1,a));return o}([t,e,s,1],[i,l,u],1,[r,a,o],n,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==n)throw Error(`Unknown padding parameter: ${n}`);{d=Math.ceil(t/r),p=Math.ceil(e/a),f=Math.ceil(s/o);const g=(d-1)*r+i-t,m=(p-1)*a+l-e,y=(f-1)*o+u-s,x=Math.floor(g/2),b=g-x,w=Math.floor(m/2),v=m-w,C=Math.floor(y/2);h={top:w,bottom:v,left:C,right:y-C,front:x,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,y,x,b,k,_,$,i),G=a?m*d:m;let H;return"channelsFirst"===o?H=[l,G,P,B,U]:"channelsLast"===o&&(H=[l,P,B,U,G]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:P,outHeight:B,outWidth:U,outChannels:G,padInfo:E,strideDepth:y,strideHeight:x,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:k,effectiveFilterHeight:_,effectiveFilterWidth:$,dilationDepth:w,dilationHeight:v,dilationWidth:C,inShape:n,outShape:H,filterShape:t}}function od(n,t,e,s=1){const r=ua(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function Ho(n){return"number"==typeof n?[n,n,n]:2===n.length?[n[0],n[1],1]:n}function id(n){return"number"==typeof n?[n,n,n]:n}function ua(n,t){return t<=1?n:n+(n-1)*(t-1)}function jo(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Zs(n){const[t,e,s]=Ho(n);return 1===t&&1===e&&1===s}function sn(n,t){return Zs(n)||Zs(t)}function Tr(n){return Ho(n).every(t=>t>0)}function As(n){if("NHWC"===n)return"channelsLast";if("NCHW"===n)return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function fn(n,t,e){if(null!=e){if("string"==typeof t)throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if("number"==typeof t)S(qe(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${n}: Unknown padding parameter: ${t}`);t.forEach(s=>{s.forEach(r=>{S(qe(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})})}}}const F=O({reshape_:function mS(n,t){const s={x:N(n,"x","reshape","string_or_numeric")};return R.runKernel(Il,s,{shape:t})}}),ld=O({avgPool_:function gS(n,t,e,s,r){const a=N(n,"x","avgPool","float32");S(sn(e,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`);let i=a,l=!1;3===a.rank&&(l=!0,i=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),fn("avgPool",s,r);let h=R.runKernel(Vi,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r});return h=ge(h,a.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),xS=O({avgPool3d_:function yS(n,t,e,s,r,a="NDHWC"){const o=N(n,"x","avgPool3d","float32");let i=o,l=!1;4===o.rank&&(l=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(5===i.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),S("NDHWC"===a,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),S("number"==typeof e&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),fn("avgPool3d",s,r);let h=R.runKernel(Mi,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:a});return h=ge(h,i.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});function bS(n){let t;return t=0===n.rank||1===n.rank?F(n,[1,1,1,n.size]):2===n.rank?F(n,[1,1,n.shape[0],n.shape[1]]):3===n.rank?F(n,[1,n.shape[0],n.shape[1],n.shape[2]]):n,t}const Ql=O({batchNorm_:function wS(n,t,e,s,r,a){null==a&&(a=.001);const o=N(n,"x","batchNorm"),i=N(t,"mean","batchNorm"),l=N(e,"variance","batchNorm");let u,c;null!=r&&(u=N(r,"scale","batchNorm")),null!=s&&(c=N(s,"offset","batchNorm")),S(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(null==c||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(null==u||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:bS(o),scale:u,offset:c,mean:i,variance:l},f=R.runKernel(Qi,d,{varianceEpsilon:a});return F(f,o.shape)}}),IS=O({batchNorm2d_:function vS(n,t,e,s,r,a){const o=N(n,"x","batchNorm"),i=N(t,"mean","batchNorm"),l=N(e,"variance","batchNorm");let u,c;return null!=r&&(u=N(r,"scale","batchNorm")),null!=s&&(c=N(s,"offset","batchNorm")),S(2===o.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),S(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),S(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&S(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&S(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Ql(o,i,l,c,u,a)}}),CS=O({batchNorm3d_:function SS(n,t,e,s,r,a){const o=N(n,"x","batchNorm"),i=N(t,"mean","batchNorm"),l=N(e,"variance","batchNorm");let u,c;return null!=r&&(u=N(r,"scale","batchNorm")),null!=s&&(c=N(s,"offset","batchNorm")),S(3===o.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),S(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),S(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&S(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&S(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Ql(o,i,l,c,u,a)}}),kS=O({batchNorm4d_:function NS(n,t,e,s,r,a){const o=N(n,"x","batchNorm"),i=N(t,"mean","batchNorm"),l=N(e,"variance","batchNorm");let u,c;return null!=r&&(u=N(r,"scale","batchNorm")),null!=s&&(c=N(s,"offset","batchNorm")),S(4===o.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),S(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),S(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&S(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&S(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Ql(o,i,l,c,u,a)}}),qo=O({broadcastTo_:function TS(n,t){let e=N(n,"broadcastTo","x");const s=e.shape;if(cs(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=F(e,u)}const r=e.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])a[u]=1;else if(1!==e.shape[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);return 0===a.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length?Cr(e):R.runKernel(Ao,{x:e},{reps:a})}}),An=O({clipByValue_:function _S(n,t,e){const s=N(n,"x","clipByValue");return S(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e?Wo(s.shape,t,s.dtype):R.runKernel(ja,{x:s},{clipValueMin:t,clipValueMax:e})}}),ln=O({concat_:function $S(n,t=0){S(n.length>=1,()=>"Pass at least one tensor to concat");const e=Em(n,"tensors","concat","string_or_numeric");return"complex64"===e[0].dtype&&e.forEach(a=>{if("complex64"!==a.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${a.dtype}. `)}),1===e.length?Cr(e[0]):R.runKernel(Ui,e,{axis:t})}}),DS=O({concat1d_:function ES(n){return ln(n,0)}}),RS=O({concat2d_:function AS(n,t){return ln(n,t)}}),FS=O({concat3d_:function OS(n,t){return ln(n,t)}}),LS=O({concat4d_:function PS(n,t){return ln(n,t)}}),_r=O({conv2d_:function VS(n,t,e,s,r="NHWC",a=[1,1],o){const i=N(n,"x","conv2d","float32"),l=N(t,"filter","conv2d","float32");let u=i,c=!1;3===i.rank&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),S(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),fn("conv2d",s,o);const h="NHWC"===r?u.shape[3]:u.shape[1];S(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),S(sn(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),S(Tr(a),()=>"Error in conv2D: Dilated rates should be larger than 0."),S(Tr(e),()=>"Error in conv2D: Strides should be larger than 0.");const f=R.runKernel(Gi,{x:u,filter:l},{strides:e,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o});return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),yg=O({conv1d_:function MS(n,t,e,s,r="NWC",a=1,o){const i=N(n,"x","conv1d"),l=N(t,"filter","conv1d");let u=i,c=!1;2===i.rank&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1]])),S(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),S(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),fn("conv1d",s,o),S(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),S(sn(e,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${a}'`),S(Tr(a),()=>"Error in conv1D: Dilated rates should be larger than 0."),S(Tr(e),()=>"Error in conv1D: Stride should be larger than 0."),S("NWC"===r,()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=F(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=F(u,[u.shape[0],1,u.shape[1],u.shape[2]]),m=_r(d,h,[1,e],s,"NHWC",[1,a],o);return F(m,c?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}}),ud=O({conv2DBackpropInput_:function zS(n,t,e,s,r,a="NHWC",o){S(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,l=t,u=!1;3===t.rank&&(u=!0,l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,n[0],n[1],n[2]]),S(4===i.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),S(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),S(4===e.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const c="NHWC"===a?i[3]:i[1],h="NHWC"===a?l.shape[3]:l.shape[1];S(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),S(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),fn("conv2dDerInput",r,o);const f=R.runKernel(Hi,{dy:l,filter:e},{strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i});return u?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),xg=O({conv2dTranspose_:function BS(n,t,e,s,r,a){const o=N(n,"x","conv2dTranspose"),i=N(t,"filter","conv2dTranspose");return ud(e,o,i,s,r,"NHWC",a)}}),US=O({conv3d_:function WS(n,t,e,s,r="NDHWC",a=[1,1,1]){const o=N(n,"x","conv3d"),i=N(t,"filter","conv3d");let l=o,u=!1;4===o.rank&&(u=!0,l=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),S(5===i.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),S(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),S(sn(e,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),S("NDHWC"===r,()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),S(Tr(a),()=>"Error in conv3D: Dilated rates should be larger than 0."),S(Tr(e),()=>"Error in conv3D: Strides should be larger than 0.");const d=R.runKernel(ji,{x:l,filter:i},{strides:e,pad:s,dataFormat:r,dilations:a});return u?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),bg=O({conv3DBackpropInput_:function GS(n,t,e,s,r){S(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,o=t,i=!1;4===t.rank&&(i=!0,o=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,n[0],n[1],n[2],n[3]]);const l=a[4],u=o.shape[4];S(5===a.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),S(5===o.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),S(5===e.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),S(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),S(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);const d=R.runKernel(Lc,{dy:o,filter:e},{pad:r,strides:s,inputShape:a});return i?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),jS=O({conv3dTranspose_:function HS(n,t,e,s,r){const a=N(n,"x","conv3dTranspose"),o=N(t,"filter","conv3dTranspose");return bg(e,a,o,s,r)}}),wg=O({denseBincount_:function qS(n,t,e,s=!1){const r=N(n,"x","denseBincount"),a=N(t,"weights","denseBincount");return S("int32"===r.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),S(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),S(e>=0,()=>`size must be non-negative, but got ${e}.`),S(a.size===r.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`),R.runKernel(zc,{x:r,weights:a},{size:e,binaryOutput:s})}}),Jl=O({depthwiseConv2d_:function KS(n,t,e,s,r="NHWC",a=[1,1],o){const i=N(n,"x","depthwiseConv2d","float32"),l=N(t,"filter","depthwiseConv2d","float32");let u=i,c=!1;3===i.rank&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),S(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h="NHWC"===r?u.shape[3]:u.shape[1];S(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),fn("depthwiseConv2d",s,o);const f=R.runKernel(Ki,{x:u,filter:l},{strides:e,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o});return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),eu=O({elu_:function XS(n){const e={x:N(n,"x","elu","float32")};return R.runKernel(Za,e)}}),fs=O({equal_:function ZS(n,t){let e=N(n,"a","equal","string_or_numeric"),s=N(t,"b","equal","string_or_numeric");return[e,s]=Dt(e,s),Me(e.shape,s.shape),R.runKernel(Zi,{a:e,b:s})}}),Un=O({exp_:function YS(n){const e={x:N(n,"x","exp")};return R.runKernel(Qa,e)}}),Nn=O({expandDims_:function QS(n,t=0){const e=N(n,"x","expandDims","string_or_numeric");return S(t<=e.rank,()=>"Axis must be <= rank of the tensor"),R.runKernel(Yi,{input:e},{dim:t})}}),es=O({tile_:function JS(n,t){const e=N(n,"x","tile","string_or_numeric");return S(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`),R.runKernel(Ao,{x:e},{reps:t})}}),vg=O({eye_:function eC(n,t,e,s="float32"){null==t&&(t=n);const r=Ge([n,t],s),a=n<=t?n:t;for(let i=0;i<a;++i)r.set(1,i,i);const o=F(r.toTensor(),[n,t]);if(null==e)return o;if(1===e.length)return es(Nn(o,0),[e[0],1,1]);if(2===e.length)return es(Nn(Nn(o,0),0),[e[0],e[1],1,1]);if(3===e.length)return es(Nn(Nn(Nn(o,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}}),tu=O({floor_:function tC(n){const e={x:N(n,"x","floor","float32")};return R.runKernel(eo,e)}}),cd=O({gather_:function nC(n,t,e=0,s=0){const r=N(n,"x","gather"),a=N(t,"indices","gather","int32");return R.runKernel(Ji,{x:r,indices:a},{axis:e,batchDims:s})}}),Rn=O({greater_:function sC(n,t){let e=N(n,"a","greater","string_or_numeric"),s=N(t,"b","greater","string_or_numeric");return[e,s]=Dt(e,s),Me(e.shape,s.shape),R.runKernel(el,{a:e,b:s})}}),$r=O({greaterEqual_:function rC(n,t){let e=N(n,"a","greaterEqual","string_or_numeric"),s=N(t,"b","greaterEqual","string_or_numeric");return[e,s]=Dt(e,s),Me(e.shape,s.shape),R.runKernel(no,{a:e,b:s})}}),hd=O({leakyRelu_:function aC(n,t=.2){const s={x:N(n,"x","leakyRelu")};return R.runKernel(tl,s,{alpha:t})}}),Gn=O({log_:function oC(n){const e={x:N(n,"x","log","float32")};return R.runKernel(lo,e)}}),dd=O({log1p_:function iC(n){const e={x:N(n,"x","log1p")};return R.runKernel(uo,e)}}),ts=O({max_:function lC(n,t=null,e=!1){const r={x:N(n,"x","max")};return R.runKernel(ll,r,{reductionIndices:t,keepDims:e})}}),Se=O({sum_:function uC(n,t=null,e=!1){let s=N(n,"x","sum");return"bool"===s.dtype&&(s=ge(s,"int32")),R.runKernel(_l,{x:s},{axis:t,keepDims:e})}}),Ig=O({logSoftmax_:function cC(n,t=-1){const e=N(n,"logits","logSoftmax");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Es((r,a)=>{const i=ts(r,t,!0),l=Ie(r,i),u=Ie(ge(l,"float32"),Gn(Se(Un(l),t,!0)));return a([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,g=Un(p);return Ie(h,D(Se(h,t,!0),g))}}})(e)}}),Rs=O({logicalAnd_:function hC(n,t){const e=N(n,"a","logicalAnd","bool"),s=N(t,"b","logicalAnd","bool");return Me(e.shape,s.shape),R.runKernel(rl,{a:e,b:s})}}),at=O({matMul_:function dC(n,t,e=!1,s=!1){let r=N(n,"a","matMul"),a=N(t,"b","matMul");return[r,a]=Dt(r,a),R.runKernel(zi,{a:r,b:a},{transposeA:e,transposeB:s})}}),pd=O({maxPool_:function pC(n,t,e,s,r){const a=N(n,"x","maxPool");let i=a,l=!1;3===a.rank&&(l=!0,i=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),S(sn(e,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`),fn("maxPool",s,r);const h=R.runKernel(ul,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r});return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),mC=O({maxPool3d_:function fC(n,t=[1,1,1],e,s,r,a="NDHWC"){const o=N(n,"x","maxPool3d");let i=o,l=!1;4===o.rank&&(l=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(5===i.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),S("NDHWC"===a,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),fn("maxPool3d",s,r);const h=R.runKernel(cl,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:a});return l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ot=O({mean_:function gC(n,t=null,e=!1){const r={x:N(n,"x","mean")};return R.runKernel(hl,r,{axis:t,keepDims:e})}}),nu=O({min_:function yC(n,t=null,e=!1){const r={x:N(n,"x","min")};return R.runKernel(dl,r,{axis:t,keepDims:e})}}),ca=O({minimum_:function xC(n,t){let e=N(n,"a","minimum"),s=N(t,"b","minimum");return[e,s]=Dt(e,s),"bool"===e.dtype&&(e=ge(e,"int32"),s=ge(s,"int32")),Me(e.shape,s.shape),R.runKernel(ho,{a:e,b:s})}});function fd(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function Sg(n,t,e){const s=n.length+t.length,r=[];let a=0,o=0;for(let i=0;i<s;i++)-1===e.indexOf(i)?r.push(n[a++]):r.push(t[o++]);return r}function Zt(n,t){const e=[],s=n.length;for(let a=0;a<s;a++)-1===t.indexOf(a)&&e.push(n[a]);return[e,t.map(a=>n[a])]}function Ft(n,t){return Sg(n,t.map(s=>1),t)}function rn(n,t,e){S(fd(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function _t(n,t){if(fd(n,t))return null;const e=[];for(let s=0;s<t;++s)-1===n.indexOf(s)&&e.push(s);return n.forEach(s=>e.push(s)),e}function Ys(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Pt(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}const md=O({moments_:function bC(n,t=null,e=!1){const s=$e(t,(n=N(n,"x","moments")).shape),r=Ot(n,s,e);let a=r.shape;e||(a=Ft(r.shape,s));const o=gt(Ie(ge(n,"float32"),F(r,a)));return{mean:r,variance:Ot(o,s,e)}}}),It=O({neg_:function wC(n){const e={x:N(n,"x","neg")};return R.runKernel(fl,e)}}),Ko=O({notEqual_:function vC(n,t){let e=N(n,"a","notEqual","string_or_numeric"),s=N(t,"b","notEqual","string_or_numeric");return[e,s]=Dt(e,s),Me(e.shape,s.shape),R.runKernel(ml,{a:e,b:s})}}),Cg=O({oneHot_:function IC(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:N(n,"indices","oneHot","int32")};return R.runKernel(yl,o,{dtype:r,depth:t,onValue:e,offValue:s})}});function Wt(n,t="float32"){if(cs(n),"complex64"===t){const s=Wt(n,"float32"),r=Wt(n,"float32");return vr(s,r)}const e=tn(I(n),t);return R.makeTensor(e,n,t)}function Qs(n,t="float32"){if(cs(n),"complex64"===t){const s=Qs(n,"float32"),r=Wt(n,"float32");return vr(s,r)}const e=Ri(I(n),t);return R.makeTensor(e,n,t)}const Hn=O({onesLike_:function SC(n){const e={x:N(n,"x","onesLike")};return R.runKernel(gl,e)}}),gd=O({pad_:function CC(n,t,e=0){const s=N(n,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return R.runKernel(bl,{x:s},{paddings:t,constantValue:e})}}),yd=O({prelu_:function NC(n,t){const e=N(n,"x","prelu"),s=N(t,"alpha","prelu");return R.runKernel(wl,{x:e,alpha:s})}});var xd=Q(340);class bd{constructor(t,e,s,r,a){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=a||Math.random();this.random=xd.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const i=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class kC{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=s,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=xd.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ng=O({randomNormal_:function EC(n,t=0,e=1,s,r){if(cs(n),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new bd(t,e,s,!1,r),o=Ge(n,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),ha=O({randomUniform_:function DC(n,t=0,e=1,s="float32",r){cs(n);const a=Ge(n,s),o=new kC(t,e,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}});function Xo(n,t,e=1,s="float32"){if(0===e)throw new Error("Cannot have a step of zero");return R.runKernel(rh,{},{start:n,stop:t,step:e,dtype:s})}const Os=O({relu_:function AC(n){const e={x:N(n,"x","relu")};return R.runKernel(yo,e)}}),Er=O({reverse_:function RC(n,t){const s={x:N(n,"x","reverse")};return R.runKernel(Nl,s,{dims:t})}}),kg=O({selu_:function OC(n){const e={x:N(n,"x","selu")};return R.runKernel(vo,e)}}),Tg=O({separableConv2d_:function FC(n,t,e,s,r,a=[1,1],o="NHWC"){const i=N(n,"x","separableConv2d"),l=N(t,"depthwiseFilter","separableConv2d"),u=N(e,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");S(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),S(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),S(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),S(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),S(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];S(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Jl(c,l,s,r,o,a),m=_r(f,u,1,"valid",o);return h?F(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),da=O({sigmoid_:function PC(n){const e={x:N(n,"x","sigmoid","float32")};return R.runKernel(No,e)}}),ut=O({slice_:function LC(n,t,e){const s=N(n,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");return R.runKernel(Tl,{x:s},{begin:t,size:e})}}),vd=O({slice1d_:function VC(n,t,e){const s=N(n,"x","slice1d");return S(1===s.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),ut(s,[t],[e])}}),_g=O({slice2d_:function MC(n,t,e){const s=N(n,"x","slice2d");return S(2===s.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),ut(s,t,e)}}),Id=O({slice3d_:function zC(n,t,e){const s=N(n,"x","slice3d");return S(3===s.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),ut(s,t,e)}}),su=O({slice4d_:function BC(n,t,e){const s=N(n,"x","slice4d");return S(4===s.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),ut(s,t,e)}}),Sd=O({softmax_:function WC(n,t=-1){const e=N(n,"logits","softmax","float32");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);return R.runKernel(Dl,{logits:e},{dim:t})}}),Zo=O({softplus_:function UC(n){const e={x:N(n,"x","softplus")};return R.runKernel(ko,e)}}),On=O({split_:function GC(n,t,e=0){const r={x:N(n,"x","split")};return R.runKernel(El,r,{numOrSizeSplits:t,axis:e})}}),Yo=O({squeeze_:function HC(n,t){const e=N(n,"x","squeeze","string_or_numeric");return F(e,dt(e.shape,t).newShape)}}),Fs=O({stack_:function jC(n,t=0){const e=Em(n,"tensors","stack","string_or_numeric");return S(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&S(t<=e[0].rank,()=>"Axis must be <= rank of the tensor"),R.runKernel(xl,e,{axis:t})}}),Cd=O({tanh_:function qC(n){const e={x:N(n,"x","tanh","float32")};return R.runKernel(Do,e)}});function kn(n,t){J(n);const e=Mo(n,t);if(1!==e.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return zo(n,null,e,t)}const $g=O({truncatedNormal_:function KC(n,t=0,e=1,s,r){if(cs(n),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new bd(t,e,s,!0,r),o=Ge(n,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),Dr=O({unstack_:function XC(n,t=0){const e=N(n,"x","unstack","string_or_numeric");return S(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`),R.runKernel(Rl,{value:e},{axis:t})}}),mn=O({where_:function YC(n,t,e){const s=N(t,"a","where"),r=N(e,"b","where"),a=N(n,"condition","where","bool"),o=Me(Me(a.shape,s.shape),r.shape),i=qo(a,o),l=qo(s,o),u=qo(r,o);return R.runKernel(kl,{condition:i,t:l,e:u})}}),Nd=O({imag_:function QC(n){const e={input:N(n,"input","imag")};return R.runKernel(Yc,e)}}),ru=O({real_:function JC(n){const e={input:N(n,"input","real")};return R.runKernel(ah,e)}}),Je=O({transpose_:function eN(n,t,e){const s=N(n,"x","transpose");if(null==t&&(t=s.shape.map((o,i)=>i).reverse()),S(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(o=>{S(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},a={perm:t};return"complex64"===s.dtype?V(()=>{let o=ru(s),i=Nd(s);return o=R.runKernel(ea,{x:o},a),i=R.runKernel(ea,{x:i},a),e&&(i=It(i)),vr(o,i)}):R.runKernel(ea,r,a)}}),sN=O({dropout_:function nN(n,t,e,s){const r=N(n,"x","dropout");if(S("float32"===r.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),S(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return n instanceof Rt?r.clone():r;const a=function tN(n,t){if(null==t)return n.shape.slice();if(de(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)e.push(null==t[s]&&null!=n.shape[s]?n.shape[s]:t[s]);return e}return t}(r,e),o=1-t,i=Te(tu(oe(ha(a,0,1,"float32",s),o)),o);return D(r,i)}}),kd=O({fft_:function rN(n){return S("complex64"===n.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`),R.runKernel("FFT",{input:n})}}),Td=O({rfft_:function aN(n,t){S("float32"===n.dtype,()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(null!=t&&t<e){const f=n.shape.map(m=>0),g=n.shape.map(m=>m);g[n.shape.length-1]=t,r=ut(n,f,g),e=t}else if(null!=t&&t>e){const f=n.shape.map(g=>g);f[n.shape.length-1]=t-e,r=ln([n,Wt(f)],n.shape.length-1),e=t}else r=n;const a=Qe(r),o=F(vr(r,a),[s,e]),i=kd(o),l=Math.floor(e/2)+1,u=ru(i),c=Nd(i),h=On(u,[l,e-l],u.shape.length-1),d=On(c,[l,e-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,F(vr(h[0],d[0]),p)}}),au=O({ifft_:function oN(n){return S("complex64"===n.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`),R.runKernel(Zc,{input:n})}}),Eg=O({irfft_:function iN(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=F(n,[e,t]);s=au(r)}else{const r=[e,2*(t-1)],a=F(ru(n),[e,t]),o=F(Nd(n),[e,t]),i=Er(ut(a,[0,1],[e,t-2]),1),l=D(Er(ut(o,[0,1],[e,t-2]),1),Ve(-1)),u=ln([a,i],1),c=ln([o,l],1),h=F(vr(u,c),[r[0],r[1]]);s=au(h)}if(s=ru(s),3===n.rank&&0!==n.shape[0]){const r=s,a=n.shape[0];s=F(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}}),_d=O({conv2DBackpropFilter_:function lN(n,t,e,s,r,a="NHWC",o){let i=n;3===n.rank&&(i=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;3===l.rank&&(l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]])),S(4===i.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),S(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),S(4===e.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const u="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];return S(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),S(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),fn("conv2dDerFilter",r,o),R.runKernel(Fc,{x:i,dy:l},{strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:e})}}),Dg=O({relu6_:function uN(n){const e={x:N(n,"x","relu6")};return R.runKernel(xo,e)}}),Qo=O({step_:function cN(n,t=0){const s={x:N(n,"x","step")};return R.runKernel(Ro,s,{alpha:t})}});function ou(n,t,e){if(null==e||"linear"===e)return n;if("relu"===e)return D(n,Qo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function iu(n,t){let e=t;const s=Bt(n.shape,t.shape);return s.length>0&&(e=Se(e,s)),F(e,n.shape)}function lu(n,t,e,s){if("linear"===t)return n;if("relu"===t)return Os(n);if("elu"===t)return eu(n);if("relu6"===t)return Dg(n);if("prelu"===t)return yd(n,e);if("leakyrelu"===t)return hd(n,s);if("sigmoid"===t)return da(n);throw new Error(`Unknown fused activation ${t}.`)}const uu=(n,t)=>!(n>0)||"linear"===t,dN=O({fusedConv2d_:function hN({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===uu(R.state.gradientDepth,l=l||"linear")){S("NHWC"===r,()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=_r(n,t,e,s,r,a,o);return null!=i&&(C=oe(C,i)),lu(C,l,u,c)}const h=N(n,"x","conv2d","float32"),d=N(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=F(h,[1,h.shape[0],h.shape[1],h.shape[2]])),S(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),S(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),fn("fused conv2d",s,o);const g="NHWC"===r?p.shape[3]:p.shape[1];S(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),S(sn(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);const m=Xt(p.shape,d.shape,e,a,s,o);let y,x;if(null!=i&&(y=N(i,"bias","fused conv2d"),[y]=Dt(y,h),"NHWC"===r?Me(m.outShape,y.shape):(S(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),S(0===y.shape.length||y.shape[0]===m.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${m.outChannels})`))),null!=u){const C=u.shape;if(S(C.length<=1||3===C.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),1===C.length)S(1===C[0]||C[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${m.outChannels}).`);else if(3===C.length)try{Me(C,m.outShape)}catch(k){throw Error(`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${m.outShape}).`)}x=N(u,"prelu weights","fused conv2d")}const b=(C,k)=>{S("NHWC"===r,()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[_,$,E,P]=k,B=ou(C,E,l);S(Zs(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const H=[ud($.shape,B,_,e,s),_d($,B,_.shape,e,s)];if(null!=P){const K=iu(P,B);H.push(K)}return H},w={x:p,filter:d,bias:y,preluActivationWeights:x},v={strides:e,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return null==i?Es((k,_,$)=>{let E=R.runKernel(Ll,w,v);return $([_,k,E]),f&&(E=F(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,d):Es((k,_,$,E)=>{let P=R.runKernel(Ll,w,v);return E([_,k,P,$]),f&&(P=F(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:b}})(p,d,y)}}),Ag=O({depthwiseConv2dNativeBackpropFilter_:function pN(n,t,e,s,r,a=[1,1],o){let i=n;3===n.rank&&(i=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;return 3===l.rank&&(l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]])),R.runKernel(Wc,{x:i,dy:l},{strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:e})}}),Rg=O({depthwiseConv2dNativeBackpropInput_:function fN(n,t,e,s,r,a=[1,1],o){let i=t,l=!1;3===t.rank&&(l=!0,i=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h=R.runKernel(Uc,{dy:i,filter:e},{strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:n});return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Og=O({fusedMatMul_:function gN({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(!1===uu(R.state.gradientDepth,a)){let P=at(n,t,e,s);return null!=r&&(P=oe(P,r)),lu(P,a,o,i)}let l=N(n,"a","fused matMul"),u=N(t,"b","fused matMul");[l,u]=Dt(l,u);const c=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=I(f),y=I(g);S(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${s} must match.`);const b=Me(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),w=F(l,e?[m,c,d]:[m,d,c]),v=F(u,s?[y,p,h]:[y,h,p]);let C,k;null!=r&&(C=N(r,"bias","fused matMul"),[C]=Dt(C,l),Me(b,C.shape)),null!=o&&(k=N(o,"prelu weights","fused matMul"));const _=(P,B)=>{const[U,G,H,K]=B,X=ou(F(P,H.shape),H,a);let j,Z;return e||s?!e&&s?(j=at(X,G,!1,!1),Z=at(X,U,!0,!1)):e&&!s?(j=at(G,X,!1,!0),Z=at(U,X,!1,!1)):(j=at(G,X,!0,!0),Z=at(X,U,!0,!0)):(j=at(X,G,!1,!0),Z=at(U,X,!0,!1)),null!=r?[j,Z,iu(K,X)]:[j,Z]},$={a:w,b:v,bias:C,preluActivationWeights:k},E={transposeA:e,transposeB:s,activation:a,leakyreluAlpha:i};return null==r?Es((B,U,G)=>{const H=R.runKernel(Pl,$,E);return G([B,U,H]),{value:F(H,b),gradFunc:_}})(w,v):Es((B,U,G,H)=>{const K=R.runKernel(Pl,$,E);return H([B,U,K,G]),{value:F(K,b),gradFunc:_}})(w,v,C)}});function cu(n,t,e){if(J(n),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Mo(n,e);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return zo(n,t,s,e)}const NN=O({cropAndResize_:function CN(n,t,e,s,r="bilinear",a=0){const o=N(n,"image","cropAndResize"),i=N(t,"boxes","cropAndResize","float32"),l=N(e,"boxInd","cropAndResize","int32"),u=i.shape[0];return S(4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),S(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),S(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),S(2===s.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),S(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),S("bilinear"===r||"nearest"===r,()=>`method must be bilinear or nearest, but was ${r}`),R.runKernel(Mc,{image:o,boxes:i,boxInd:l},{method:r,extrapolationValue:a,cropSize:s})}}),TN=O({flipLeftRight_:function kN(n){const t=N(n,"image","flipLeftRight","float32");return S(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),R.runKernel(Xc,{image:t},{})}}),$N=O({grayscaleToRGB_:function _N(n){const t=N(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];S(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),S(1===s,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,es(t,r)}}),DN=O({rotateWithOffset_:function EN(n,t,e=0,s=.5){const r=N(n,"image","rotateWithOffset","float32");return S(4===r.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`),R.runKernel(vh,{image:r},{radians:t,fillValue:e,center:s})}});function pa(n,t,e,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=n.shape[0];return e=Math.min(e,o),S(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),S(2===n.rank,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),S(4===n.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),S(1===t.rank,()=>"scores must be a 1D tensor"),S(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),S(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const RN=O({nonMaxSuppression_:function AN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const a=N(n,"boxes","nonMaxSuppression","float32"),o=N(t,"scores","nonMaxSuppression","float32"),i=pa(a,o,e,s,r);return R.runKernel(th,{boxes:a,scores:o},{maxOutputSize:e=i.maxOutputSize,iouThreshold:s=i.iouThreshold,scoreThreshold:r=i.scoreThreshold})}});function ON(n,t,e){const s=function FN(n,t,e){return function LN(n,t,e){let s=0,r=n.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);const i=e(t,n[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}(n,t,e||PN)}(n,t,e);n.splice(s<0?-(s+1):s,0,t)}function PN(n,t){return n>t?1:n<t?-1:0}function $d(n,t,e,s,r){return Ad(n,t,e,s,r,0)}function Ed(n,t,e,s,r,a){return Ad(n,t,e,s,r,0,!1,a,!0)}function Dd(n,t,e,s,r,a){return Ad(n,t,e,s,r,a,!0)}function Ad(n,t,e,s,r,a,o=!1,i=!1,l=!1){const u=[];for(let m=0;m<t.length;m++)t[m]>r&&u.push({score:t[m],boxIndex:m,suppressBeginIndex:0});u.sort(Vg);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<e&&u.length>0;){const m=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:b}=m;if(y<r)break;let w=!1;for(let v=h.length-1;v>=b;--v){const C=VN(n,x,h[v]);if(C>=s){w=!0;break}if(m.score=m.score*MN(s,c,C),m.score<=r)break}m.suppressBeginIndex=h.length,w||(m.score===y?(h.push(x),d.push(m.score)):m.score>r&&ON(u,m,Vg))}const p=h.length,f=e-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function VN(n,t,e){const s=n.subarray(4*t,4*t+4),r=n.subarray(4*e,4*e+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-a)*(l-o),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(o,c),y=Math.min(i,h),x=Math.min(l,d),b=Math.max(y-g,0)*Math.max(x-m,0);return b/(p+f-b)}function MN(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function Vg(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}function Rd(){return(Rd=(0,T.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const a=N(n,"boxes","nonMaxSuppressionAsync"),o=N(t,"scores","nonMaxSuppressionAsync"),i=pa(a,o,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const l=yield Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:h}=$d(u,c,e,s,r);return a!==n&&a.dispose(),o!==t&&o.dispose(),kn(h,"int32")})).apply(this,arguments)}const UN=O({nonMaxSuppressionWithScore_:function WN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const o=N(n,"boxes","nonMaxSuppression"),i=N(t,"scores","nonMaxSuppression"),l=pa(o,i,e,s,r,a),h=R.runKernel(sh,{boxes:o,scores:i},{maxOutputSize:e=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma});return{selectedIndices:h[0],selectedScores:h[1]}}});function Od(){return(Od=(0,T.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const o=N(n,"boxes","nonMaxSuppressionAsync"),i=N(t,"scores","nonMaxSuppressionAsync"),l=pa(o,i,e,s,r,a);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=yield Promise.all([o.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Dd(c,h,e,s,r,a);return o!==n&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:kn(d,"int32"),selectedScores:kn(p)}})).apply(this,arguments)}const qN=O({nonMaxSuppressionPadded_:function jN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const o=N(n,"boxes","nonMaxSuppression"),i=N(t,"scores","nonMaxSuppression"),l=pa(o,i,e,s,r,null),f=R.runKernel(nh,{boxes:o,scores:i},{maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a});return{selectedIndices:f[0],validOutputs:f[1]}}});function Fd(){return(Fd=(0,T.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const o=N(n,"boxes","nonMaxSuppressionAsync"),i=N(t,"scores","nonMaxSuppressionAsync"),l=pa(o,i,e,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=yield Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:g}=Ed(d,p,u,c,h,a);return o!==n&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:kn(f,"int32"),validOutputs:Ve(g,"int32")}})).apply(this,arguments)}const Mg=O({resizeBilinear_:function ZN(n,t,e=!1,s=!1){const r=N(n,"images","resizeBilinear");S(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),S(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),S(!1===s||!1===e,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;3===r.rank&&(o=!0,a=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u=R.runKernel(Cl,{images:a},{alignCorners:e,halfPixelCenters:s,size:t});return o?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),zg=O({resizeNearestNeighbor_:function YN(n,t,e=!1,s=!1){const r=N(n,"images","resizeNearestNeighbor");S(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),S(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),S("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype"),S(!1===s||!1===e,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;3===r.rank&&(o=!0,a=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u=R.runKernel(Sl,{images:a},{alignCorners:e,halfPixelCenters:s,size:t});return o?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),JN=O({bincount_:function QN(n,t,e){const s=N(n,"x","bincount"),r=N(t,"weights","bincount");return S("int32"===s.dtype,()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),S(e>=0,()=>`size must be non-negative, but got ${e}.`),S(r.size===s.size||0===r.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`),R.runKernel(Rc,{x:s,weights:r},{size:e})}}),fa=O({lessEqual_:function ek(n,t){let e=N(n,"a","lessEqual","string_or_numeric"),s=N(t,"b","lessEqual","string_or_numeric");return[e,s]=Dt(e,s),Me(e.shape,s.shape),R.runKernel(sl,{a:e,b:s})}}),Bg=O({round_:function tk(n){const e={x:N(n,"x","round")};return R.runKernel(bo,e)}}),rk=O({threshold_:function nk(n,t="binary",e=!1,s=.5){const r=N(n,"image","threshold"),l=r.shape[0]*r.shape[1];let c,h,d,p,u=D(kn([s]),255);if(S(3===r.rank,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),S(3===r.shape[2]||1===r.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),S("int32"===r.dtype||"float32"===r.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),S("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===r.shape[2]){[c,h,d]=On(r,[1,1,1],-1);const m=D(c,.2989),y=D(h,.587),x=D(d,.114);p=oe(oe(m,y),x)}else p=n;"otsu"===t&&(u=function sk(n,t){let a,o,i,l,u,c,e=kn([-1]),s=kn([0]),r=kn([0]);for(let h=0;h<n.size-1;h++){a=ut(n,0,h+1),o=ut(n,h+1),u=Te(Se(a),t),c=Te(Se(o),t);const d=Se(D(a,Xo(0,a.size)));i=Te(d,Se(a));const p=Wo(o.shape,a.size),f=oe(Xo(0,o.size),p),g=D(o,f);l=Te(Se(g),Se(o));const m=Ie(i,l),y=Ie(i,l),x=D(u,c);r=D(D(x,m),y);const b=Rn(r,s);s=mn(b,r,s),e=mn(b,kn([h]),e)}return e}(JN(ge(Bg(p),"int32"),Bo([]),256),l));const f=e?fa(p,u):Rn(p,u);return ge(D(f,255),"int32")}}),ok=O({transform_:function ak(n,t,e="nearest",s="constant",r=0,a){const o=N(n,"image","transform","float32"),i=N(t,"transforms","transform","float32");return S(4===o.rank,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),S(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),S(null==a||2===a.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`),R.runKernel(xh,{image:o,transforms:i},{interpolation:e,fillMode:s,fillValue:r,outputShape:a})}}),hu=O({less_:function ik(n,t){let e=N(n,"a","less","string_or_numeric"),s=N(t,"b","less","string_or_numeric");return[e,s]=Dt(e,s),Me(e.shape,s.shape),R.runKernel(nl,{a:e,b:s})}}),uk=O({bandPart_:function lk(n,t,e){const s=N(n,"a","bandPart");S(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[a,o]=s.shape.slice(-2);let i,l;"number"==typeof t?(S(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),S(t<=a,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`),i=N(t<0?a:t,"numLower","bandPart")):(S("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),i=mn(hu(t,0),a,ca(t,a))),"number"==typeof e?(S(e%1==0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),S(e<=o,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${o}).`),l=N(e<0?o:e,"numUpper","bandPart")):(S("int32"===e.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),l=mn(hu(e,0),o,ca(e,o)));const u=F(Xo(0,a,1,"int32"),[-1,1]),c=Xo(0,o,1,"int32"),h=Ie(u,c),d=Rs(fa(h,i),$r(h,It(l))),p=Wt([a,o],s.dtype);return F(Fs(Dr(F(s,[-1,a,o])).map(f=>mn(d,f,p))),r)}});function Wg(n,t,e=null){if(0===n.rank)return Kt(n);if(1!==n.rank&&null===e)return Wg(F(n,[-1]),t,e);if(1===n.rank||"number"==typeof e||Array.isArray(e)&&1===e.length){if(1===t)return Se(Kt(n),e);if(t===1/0)return ts(Kt(n),e);if(t===-1/0)return nu(Kt(n),e);if("euclidean"===t||2===t)return pn(Se(ia(Kt(n),Ve(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&2===e.length){if(1===t)return ts(Se(Kt(n),e[0]),e[1]-1);if(t===1/0)return ts(Se(Kt(n),e[1]),e[0]);if(t===-1/0)return nu(Se(Kt(n),e[1]),e[0]);if("fro"===t||"euclidean"===t)return pn(Se(gt(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const du=O({norm_:function ck(n,t="euclidean",e=null,s=!1){const r=Wg(n=N(n,"x","norm"),t,e);let a=r.shape;if(s){const o=$e(e,n.shape);a=Ft(r.shape,o)}return F(r,a)}}),dk=O({gramSchmidt_:function hk(n){let t;if(Array.isArray(n)){t=!1,S(null!=n&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let a=1;a<n.length;++a)S(n[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[a].shape[0]} vs. ${r})`)}else t=!0,n=On(n,n.shape[0],0).map(r=>Yo(r,[0]));S(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(R.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){const i=D(Se(D(e[o],a)),e[o]);a=Ie(a,i)}return Te(a,du(a,"euclidean"))}));return t?Fs(e,0):e}});function Ug(n,t=!1){return R.tidy(()=>{S(2===n.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=vg(e),a=Cr(n);const o=cu([[1]],[1,1]);let i=Cr(o);const l=e>=s?s:e;for(let u=0;u<l;++u){const c=a,h=i,d=r;[i,a,r]=R.tidy(()=>{const p=ut(a,[u,u],[e-u,1]),f=du(p),g=ut(a,[u,u],[1,1]),m=mn(Rn(g,0),cu([[-1]]),cu([[1]])),y=Ie(g,D(m,f)),x=Te(p,y);i=1===x.shape[0]?Cr(o):ln([o,ut(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const b=It(Te(at(m,y),f)),w=ut(a,[u,0],[e-u,s]),v=D(b,i),C=Je(i);if(0===u)a=Ie(w,at(v,at(C,w)));else{const $=Ie(w,at(v,at(C,w)));a=ln([ut(a,[0,0],[u,s]),$],0)}const k=Je(v),_=ut(r,[0,u],[e,r.shape[1]-u]);if(0===u)r=Ie(_,at(at(_,i),k));else{const $=Ie(_,at(at(_,i),k));r=ln([ut(r,[0,0],[e,u]),$],1)}return[i,a,r]}),We([c,h,d])}return!t&&e>s&&(r=ut(r,[0,0],[e,s]),a=ut(a,[0,0],[s,s])),[r,a]})}const fk=O({qr_:function pk(n,t=!1){if(S(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),2===n.rank)return Ug(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=Dr(F(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],a=[];return s.forEach(l=>{const[u,c]=Ug(l,t);r.push(u),a.push(c)}),[F(Fs(r,0),n.shape),F(Fs(a,0),n.shape)]}}});var gn=(()=>{return(n=gn||(gn={}))[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",gn;var n})();const Ps=O({computeWeightedLoss_:function mk(n,t,e=gn.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"losses","computeWeightedLoss");let r=null;null!=t&&(r=N(t,"weights","computeWeightedLoss"));const a=null==r?s:D(s,r);if(e===gn.NONE)return a;if(e===gn.SUM)return Se(a);if(e===gn.MEAN){if(null==r)return Ot(a);{const o=s.size/r.size,i=Te(Se(a),Se(r));return o>1?Te(i,Ve(o)):i}}if(e===gn.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Te(Se(a),Ve(s.size));{const o=D(r,Qs(s.shape)),i=ge(Se(Ko(o,Ve(0))),"float32");return Te(Se(a),i)}}throw Error(`Unknown reduction: ${e}`)}}),yk=O({absoluteDifference_:function gk(n,t,e,s=gn.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"labels","absoluteDifference"),a=N(t,"predictions","absoluteDifference");let o=null;null!=e&&(o=N(e,"weights","absoluteDifference")),ee(r.shape,a.shape,"Error in absoluteDifference: ");const i=Kt(Ie(r,a));return Ps(i,o,s)}}),bk=O({cosineDistance_:function xk(n,t,e,s,r=gn.SUM_BY_NONZERO_WEIGHTS){const a=N(n,"labels","cosineDistance"),o=N(t,"predictions","cosineDistance");let i=null;null!=s&&(i=N(s,"weights","cosineDistance")),ee(a.shape,o.shape,"Error in cosineDistance: ");const l=Ve(1),u=Ie(l,Se(D(a,o),e,!0));return Ps(u,i,r)}}),vk=O({hingeLoss_:function wk(n,t,e,s=gn.SUM_BY_NONZERO_WEIGHTS){let r=N(n,"labels","hingeLoss");const a=N(t,"predictions","hingeLoss");let o=null;null!=e&&(o=N(e,"weights","hingeLoss")),ee(r.shape,a.shape,"Error in hingeLoss: ");const i=Ve(1);r=Ie(D(Ve(2),r),i);const l=Os(Ie(i,D(r,a)));return Ps(l,o,s)}}),Sk=O({huberLoss_:function Ik(n,t,e,s=1,r=gn.SUM_BY_NONZERO_WEIGHTS){const a=N(n,"labels","huberLoss"),o=N(t,"predictions","huberLoss");let i=null;null!=e&&(i=N(e,"weights","huberLoss")),ee(a.shape,o.shape,"Error in huberLoss: ");const l=Ve(s),u=Kt(Ie(o,a)),c=ca(u,l),h=Ie(u,c),d=oe(D(Ve(.5),gt(c)),D(l,h));return Ps(d,i,r)}}),Nk=O({logLoss_:function Ck(n,t,e,s=1e-7,r=gn.SUM_BY_NONZERO_WEIGHTS){const a=N(n,"labels","logLoss"),o=N(t,"predictions","logLoss");let i=null;null!=e&&(i=N(e,"weights","logLoss")),ee(a.shape,o.shape,"Error in logLoss: ");const l=Ve(1),u=Ve(s),c=It(D(a,Gn(oe(o,u)))),h=D(Ie(l,a),Gn(oe(Ie(l,o),u))),d=Ie(c,h);return Ps(d,i,r)}}),Gg=O({squaredDifference_:function kk(n,t){let e=N(n,"a","squaredDifference"),s=N(t,"b","squaredDifference");return[e,s]=Dt(e,s),Me(e.shape,s.shape),R.runKernel(_o,{a:e,b:s},{})}}),_k=O({meanSquaredError_:function Tk(n,t,e,s=gn.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"labels","meanSquaredError"),a=N(t,"predictions","meanSquaredError");let o=null;null!=e&&(o=N(e,"weights","meanSquaredError")),ee(r.shape,a.shape,"Error in meanSquaredError: ");const i=Gg(r,a);return Ps(i,o,s)}}),Dk=O({sigmoidCrossEntropy_:function Ek(n,t,e,s=0,r=gn.SUM_BY_NONZERO_WEIGHTS){let a=N(n,"multiClassLabels","sigmoidCrossEntropy");const o=N(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=e&&(i=N(e,"weights","sigmoidCrossEntropy")),ee(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Ve(s),c=Ve(1),h=Ve(.5);a=oe(D(a,Ie(c,u)),D(h,u))}const l=function $k(n,t){const e=N(n,"labels","sigmoidCrossEntropyWithLogits"),s=N(t,"logits","sigmoidCrossEntropyWithLogits");ee(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Os(s),a=D(s,e),o=dd(Un(It(Kt(s))));return oe(Ie(r,a),o)}(a,o);return Ps(l,i,r)}}),Hg=O({logSumExp_:function Ak(n,t=null,e=!1){const s=N(n,"x","logSumExp"),r=$e(t,s.shape),a=ts(s,r,!0),o=Ie(s,a),i=Un(o),l=Se(i,r),u=Gn(l),c=oe(F(a,u.shape),u);if(e){const h=Ft(c.shape,r);return F(c,h)}return c}}),Fk=O({softmaxCrossEntropy_:function Ok(n,t,e,s=0,r=gn.SUM_BY_NONZERO_WEIGHTS){let a=N(n,"onehotLabels","softmaxCrossEntropy");const o=N(t,"logits","softmaxCrossEntropy");let i=null;if(null!=e&&(i=N(e,"weights","softmaxCrossEntropy")),ee(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Ve(s),c=Ve(1),h=Ve(a.shape[1]);a=oe(D(a,Ie(c,u)),Te(u,h))}const l=function Rk(n,t,e=-1){if(-1===e&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Es((r,a,o)=>{const l=Hg(a,[e],!0),u=Ie(ge(a,"float32"),l);o([r,u]);const c=It(D(u,r));return{value:Se(c,[e]),gradFunc:(p,f)=>{const[g,m]=f,y=Ft(p.shape,[e]);return[D(F(p,y),Ie(ge(g,"float32"),Un(m))),D(F(p,y),Ie(Un(m),ge(g,"float32")))]}}})(n,t)}(a,o);return Ps(l,i,r)}}),ms={flipLeftRight:TN,grayscaleToRGB:$N,resizeNearestNeighbor:zg,resizeBilinear:Mg,rotateWithOffset:DN,cropAndResize:NN,nonMaxSuppression:RN,nonMaxSuppressionAsync:function zN(n,t,e){return Rd.apply(this,arguments)},nonMaxSuppressionWithScore:UN,nonMaxSuppressionWithScoreAsync:function GN(n,t,e){return Od.apply(this,arguments)},nonMaxSuppressionPadded:qN,nonMaxSuppressionPaddedAsync:function KN(n,t,e){return Fd.apply(this,arguments)},threshold:rk,transform:ok},Qk={bandPart:uk,gramSchmidt:dk,qr:fk},Jk={absoluteDifference:yk,computeWeightedLoss:Ps,cosineDistance:bk,hingeLoss:vk,huberLoss:Sk,logLoss:Nk,meanSquaredError:_k,sigmoidCrossEntropy:Dk,softmaxCrossEntropy:Fk},Ar=class eT{static sgd(t){return new jh(t)}static momentum(t,e,s=!1){return new Zm(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,a=!1){return new Ym(t,e,s,r,a)}static adam(t=.001,e=.9,s=.999,r=null){return new Km(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new jm(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,a=0){return new Xm(t,e,s,r,a)}static adagrad(t,e=.1){return new qm(t,e)}},tT="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:n=>n();function jg(){return new Promise(n=>tT(()=>n()))}function Pd(n,t){const e=n[0].length;n.forEach((r,a)=>{S(r.length===e,()=>`Error in concat${e}D: rank of tensors[${a}] must be the same as the rank of the rest (${e})`)}),S(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,a)=>{for(let o=0;o<e;o++)S(o===t||r[o]===s[o],()=>`Error in concat${e}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function gs(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}var jn=(()=>{return(n=jn||(jn={}))[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS",jn;var n})();function qg(n,t,e){let s=new Array;if(null==e&&null==t)return s;if(null==t)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(null==e)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let r=1;r<e.length;++r){const a=e[r],o=s[s.length-e.length+r],i=s[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+n}] = ${a} but shape[${r+n}] = ${i}`)}else s[o]=a}return s}function Kg(n){const t={FIRST_DIM_SIZE:jn.FIRST_DIM_SIZE,VALUE_ROWIDS:jn.VALUE_ROWIDS,ROW_LENGTHS:jn.ROW_LENGTHS,ROW_SPLITS:jn.ROW_SPLITS,ROW_LIMITS:jn.ROW_LIMITS,ROW_STARTS:jn.ROW_STARTS},e=[];for(const s of n){if(!(s in t))break;e.push(t[s])}return e}function Xg(n){return 0===n.length?0:n[0]===jn.FIRST_DIM_SIZE?n.length-1:n.length}function Zg(n,t){if(null==n||null==t)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(e,s-1);++r){const a=n[r],o=t[r+1];if(a>=0&&o>=0&&1!==a&&a!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-n.length}] = ${a} but ragged tensor input.flatValues.shape[${r-n.length}] = ${o}`)}}const Ld=30;function pu(n){return n<=Ld?n:Ai(n,Math.floor(Math.sqrt(n)))}function Vd(n,t,e){return[e*("number"==typeof n?n:n[0]),t*("number"==typeof n?n:n[1])]}function Jo(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const a=t.length;for(let o=0;o<a;++o)r=r.concat([n[o+1]/t[o],t[o]]);r=r.concat(n.slice(a+1))}return r}function ei(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],a=[];for(let o=1;o<n;++o)o>=2*t+1||o%2==1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function ti(n,t,e,s=!0){const r=[];r.push(s?n[0]/e:n[0]*e);for(let a=1;a<n.length;++a)r.push(a<=t.length?s?t[a-1]*n[a]:n[a]/t[a-1]:n[a]);return r}function Md(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function zd(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}function Bd(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(0===I(n.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,a=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=n.shape,l=r.slice();l.pop();let u=1;for(let h=a;h<e;++h)u*=i[h],l.push(i[h]);const c=[...ke(n.shape).map(h=>h/u),1].slice(0,a);return[l,o,u,c]}function Yg(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(a+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(a+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(a+" update.rank != "+(r+n.length-s));for(let o=0;o<r;++o)if(e.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${e.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<e.rank-r;++o)if(e.shape[o+r]!==n[o+s])throw new Error(a+` updates.shape[${o+r}] (${e.shape[o+r]}) != shape[${o+r}] (${n[o+r]})`)}function nT(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(0===e.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===n.size)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Yg(e,t,n)}function Rr(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=e.length;let o=1;for(let h=r;h<a;++h)o*=e[h];const i=r<1?1:r;return{sliceRank:r,numUpdates:I(t.shape)/i,sliceSize:o,strides:[...ke(e.slice(0,r)),1],outputSize:I(e)}}const fu=1.7580993408473768,mu=1.0507009873554805,Wd=.3275911,Ud=.254829592,Gd=-.284496736,Hd=1.421413741,jd=-1.453152027,qd=1.061405429;function Ls(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(2*n.length);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function Qg(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function Jg(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function ey(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Kd(n,t){return{real:n[2*t],imag:n[2*t+1]}}function ty(n,t,e,s){n[2*s]=t,n[2*s+1]=e}function ny(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const a=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:e,imag:s}}function sy(n,t,e){const s=(e?2:-2)*Math.PI*(n/t);return{real:Math.cos(s),imag:Math.sin(s)}}const sT=/->/g;function Zd(n,t){const e=((n=n.replace(/\s/g,"")).length-n.replace(sT,"").length)/"->".length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=n.split("->");S(-1===s.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const a=s.split(","),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const p=r[d];if(!a.some(f=>-1!==f.indexOf(p)))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);-1===i.indexOf(p)&&i.push(p)}for(let d=0;d<s.length;++d){const p=s[d];-1===i.indexOf(p)&&","!==p&&i.push(p)}const l=new Array(a.length);for(let d=0;d<o;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<a[d].length;++p)l[d].push(i.indexOf(a[d][p]))}const u=i.length,h=[];for(let d=r.length;d<u;++d)h.push(d);return{allDims:i,summedDims:h,idDims:l}}function Yd(n,t){let e=new Array(n);e.fill(-1);for(let r=0;r<t.length;++r)e[t[r]]=r;const s=[];for(let r=0;r<n;++r)-1===e[r]&&s.push(r);return e=e.filter(r=>-1!==r),{permutationIndices:e,expandDims:s}}function Qd(n,t,e){const s=new Array(n);for(let r=0;r<e.length;++r){const a=e[r].shape;for(let o=0;o<t[r].length;++o)void 0===s[t[r][o]]?s[t[r][o]]=a[o]:S(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function Jd(n,t){const e=n,s=[];let r=0;0===n.length&&e.push(-1),r=n.length+1;for(let o=0;o<r;++o)s.push([]);const a=[];for(let o=0;o<e.length;++o){const l=rT(t,e[o]);for(const u of l)-1===a.indexOf(u)&&(s[o].push(u),a.push(u))}return{path:e,steps:s}}function ep(n){return n.every((t,e)=>t===e)}function rT(n,t){const e=[];for(let s=0;s<n.length;++s)(0===n[s].length||-1!==n[s].indexOf(t)||-1===t)&&e.push(s);return e}function tp(n,t,e=0){let s=[];if("number"==typeof t)S(n.shape[e]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{S(t.reduce((o,i)=>(-1===i&&(o+=1),o),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const o=t.reduce((i,l)=>l>0?i+l:i);t[a]=n.shape[e]-o}S(n.shape[e]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function oy(n){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${n}`}function iy(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function ly(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}function uy(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function cy(n,t){return`size ${n} must be non-negative, not ${t}`}function hy(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function dy(n,t){return`Input to reshape is a SparseTensor with ${I(n)}\n  dense values, but the requested shape requires a multiple of ${I(t)}. inputShape=${n} outputShape= ${t}`}function py(n,t){return`Input to reshape is a tensor with ${I(n)} dense values, but the requested shape has ${I(t)}. inputShape=${n} outputShape=${t}`}function np(){return"segment ids must be >= 0"}function fy(){return"segment ids are not increasing"}function my(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function gy(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}function yy(n,t){let s,e=!1;for(n<=Ld?(s=n,e=!0):s=Ai(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Ai(n,s+1);return s}function xy(n,t,e){const s=[],r=n.length;for(let a=0;a<r;a++)s.push(a!==t?n[a]:e);return s}function sp(n,t,e,s){const r=t.shape.length,a=n.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let h=0;h<s;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=n.shape[e],i=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)i.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<e;h++)i.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<r;h++)i.push(t.shape[h]);for(let h=e+1;h<a;h++)i.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function Vs(n){try{return n.map(t=>$s(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function by(n){return n.map(t=>_s(t))}function wy(n,t){const e=[];for(let a=0;a<t.length;a++)t[a]&&e.push(a);const s=Ge(n,"int32"),r=Ge([e.length,n.length],"int32");for(let a=0;a<e.length;a++){const o=s.indexToLoc(e[a]);r.values.set(o,a*n.length)}return r.toTensor()}!function FI(){for(const n of OI)te(n)}();const vy={kernelName:Fi,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,Qo(ge(e,"float32"),-1))}}},aT={kernelName:La,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=gt(ge(e,"float32")),r=pn(Ie(Ve(1),s));return It(Te(n,r))}}}},oT={kernelName:Va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=pn(Ie(gt(ge(e,"float32")),1));return Te(n,s)}}}},iT={kernelName:Jr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Me(e.shape,s.shape);return{a:()=>{let i=n;const l=Bt(e.shape,r);return l.length>0&&(i=Se(i,l)),F(i,e.shape)},b:()=>{let i=n;const l=Bt(s.shape,r);return l.length>0&&(i=Se(i,l)),F(i,s.shape)}}}},lT={kernelName:_c,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}},uT={kernelName:Pi,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Qe(e)}}},cT={kernelName:Li,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Qe(e)}}},hT={kernelName:Ma,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Te(n,pn(Ie(Ve(1),gt(ge(e,"float32")))))}}},dT={kernelName:za,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=pn(oe(Ve(1),gt(ge(e,"float32"))));return Te(n,s)}}}},pT={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Me(e.shape,s.shape);return{a:()=>{const i=oe(gt(e),gt(s));let l=D(n,Te(s,i));const u=Bt(e.shape,r);return u.length>0&&(l=Se(l,u)),F(l,e.shape)},b:()=>{const i=oe(gt(e),gt(s));let l=It(D(n,Te(e,i)));const u=Bt(s.shape,r);return u.length>0&&(l=Se(l,u)),F(l,s.shape)}}}},fT={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Te(n,oe(gt(ge(e,"float32")),1))}}},mT={kernelName:Wa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Te(n,Ie(Ve(1),gt(ge(e,"float32"))))}}},yT=O({avgPool3dGrad_:function gT(n,t,e,s,r,a){const o=N(n,"dy","avgPool3dGrad"),i=N(t,"input","avgPool3dGrad");let l=o,u=i,c=!1;4===i.rank&&(c=!0,l=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),S(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),S(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),fn("avgPool3dGrad",r,a);const p=R.runKernel(Ac,{dy:l,input:u},{filterSize:e,strides:s,pad:r,dimRoundingMode:a});return c?F(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),xT={kernelName:Mi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=e;return{x:()=>yT(n,s,r,a,o,i)}}},wT=O({avgPoolGrad_:function bT(n,t,e,s,r){const a=N(n,"dy","avgPoolGrad"),o=N(t,"input","avgPoolGrad");S(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,u=!1;3===o.rank&&(u=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),S(4===i.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const d=R.runKernel(Dc,{dy:l,input:i},{filterSize:e,strides:s,pad:r});return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),vT={kernelName:Vi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:a,pad:o}=e;return{x:()=>wT(n,s,r,a,o)}}},IT={kernelName:zi,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:a,transposeB:o}=e;return a||o?!a&&o?{a:()=>at(n,r,!1,!1),b:()=>at(n,s,!0,!1)}:a&&!o?{a:()=>at(r,n,!1,!0),b:()=>at(s,n,!1,!1)}:{a:()=>at(r,n,!0,!0),b:()=>at(n,s,!0,!0)}:{a:()=>at(n,r,!1,!0),b:()=>at(s,n,!0,!1)}}},rp=O({spaceToBatchND_:function ST(n,t,e){const s=N(n,"x","spaceToBatchND");return S(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),S(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),S(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+e[l-1][0]+e[l-1][1])%t[l-1]==0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`),R.runKernel($l,{x:s},{blockShape:t,paddings:e})}}),CT={kernelName:Bi,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>rp(n,s,r)}}},NT={kernelName:"BroadcastTo",gradFunc:(n,t,e)=>{const r=e.inputShape,a=e.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>Se(n,i,!0)}}},kT={kernelName:Ga,gradFunc:n=>({x:()=>n.clone()})},TT={kernelName:Ha,gradFunc:n=>({x:()=>Qe(n)})},_T={kernelName:ja,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=e;return{x:()=>mn(Rs($r(s,r),fa(s,a)),n,Qe(n))}}},$T={kernelName:Wi,inputsToSave:["x"],gradFunc:vy.gradFunc},ET={kernelName:Ui,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:r}=e,a=$e(r,t[0].shape)[0],o=s.map(l=>l[a]);return On(n,o,a).map(l=>()=>l)}},DT={kernelName:Gi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=e;return S(Zs(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>ud(s.shape,n,r,o,i,l),filter:()=>_d(s,n,r.shape,o,i,l)}}},AT={kernelName:Hi,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=e;return{dy:()=>_r(n,r,a,o,i,1,l),filter:()=>_d(n,s,r.shape,a,o,i,l)}}},OT=O({conv3DBackpropFilter_:function RT(n,t,e,s,r){let a=n;4===n.rank&&(a=F(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let o=t;return 4===o.rank&&(o=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),S(5===a.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),S(5===o.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),S(5===e.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),S(a.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${e[3]}.`),S(o.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${e[4]}).`),R.runKernel(Pc,{x:a,dy:o},{strides:s,pad:r,filterShape:e})}}),FT={kernelName:ji,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:a}=e;S(Zs(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,i]=t;return{x:()=>bg(o.shape,n,i,r,a),filter:()=>OT(o,n,i.shape,r,a)}}},Iy=O({sin_:function PT(n){const e={x:N(n,"x","sin","float32")};return R.runKernel(Io,e)}}),LT={kernelName:qa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(It(Iy(ge(e,"float32"))),n)}}},Sy=O({sinh_:function VT(n){const e={x:N(n,"x","sinh")};return R.runKernel(So,e)}}),MT={kernelName:Ka,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(Sy(ge(e,"float32")),n)}}},Cy=O({cumsum_:function zT(n,t=0,e=!1,s=!1){const a={x:N(n,"x","cumsum")};return R.runKernel(qi,a,{axis:t,exclusive:e,reverse:s})}}),BT={kernelName:qi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:a,reverse:o}=e;return{x:()=>{const i=_t([r],s.rank);let l=Cy(n,r,a,!o);return null!=i&&(l=Je(l,i)),l}}}},WT={kernelName:Ki,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:o}=e,i=null==s?[1,1]:s;S(Zs(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[l,u]=t;return S(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),S(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),S(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),S(sn(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),fn("depthwiseConv2d",a,o),{x:()=>Rg(l.shape,n,u,r,a,i,o),filter:()=>Ag(l,n,u.shape,r,a,i,o)}}},UT={kernelName:Xi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,a={x:s,filter:r,dy:n},o={x:s,filter:r,dy:n};return{x:()=>R.runKernel(Gc,a,e),filter:()=>R.runKernel(Hc,o,e)}}},GT={kernelName:Za,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>R.runKernel(jc,s)}}},HT={kernelName:Ya,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=D(Un(It(gt(e))),2/Math.sqrt(Math.PI));return{x:()=>D(n,s)}}},jT={kernelName:Qa,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,e)}}},qT={kernelName:Yi,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>F(n,e.shape)}}},KT={kernelName:Ja,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,Un(e))}}},XT={kernelName:eo,gradFunc:n=>({x:()=>Qe(n)})},ZT={kernelName:to,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Me(e.shape,s.shape);return{a:()=>{const i=Te(n,ge(s,"float32")),l=Bt(e.shape,r);return l.length>0?F(Se(i,l),e.shape):i},b:()=>{let i=D(n,ge(e,"float32"));const l=Bt(s.shape,r);l.length>0&&(i=F(Se(i,l),s.shape));const u=gt(s);return It(Te(i,ge(u,"float32")))}}}},Ny=O({rsqrt_:function YT(n){const e={x:N(n,"x","rsqrt","float32")};return R.runKernel(wo,e)}}),QT={kernelName:Qi,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,a,o,i]=t,l=null==i?Ve(1):i,u=Bt(a.shape,r.shape),c=[];if(1===a.rank){for(let w=0;w<r.shape.length-1;++w)c.push(r.shape[w]);c.push(1)}const h=Ie(r,a),d=D(n,l),p=Ny(oe(o,Ve(s))),f=D(D(D(p,p),p),Ve(-.5));return{x:()=>F(D(D(n,1===a.rank?es(F(p,[1,1,1,a.shape[0]]),c):p),l),r.shape),mean:()=>{let w=D(D(p,Ve(-1)),d);return 1===a.rank&&(w=Se(w,u)),F(w,a.shape)},variance:()=>{let w=D(D(f,h),d);return 1===a.rank&&(w=Se(w,u)),F(w,a.shape)},scale:()=>{const w=D(h,p);let v=D(n,w);return 1===a.rank&&(v=Se(v,u)),F(v,a.shape)},offset:()=>{let w=n;return 1===a.rank&&(w=Se(w,u)),F(w,a.shape)}}}},ky=O({unsortedSegmentSum_:function JT(n,t,e){const s=N(n,"x","unsortedSegmentSum"),r=N(t,"segmentIds","unsortedSegmentSum","int32");return S(qe(e),()=>"numSegments must be of dtype int"),R.runKernel(Ol,{x:s,segmentIds:r},{numSegments:e})}}),e_={kernelName:Ji,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:a}=e,o=$e(a,s.shape)[0];return{x:()=>{const l=s.shape,u=r.size,c=l.slice(0,o),h=c.length,d=l.slice(a,l.length).slice(1),p=d.length,f=Ty(0,h),g=Ty(h+1,h+1+p),m=_y([c,[u],d]),y=F(n,m),x=F(r,[u]),b=_y([[h],f,g]),w=Je(y,b);let v=ky(w,x,s.shape[o]);const C=Ys(b);return v=Je(v,C),v},indices:()=>r}}};function Ty(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function _y(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}const t_={kernelName:no,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Qe(e),b:()=>Qe(s)}}},n_={kernelName:so,gradFunc:n=>({x:()=>ge(n,"float32")})},s_={kernelName:ro,gradFunc:n=>({x:()=>Qe(n)})},r_={kernelName:ao,gradFunc:n=>({x:()=>Qe(n)})},a_={kernelName:oo,gradFunc:n=>({x:()=>Qe(n)})},o_={kernelName:tl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,a=Rn(s,0);return{x:()=>mn(a,n,D(n,r))}}},i_={kernelName:uo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Te(n,oe(e,1))}}},l_={kernelName:lo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Te(n,ge(e,"float32"))}}},u_={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const o=Un(s);return Ie(n,D(Se(n,r,!0),o))}}}},h_=O({localResponseNormalizationBackprop_:function c_(n,t,e,s=5,r=1,a=1,o=.5){return R.runKernel(Qc,{x:n,y:t,dy:e},{depthRadius:s,bias:r,alpha:a,beta:o})}}),d_={kernelName:il,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=e;return{x:()=>h_(s,r,n,a,o,i,l)}}};function $y(n,t,e,s){return t.rank<e.rank&&(t=F(t,Ft(t.shape,s))),n.rank<e.rank&&(n=F(n,Ft(n.shape,s))),{x:()=>D(n,ge(fs(e,t),n.dtype))}}const Ey={kernelName:ll,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,a=t[0],l=$y(n,t[1],a,$e(r,a.shape));return{x:()=>l.x()}}},p_={kernelName:co,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>D(n,ge($r(e,s),"float32")),b:()=>D(n,ge(hu(e,s),"float32"))}}},m_=O({maxPool3dGrad_:function f_(n,t,e,s,r,a,o){const i=N(n,"dy","maxPool3dGrad"),l=N(t,"input","maxPool3dGrad"),u=N(e,"output","maxPool3dGrad");let c=i,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=F(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=F(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),S(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),S(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),S(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),fn("maxPool3dGrad",a,o);const m=R.runKernel(eh,{dy:c,input:h,output:d},{filterSize:s,strides:r,pad:a,dimRoundingMode:o});return p?F(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),g_={kernelName:cl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=e;return{x:()=>m_(n,s,r,a,o,i,l)}}},x_=O({maxPoolGrad_:function y_(n,t,e,s,r,a,o){const i=N(n,"dy","maxPoolGrad"),l=N(t,"input","maxPoolGrad"),u=N(e,"output","maxPoolGrad");return S(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),S(4===i.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),S(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),fn("maxPoolGrad",a,o),R.runKernel(Jc,{dy:i,input:l,output:u},{filterSize:s,strides:r,pad:a,dimRoundingMode:o})}}),b_={kernelName:ul,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:a,strides:o,pad:i}=e;return{x:()=>x_(n,s,r,a,o,i)}}},w_={kernelName:hl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,a=$e(r,s.shape),l=I(Zt(s.shape,a)[1]);return{x:()=>{const c=s.shape.slice();a.forEach(p=>{c[p]=1});const h=F(n,c);return Te(D(h,Qs(s.shape,"float32")),l)}}}},v_={kernelName:dl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[a,o]=t,l=$y(n,o,a,$e(r,a.shape));return{x:()=>l.x()}}},I_={kernelName:ho,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>D(n,ge(fa(e,s),"float32")),b:()=>D(n,ge(Rn(e,s),"float32"))}}},S_={kernelName:pl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,a=r.map(o=>o[0]);return{x:()=>ut(n,a,s.shape)}}},C_={kernelName:po,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Me(e.shape,s.shape);return{a:()=>{const i=Bt(e.shape,r);return i.length>0?F(Se(n,i),e.shape):n},b:()=>{const i=D(n,It(tu(Te(e,s)))),l=Bt(s.shape,r);return l.length>0?F(Se(i,l),s.shape):i}}}},N_={kernelName:fo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Me(e.shape,s.shape);return{a:()=>{const i=D(n,ge(s,"float32")),l=Bt(e.shape,r);return l.length>0?F(Se(i,l),e.shape):i},b:()=>{const i=D(n,ge(e,"float32")),l=Bt(s.shape,r);return l.length>0?F(Se(i,l),s.shape):i}}}},k_={kernelName:fl,gradFunc:n=>({x:()=>It(n)})},T_={kernelName:yl,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Wt(e.shape,"float32")}}},__={kernelName:gl,gradFunc:n=>({x:()=>Qe(n)})},$_={kernelName:xl,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Dr(n,s).map(a=>()=>a)}},Dy={kernelName:bl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,a=r.map(o=>o[0]);return{x:()=>ut(n,a,s.shape)}}},E_={kernelName:mo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,a=e,o=s,i=Me(a.shape,o.shape);return{a:()=>{const c=ge(o,"float32");let h=D(n,D(c,ia(a,Ie(c,Ve(1)))));const d=Bt(a.shape,i);return d.length>0&&(h=Se(h,d)),F(h,a.shape)},b:()=>{const c=Rn(a,0),h=mn(c,Gn(a),Qe(a));let d=D(n,D(r,h));const p=Bt(o.shape,i);return p.length>0&&(d=Se(d,p)),F(d,o.shape)}}}},D_={kernelName:wl,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=Rn(e,0);return{x:()=>mn(r,n,D(n,s)),alpha:()=>{let a=mn(r,Qe(n),D(n,e));const o=Bt(s.shape,n.shape);return o.length>0&&(a=Se(a,o)),F(a,s.shape)}}}},ap=O({cumprod_:function A_(n,t=0,e=!1,s=!1){const a={x:N(n,"x","cumprod")};return R.runKernel(Vc,a,{axis:t,exclusive:e,reverse:s})}});const F_={kernelName:vl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;let a=[];return a=null==r?s.shape.map((o,i)=>i):"number"==typeof r?[r]:r,{x:()=>function O_(n,t,e){const s=n.shape.length,r=s-e.length,a=_t(e,s);let o=n;null!=a&&(o=Je(n,a));const i=o.shape.slice(),u=i.splice(s-e.length,e.length).reduce((d,p)=>d*p,1);i.push(u);let h=function R_(n,t,e){const s=n.shape.slice();s[e]=1;const r=F(t,s),a=ap(n,e,!0,!1),o=ap(n,e,!0,!0),i=D(a,o);return D(r,i)}(o.reshape(i),t,r);if(h=h.reshape(o.shape),null!=a){const d=Ys(a);h=Je(h,d)}return h}(s,n,a)}}},P_={kernelName:Xa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Me(e.shape,s.shape);return{a:()=>{const i=Te(n,ge(s,"float32")),l=Bt(e.shape,r);return l.length>0?F(Se(i,l),e.shape):i},b:()=>{let i=D(n,ge(e,"float32"));const l=Bt(s.shape,r);l.length>0&&(i=F(Se(i,l),s.shape));const u=gt(s);return It(Te(i,ge(u,"float32")))}}}},L_={kernelName:go,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Te(n,It(gt(e)))}}},V_={kernelName:xo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=D(fa(e,6),Qo(e));return{x:()=>D(n,ge(s,"float32"))}}},M_={kernelName:yo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,ge(Qo(e),"float32"))}}},z_={kernelName:Il,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>F(n,e.shape)}}},B_={kernelName:Cl,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>R.runKernel(ih,r,e)}}},W_={kernelName:Sl,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>R.runKernel(oh,r,e)}}},U_={kernelName:Nl,gradFunc:(n,t,e)=>{const{dims:s}=e,r=$e(s,n.shape);return{x:()=>Er(n,r)}}},G_={kernelName:bo,gradFunc:n=>({x:()=>Qe(n)})},H_={kernelName:wo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>It(Te(n,D(ia(e,1.5),2)))}}},op=O({logicalNot_:function j_(n){const e={x:N(n,"x","logicalNot","bool")};return R.runKernel(al,e)}}),q_={kernelName:kl,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>ge(Qe(e),"float32"),t:()=>D(n,ge(e,n.dtype)),e:()=>D(n,ge(op(e),n.dtype))}}},K_={kernelName:vo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Rn(e,Ve(0)),r=Ve(fu),a=Ve(mu),o=D(n,a),i=D(D(n,r),Un(ge(e,"float32")));return mn(s,o,i)}}}},X_={kernelName:No,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,D(e,Ie(Ve(1),e)))}}},Z_={kernelName:Co,gradFunc:n=>({x:()=>Qe(n)})},ip=O({cos_:function Y_(n){const e={x:N(n,"x","cos","float32")};return R.runKernel(qa,e)}}),Q_={kernelName:Io,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(ip(ge(e,"float32")),n)}}},Ay=O({cosh_:function J_(n){const e={x:N(n,"x","cosh","float32")};return R.runKernel(Ka,e)}}),e$={kernelName:So,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(Ay(ge(e,"float32")),n)}}},t$={kernelName:Tl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:a}=e,o=s.shape,[i,l]=Yl(s,r,a),u=[];for(let c=0;c<n.rank;c++)u.push([i[c],o[c]-i[c]-l[c]]);return{x:()=>gd(n,u)}}},n$={kernelName:Dl,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,o=D(n,s);return{logits:()=>Ie(o,D(Se(o,[r],!0),s))}}},s$={kernelName:ko,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,da(e))}}},lp=O({batchToSpaceND_:function r$(n,t,e){const s=N(n,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);return S(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),S(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),S(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`),R.runKernel(Bi,{x:s},{blockShape:t,crops:e})}}),Ry={kernelName:$l,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>lp(n,s,r)}}},Oy={kernelName:El,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>ln(n,s)}}},b$=[vy,aT,oT,iT,lT,uT,cT,hT,dT,pT,fT,mT,xT,vT,IT,CT,NT,kT,TT,_T,$T,ET,AT,DT,FT,LT,MT,BT,WT,UT,P_,GT,HT,jT,qT,KT,ZT,XT,QT,e_,t_,n_,s_,r_,a_,o_,i_,l_,u_,d_,Ey,Ey,p_,g_,b_,w_,v_,I_,S_,C_,N_,k_,T_,__,$_,Dy,Dy,E_,D_,F_,L_,V_,M_,z_,B_,W_,U_,G_,H_,q_,K_,X_,Z_,Q_,e$,t$,n$,s$,Ry,Ry,Oy,Oy,{kernelName:To,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Te(n,D(pn(ge(e,"float32")),2))}}},{kernelName:_o,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ve(2);return{a:()=>D(n,D(r,Ie(e,s))),b:()=>D(n,D(r,Ie(s,e)))}}},{kernelName:dh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,D(ge(e,"float32"),2))}}},{kernelName:Ro,gradFunc:n=>({x:()=>Qe(n)})},{kernelName:$o,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Me(e.shape,s.shape);return{a:()=>{let i=n;const l=Bt(e.shape,r);return l.length>0&&(i=Se(i,l)),F(i,e.shape)},b:()=>{let i=n;const l=Bt(s.shape,r);return l.length>0&&(i=Se(i,l)),F(It(i),s.shape)}}}},{kernelName:_l,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:a}=e;$e(a,s.shape).forEach(u=>{r[u]=1});const i=F(n,r),l=D(i,Qs(s.shape,"float32"));return{x:()=>l}}},{kernelName:Eo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Te(n,gt(ip(e)))}}},{kernelName:Do,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(Ie(Ve(1),gt(e)),n)}}},{kernelName:Ao,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let o=Qe(s);if(1===s.rank)for(let i=0;i<r[0];++i)o=oe(o,ut(n,[i*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=oe(o,ut(n,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)o=oe(o,ut(n,[i*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)o=oe(o,ut(n,[i*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return o}}}},{kernelName:ea,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,a=Ys(r);return{x:()=>Je(n,a)}}},{kernelName:Rl,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>Fs(n,r)}}},{kernelName:Ol,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>function y$(n,t){const e=Ks(t,Qe(t)),s=cd(n,e);let r=$r(t,Ve(0,"int32"));const a=s.rank-r.rank;for(let i=0;i<a;++i)r=Nn(r,i+1);r=Rs(r,Qs(s.shape,"bool"));const o=Qe(s);return mn(r,s,o)}(n,e)}}},{kernelName:Fl,gradFunc:n=>({x:()=>Qe(n)})}];for(const n of b$)vv(n);q().prototype.abs=function(){return this.throwIfDisposed(),Kt(this)};const v$=O({acos_:function w$(n){const e={x:N(n,"x","acos")};return R.runKernel(La,e)}});q().prototype.acos=function(){return this.throwIfDisposed(),v$(this)};const S$=O({acosh_:function I$(n){const e={x:N(n,"x","acosh")};return R.runKernel(Va,e)}});q().prototype.acosh=function(){return this.throwIfDisposed(),S$(this)},q().prototype.add=function(n){return this.throwIfDisposed(),oe(this,n)},q().prototype.all=function(n,t){return this.throwIfDisposed(),gg(this,n,t)},q().prototype.any=function(n,t){return this.throwIfDisposed(),ad(this,n,t)},q().prototype.argMax=function(n){return this.throwIfDisposed(),Uo(this,n)};const N$=O({argMin_:function C$(n,t=0){const s={x:N(n,"x","argMin")};return R.runKernel(Li,s,{axis:t})}});q().prototype.argMin=function(n){return this.throwIfDisposed(),N$(this,n)},q().prototype.asScalar=function(){return this.throwIfDisposed(),S(1===this.size,()=>"The array must have only 1 element."),F(this,[])},q().prototype.asType=function(n){return this.throwIfDisposed(),ge(this,n)},q().prototype.as1D=function(){return this.throwIfDisposed(),F(this,[this.size])},q().prototype.as2D=function(n,t){return this.throwIfDisposed(),F(this,[n,t])},q().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),F(this,[n,t,e])},q().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),F(this,[n,t,e,s])},q().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),F(this,[n,t,e,s,r])};const T$=O({asin_:function k$(n){const e={x:N(n,"x","asin")};return R.runKernel(Ma,e)}});q().prototype.asin=function(){return this.throwIfDisposed(),T$(this)};const $$=O({asinh_:function _$(n){const e={x:N(n,"x","asinh")};return R.runKernel(za,e)}});q().prototype.asinh=function(){return this.throwIfDisposed(),$$(this)};const D$=O({atan_:function E$(n){const e={x:N(n,"x","atan")};return R.runKernel(Ba,e)}});q().prototype.atan=function(){return this.throwIfDisposed(),D$(this)};const R$=O({atan2_:function A$(n,t){let e=N(n,"a","atan2"),s=N(t,"b","atan2");return[e,s]=Dt(e,s),R.runKernel(Ua,{a:e,b:s})}});q().prototype.atan2=function(n){return this.throwIfDisposed(),R$(this,n)};const F$=O({atanh_:function O$(n){const e={x:N(n,"x","atanh")};return R.runKernel(Wa,e)}});q().prototype.atanh=function(){return this.throwIfDisposed(),F$(this)},q().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),ld(this,n,t,e,s)},q().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),lp(this,n,t)},q().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),Ql(this,n,t,e,s,r)},q().prototype.broadcastTo=function(n){return this.throwIfDisposed(),qo(this,n)},q().prototype.cast=function(n){return this.throwIfDisposed(),ge(this,n)};const L$=O({ceil_:function P$(n){const e={x:N(n,"x","ceil","float32")};return R.runKernel(Ha,e)}});q().prototype.ceil=function(){return this.throwIfDisposed(),L$(this)},q().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),An(this,n,t)},q().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Rt&&(n=[n]),ln([this,...n],t)},q().prototype.conv1d=function(n,t,e,s,r,a){return this.throwIfDisposed(),yg(this,n,t,e,s,r,a)},q().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),xg(this,n,t,e,s,r)},q().prototype.conv2d=function(n,t,e,s,r,a){return this.throwIfDisposed(),_r(this,n,t,e,s,r,a)},q().prototype.cos=function(){return this.throwIfDisposed(),ip(this)},q().prototype.cosh=function(){return this.throwIfDisposed(),Ay(this)},q().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),ap(this,n,t,e)},q().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),Cy(this,n,t,e)};const M$=O({depthToSpace_:function V$(n,t,e="NHWC"){const s=N(n,"x","depthToSpace","float32"),r="NHWC"===e?s.shape[1]:s.shape[2],a="NHWC"===e?s.shape[2]:s.shape[3],o="NHWC"===e?s.shape[3]:s.shape[1];return S(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),S(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`),S(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`),S(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`),R.runKernel(Bc,{x:s},{blockSize:t,dataFormat:e})}});q().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),M$(this,n,t)},q().prototype.depthwiseConv2d=function(n,t,e,s,r,a){return this.throwIfDisposed(),Jl(this,n,t,e,s,r,a)};const B$=O({dilation2d_:function z$(n,t,e,s,r=[1,1],a="NHWC"){const o=N(n,"x","dilation2d"),i=N(t,"filter","dilation2d");S(3===o.rank||4===o.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),S(3===i.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),S("NHWC"===a,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,u=!1;3===o.rank&&(l=F(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0),S(l.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${i.shape[2]}`);const d=R.runKernel(Xi,{x:l,filter:i},{strides:e,pad:s,dilations:r});return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});q().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),B$(this,n,t,e,s,r)};const U$=O({divNoNan_:function W$(n,t){let e=N(n,"a","div"),s=N(t,"b","div");[e,s]=Dt(e,s);const r=Te(e,s),a=Qe(r),o=fs(s,a);return mn(o,a,r)}});q().prototype.divNoNan=function(n){return this.throwIfDisposed(),U$(this,n)},q().prototype.div=function(n){return this.throwIfDisposed(),Te(this,n)};const H$=O({dot_:function G$(n,t){const e=N(n,"t1","dot"),s=N(t,"t2","dot");S(!(1!==e.rank&&2!==e.rank||1!==s.rank&&2!==s.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=1===e.rank?e.size:e.shape[1],a=1===s.rank?s.size:s.shape[0];if(S(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),1===e.rank&&1===s.rank){const o=F(e,[1,-1]),i=F(s,[-1,1]),l=at(o,i);return F(l,[])}if(1===e.rank&&2===s.rank){const o=F(e,[1,-1]),i=F(s,[s.shape[0],s.shape[1]]),l=at(o,i);return F(l,[l.size])}if(2===e.rank&&1===s.rank){const o=F(s,[-1,1]),i=at(e,o);return F(i,[i.size])}{const o=F(s,[s.shape[0],s.shape[1]]);return at(e,o)}}});q().prototype.dot=function(n){return this.throwIfDisposed(),H$(this,n)},q().prototype.elu=function(){return this.throwIfDisposed(),eu(this)},q().prototype.equal=function(n){return this.throwIfDisposed(),fs(this,n)};const q$=O({erf_:function j$(n){let t=N(n,"x","erf");return S("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=ge(t,"float32")),R.runKernel(Ya,{x:t})}});q().prototype.erf=function(){return this.throwIfDisposed(),q$(this)};const X$=O({euclideanNorm_:function K$(n,t=null,e=!1){return du(n,"euclidean",t,e)}});q().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),X$(this,n,t)},q().prototype.exp=function(){return this.throwIfDisposed(),Un(this)},q().prototype.expandDims=function(n){return this.throwIfDisposed(),Nn(this,n)};const Y$=O({expm1_:function Z$(n){const e={x:N(n,"x","expm1")};return R.runKernel(Ja,e)}});q().prototype.expm1=function(){return this.throwIfDisposed(),Y$(this)},q().prototype.fft=function(){return this.throwIfDisposed(),kd(this)},q().prototype.flatten=function(){return this.throwIfDisposed(),F(this,[this.size])},q().prototype.floor=function(){return this.throwIfDisposed(),tu(this)},q().prototype.floorDiv=function(n){return this.throwIfDisposed(),Hm(this,n)},q().prototype.gather=function(n,t,e){return this.throwIfDisposed(),cd(this,n,t,e)},q().prototype.greaterEqual=function(n){return this.throwIfDisposed(),$r(this,n)},q().prototype.greater=function(n){return this.throwIfDisposed(),Rn(this,n)},q().prototype.ifft=function(){return this.throwIfDisposed(),au(this)},q().prototype.irfft=function(){return this.throwIfDisposed(),Eg(this)};const J$=O({isFinite_:function Q$(n){const e={x:N(n,"x","isFinite")};return R.runKernel(ro,e)}});q().prototype.isFinite=function(){return this.throwIfDisposed(),J$(this)};const t2=O({isInf_:function e2(n){const e={x:N(n,"x","isInf")};return R.runKernel(ao,e)}});q().prototype.isInf=function(){return this.throwIfDisposed(),t2(this)};const s2=O({isNaN_:function n2(n){const e={x:N(n,"x","isNaN")};return R.runKernel(oo,e)}});q().prototype.isNaN=function(){return this.throwIfDisposed(),s2(this)},q().prototype.leakyRelu=function(n){return this.throwIfDisposed(),hd(this,n)},q().prototype.lessEqual=function(n){return this.throwIfDisposed(),fa(this,n)},q().prototype.less=function(n){return this.throwIfDisposed(),hu(this,n)};const a2=O({localResponseNormalization_:function r2(n,t=5,e=1,s=1,r=.5){const a=N(n,"x","localResponseNormalization");S(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),S(qe(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;3===a.rank&&(i=!0,o=F(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const c=R.runKernel(il,{x:o},{depthRadius:t,bias:e,alpha:s,beta:r});return i?F(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});q().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),a2(this,n,t,e,s)};const i2=O({logSigmoid_:function o2(n){const t=N(n,"x","logSigmoid");return Es(s=>({value:It(Zo(It(s))),gradFunc:o=>D(o,da(It(s)))}))(t)}});q().prototype.logSigmoid=function(){return this.throwIfDisposed(),i2(this)},q().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Ig(this,n)},q().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),Hg(this,n,t)},q().prototype.log=function(){return this.throwIfDisposed(),Gn(this)},q().prototype.log1p=function(){return this.throwIfDisposed(),dd(this)},q().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Rs(this,n)},q().prototype.logicalNot=function(){return this.throwIfDisposed(),op(this)};const Fy=O({logicalOr_:function l2(n,t){const e=N(n,"a","logicalOr","bool"),s=N(t,"b","logicalOr","bool");return Me(e.shape,s.shape),R.runKernel(ol,{a:e,b:s})}});q().prototype.logicalOr=function(n){return this.throwIfDisposed(),Fy(this,n)};const c2=O({logicalXor_:function u2(n,t){const e=N(n,"a","logicalXor","bool"),s=N(t,"b","logicalXor","bool");return Me(e.shape,s.shape),Rs(Fy(n,t),op(Rs(n,t)))}});q().prototype.logicalXor=function(n){return this.throwIfDisposed(),c2(this,n)},q().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),at(this,n,t,e)},q().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),pd(this,n,t,e,s)},q().prototype.max=function(n,t){return this.throwIfDisposed(),ts(this,n,t)},q().prototype.maximum=function(n){return this.throwIfDisposed(),Ks(this,n)},q().prototype.mean=function(n,t){return this.throwIfDisposed(),Ot(this,n,t)},q().prototype.min=function(n,t){return this.throwIfDisposed(),nu(this,n,t)},q().prototype.minimum=function(n){return this.throwIfDisposed(),ca(this,n)};const d2=O({mirrorPad_:function h2(n,t,e){S("reflect"===e||"symmetric"===e,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=N(n,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");S(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r="reflect"===e?1:0;for(let i=0;i<s.rank;i++)S(2===t[i].length,()=>"Invalid number of paddings. Must be length of 2 each."),S(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);return R.runKernel(pl,{x:s},{paddings:t,mode:e})}});q().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),d2(this,n,t)};const f2=O({mod_:function p2(n,t){let e=N(n,"a","mod"),s=N(t,"b","mod");return[e,s]=Dt(e,s),R.runKernel(po,{a:e,b:s})}});q().prototype.mod=function(n){return this.throwIfDisposed(),f2(this,n)},q().prototype.mul=function(n){return this.throwIfDisposed(),D(this,n)},q().prototype.neg=function(){return this.throwIfDisposed(),It(this)},q().prototype.norm=function(n,t,e){return this.throwIfDisposed(),du(this,n,t,e)},q().prototype.notEqual=function(n){return this.throwIfDisposed(),Ko(this,n)},q().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Cg(this,n,t,e)},q().prototype.onesLike=function(){return this.throwIfDisposed(),Hn(this)},q().prototype.pad=function(n,t){return this.throwIfDisposed(),gd(this,n,t)};const x2=O({pool_:function m2(n,t,e,s,r,a,o){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=N(n,"x","maxPool");let l=i,u=!1;3===i.rank&&(u=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(sn(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);const c=Wn(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function y2(n,t){const s=n.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function g2(n,t,e){const s=e.map(c=>c[0]),r=e.map(c=>c[1]),a=n.concat(s,r),o=t.map((c,h)=>(c-a[h]%c)%c),i=r.map((c,h)=>c+o[h]),l=t.map((c,h)=>[s[h],i[h]]),u=t.map((c,h)=>[0,o[h]]);return[l,u]}([c.inHeight,c.inWidth],h,d),m=p?s:"valid",y=p?l:rp(l,h,f),b=("avg"===e?()=>ld(y,t,a,m,o):()=>pd(y,t,a,m,o))(),w=p?b:lp(b,h,g);return u?F(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});q().prototype.pool=function(n,t,e,s,r,a){return this.throwIfDisposed(),x2(this,n,t,e,s,r,a)},q().prototype.pow=function(n){return this.throwIfDisposed(),ia(this,n)},q().prototype.prelu=function(n){return this.throwIfDisposed(),yd(this,n)};const w2=O({prod_:function b2(n,t=null,e=!1){let s=N(n,"x","prod");return"bool"===s.dtype&&(s=ge(s,"int32")),R.runKernel(vl,{x:s},{axis:t,keepDims:e})}});q().prototype.prod=function(n,t){return this.throwIfDisposed(),w2(this,n,t)};const I2=O({reciprocal_:function v2(n){const e={x:N(n,"x","reciprocal")};return R.runKernel(go,e)}});q().prototype.reciprocal=function(){return this.throwIfDisposed(),I2(this)},q().prototype.relu=function(){return this.throwIfDisposed(),Os(this)},q().prototype.relu6=function(){return this.throwIfDisposed(),Dg(this)},q().prototype.reshapeAs=function(n){return this.throwIfDisposed(),F(this,n.shape)},q().prototype.reshape=function(n){return this.throwIfDisposed(),F(this,n)},q().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),Mg(this,n,t,e)},q().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),zg(this,n,t,e)},q().prototype.reverse=function(n){return this.throwIfDisposed(),Er(this,n)},q().prototype.rfft=function(){return this.throwIfDisposed(),Td(this)},q().prototype.round=function(){return this.throwIfDisposed(),Bg(this)},q().prototype.rsqrt=function(){return this.throwIfDisposed(),Ny(this)},q().prototype.selu=function(){return this.throwIfDisposed(),kg(this)},q().prototype.separableConv2d=function(n,t,e,s,r,a){return this.throwIfDisposed(),Tg(this,n,t,e,s,r,a)},q().prototype.sigmoid=function(){return this.throwIfDisposed(),da(this)};const C2=O({sign_:function S2(n){const e={x:N(n,"x","sign")};return R.runKernel(Co,e)}});q().prototype.sign=function(){return this.throwIfDisposed(),C2(this)},q().prototype.sin=function(){return this.throwIfDisposed(),Iy(this)},q().prototype.sinh=function(){return this.throwIfDisposed(),Sy(this)},q().prototype.slice=function(n,t){return this.throwIfDisposed(),ut(this,n,t)},q().prototype.softmax=function(n){return this.throwIfDisposed(),Sd(this,n)},q().prototype.softplus=function(){return this.throwIfDisposed(),Zo(this)},q().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),rp(this,n,t)},q().prototype.split=function(n,t){return this.throwIfDisposed(),On(this,n,t)},q().prototype.sqrt=function(){return this.throwIfDisposed(),pn(this)},q().prototype.square=function(){return this.throwIfDisposed(),gt(this)},q().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Gg(this,n)},q().prototype.squeeze=function(n){return this.throwIfDisposed(),Yo(this,n)},q().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof Rt?[this,n]:[this,...n];return Fs(e,t)},q().prototype.step=function(n){return this.throwIfDisposed(),Qo(this,n)};const k2=O({stridedSlice_:function N2(n,t,e,s,r=0,a=0,o=0,i=0,l=0){const c={x:N(n,"x","stridedSlice","string_or_numeric")};return R.runKernel(ph,c,{begin:t,end:e,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l})}});q().prototype.stridedSlice=function(n,t,e,s,r,a,o,i){return this.throwIfDisposed(),k2(this,n,t,e,s,r,a,o,i)},q().prototype.sub=function(n){return this.throwIfDisposed(),Ie(this,n)},q().prototype.sum=function(n,t){return this.throwIfDisposed(),Se(this,n,t)};const _2=O({tan_:function T2(n){const e={x:N(n,"x","tan","float32")};return R.runKernel(Eo,e)}});q().prototype.tan=function(){return this.throwIfDisposed(),_2(this)},q().prototype.tanh=function(){return this.throwIfDisposed(),Cd(this)},q().prototype.tile=function(n){return this.throwIfDisposed(),es(this,n)},q().prototype.toBool=function(){return this.throwIfDisposed(),ge(this,"bool")},q().prototype.toFloat=function(){return this.throwIfDisposed(),ge(this,"float32")},q().prototype.toInt=function(){return this.throwIfDisposed(),ge(this,"int32")};const E2=O({topk_:function $2(n,t=1,e=!0){const s=N(n,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},o={k:t,sorted:e},[i,l]=R.runKernel(yh,a,o);return{values:i,indices:l}}});q().prototype.topk=function(n,t){return this.throwIfDisposed(),E2(this,n,t)},q().prototype.transpose=function(n){return this.throwIfDisposed(),Je(this,n)};const A2=O({unique_:function D2(n,t=0){const e=N(n,"x","unique","string_or_numeric");S(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[a,o]=R.runKernel(bh,s,r);return{values:a,indices:o}}});q().prototype.unique=function(n){return this.throwIfDisposed(),A2(this,n)},q().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),ky(this,n,t)},q().prototype.unstack=function(n){return this.throwIfDisposed(),Dr(this,n)},q().prototype.where=function(n,t){return this.throwIfDisposed(),mn(n,this,t)},q().prototype.zerosLike=function(){return this.throwIfDisposed(),Qe(this)};class ys extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ys.prototype)}}class qn extends Error{constructor(t){super(t),Object.setPrototypeOf(this,qn.prototype)}}class A extends Error{constructor(t){super(t),Object.setPrototypeOf(this,A.prototype)}}class Be extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Be.prototype)}}class up extends Error{constructor(t){super(t),Object.setPrototypeOf(this,up.prototype)}}Error;class Ly{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}function Or(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}{const e=new Array(t);return e.fill(n),e}}function Fn(n,t){if(!n)throw new up(t)}function Vy(n,t){let e=0;for(const s of n)s===t&&e++;return e}function vn(n){return 1===n.length?n[0]:n}function yt(n){return Array.isArray(n)?n:[n]}function Ms(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Fr(n){return n.length<=1||-1===n.indexOf("_")?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Kn={};function cp(n){if(null==n)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function hp(n){if(null!=n&&"object"==typeof n)if(Array.isArray(n))n.forEach(t=>hp(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];null!=s&&"object"==typeof s&&(Array.isArray(s)||"ndarray"!==s.type||"number"!=typeof s.value?hp(s):n[e]=s.value)}}}function ni(n,t={},e={},s="object",r=!1){if("string"==typeof n){const a=n;let o;if(a in e)o=e[a];else if(a in Kn)o=Kn[a];else if(o=t[a],null==o)throw new A(`Unknown ${s}: ${n}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}{const a=n;if(null==a.className||null==a.config)throw new A(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const o=a.className;let i,l;if(o in e?[i,l]=e[o]:o in Kn?[i,l]=Kn.className:o in t&&([i,l]=t[o]),null==i)throw new A(`Unknown ${s}: ${o}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const u={};for(const p of Object.keys(Kn))u[p]=Kn[p];for(const p of Object.keys(e))u[p]=e[p];a.config.customObjects=u;const h=Object.assign({},Kn);for(const p of Object.keys(e))Kn[p]=e[p];hp(a.config);const d=l(i,a.config,e,r);return Kn=Object.assign({},h),d}{const u=Object.assign({},Kn);for(const h of Object.keys(e))Kn[h]=e[h];const c=new i(a.config);return Kn=Object.assign({},u),c}}}function gu(n,t){return-1*function R2(n,t){return n<t?-1:n>t?1:0}(n,t)}function Js(n){if(null==n)return n;const t=[];for(const e of n)-1===t.indexOf(e)&&t.push(e);return t}function O2(n){if(null==n)throw new A(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function Pr(n,t,e){if(null!=e&&n.indexOf(e)<0)throw new A(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function dp(n,t,e=0,s=1/0){return Fn(e>=0),Fn(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function Yt(n,t){Array.isArray(n)?(S(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Yt(e,`element ${s+1} of ${t}`))):S(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${My(n)}.`)}function My(n){return null===n?"null":Array.isArray(n)?"["+n.map(t=>My(t)).join(",")+"]":"string"==typeof n?`"${n}"`:`${n}`}function zy(n){return"relu"===n?"relu":"linear"===n?"linear":"elu"===n?"elu":null}let P2=0;function By(){return P2++}const yu={};function xu(n=""){return n in yu||(yu[n]=0),yu[n]+=1,n+yu[n].toString()}const L2=["channelsFirst","channelsLast"],V2=["nearest","bilinear"],M2=["valid","same","causal"],z2=["max","avg"],B2=["sum","mul","concat","ave"],ma=new Map;function Lt(n){Pr(L2,"DataFormat",n)}function Pn(n){Pr(M2,"PaddingMode",n)}function Wy(n){Pr(z2,"PoolMode",n)}const si=[];function Lr(n,t){si.push(n);try{const e=t();return si.pop(),e}catch(e){throw si.pop(),e}}function Gy(n){if(!jy(n))throw new Error("Not a valid tensor name: '"+n+"'");return function U2(){return 0===si.length?"":si.join("/")+"/"}()+n}function Hy(n){if(!jy(n))throw new Error("Not a valid tensor name: '"+n+"'");ma.has(n)||ma.set(n,0);const t=ma.get(n);if(ma.set(n,ma.get(n)+1),t>0){const e=`${n}_${t}`;return ma.set(e,1),e}return n}const G2=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jy(n){return!!n.match(G2)}function H2(n){return n===parseInt(n.toString(),10)}function er(n,t,e){null==t&&(t=0),null==e&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function ga(n){if(0===n.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function tr(n){if(0===n.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function ns(n,t){if(t<n)throw new A(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}let bu;function Ut(){return null==bu&&(bu=function vI(){return R.backend}().epsilon()),bu}function xs(n,t){return ge(n,t)}function ri(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),F(n,e)}function Vr(n,t,e){return V(()=>{switch(n.rank){case 1:return vd(n,t,e);case 2:return _g(n,[t,0],[e,n.shape[1]]);case 3:return Id(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return su(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ut(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ut(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new A(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function pp(n,t,e){return V(()=>{switch(n.rank){case 1:return vd(n,t,e);case 2:return _g(n,[0,t],[n.shape[0],e]);case 3:return Id(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return su(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new A(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function wu(n,t,e,s){return V(()=>{switch(n.rank){case 1:return vd(n,t,e);case 2:switch(s){case 1:return Vr(n,t,e);case 2:return pp(n,t,e);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Vr(n,t,e);case 2:return Id(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return pp(n,t,e);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Vr(n,t,e);case 2:return su(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return su(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return pp(n,t,e);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}default:throw new A(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function fp(n,t=-1){let e;return t<0&&(e=n[0].rank,t=0!==e?e:0),t===n[0].rank&&(t=-1),ln(n,t)}function Ky(n,t){switch(n.rank){case 1:return DS([n,t]);case 2:return RS([n,t],0);case 3:return FS([n,t],0);case 4:return LS([n,t],0);default:throw new A(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function mp(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new A(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return es(n,t)}function vu(n,t=0,e=1,s,r){return Ng(n,t,e,s,r)}function bs(n,t,e,s){if(n.rank<2||t.rank<2)throw new Be(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3&&n.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Be(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`);if(2===n.rank&&2===t.rank)return Og({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?gp(n.rank,s,"channelsLast"):null,activation:e});{const r=n.shape.slice(),a=r.pop();n=F(n,[-1,a]);const o=t.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:t.rank},(f,g)=>0===g?t.rank-2:g<=t.rank-2?g-1:g);t=F(Je(t,c),[l,-1]);const h=[...r,...u];return F(Og({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?gp(n.rank,s,"channelsLast"):null,activation:e}),h)}}function Xy(n,t,e){return V(()=>(t=Array.isArray(t)?kn(t,"int32"):ge(t,"int32"),cd(n,t,e)))}function ai(n){return D(n,n)}function gp(n,t,e){const s=t.shape;if(1!==t.rank&&t.rank!==n)throw new A(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(5===n){if("channelsFirst"===e)return F(t,1===s.length?[1,s[0],1,1,1]:[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===e)return F(t,1===s.length?[1,1,1,1,s[0]]:[1].concat(s))}else if(4===n){if("channelsFirst"===e)return F(t,1===s.length?[1,s[0],1,1]:[1,s[2],s[0],s[1]]);if("channelsLast"===e)return F(t,1===s.length?[1,1,1,s[0]]:[1].concat(s))}else if(3===n){if("channelsFirst"===e)return F(t,1===s.length?[1,s[0],1]:[1,s[1],s[0]]);if("channelsLast"===e)return F(t,1===s.length?[1,1,s[0]]:[1].concat(s))}else if(n<3)return t;throw new A(`Unsupported input rank by biasAdd: ${t.rank}`)}function rs(n,t,e){return V(()=>(null==e&&(e="channelsLast"),Lt(e),oe(n,gp(n.rank,t,e))))}function Zy(n,t,e,s){return V(()=>sN(n,t,e,s))}function oi(n,t,e=!1){return e?n():t()}const eE=["fanIn","fanOut","fanAvg"],tE=["normal","uniform","truncatedNormal"];class Xn extends Nr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}te((()=>{class n extends Xn{apply(e,s){return Wt(e,s)}}return n.className="Zeros",n})());let Yy=(()=>{class n extends Xn{apply(e,s){return Qs(e,s)}}return n.className="Ones",n})();te(Yy),te((()=>{class n extends Xn{constructor(e){if(super(),"object"!=typeof e)throw new A(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new A(`config must have value set but got ${e}`);this.value=e.value}apply(e,s){return V(()=>D(Ve(this.value),Qs(e,s)))}getConfig(){return{value:this.value}}}return n.className="Constant",n})()),te((()=>{class n extends Xn{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,s){return ha(e,this.minval,this.maxval,s,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return n.className="RandomUniform",n})()),te((()=>{class n extends Xn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Be(`randomNormal does not support dType ${s}.`);return vu(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="RandomNormal",n})()),te((()=>{class n extends Xn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Be(`truncatedNormal does not support dType ${s}.`);return $g(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="TruncatedNormal",n})()),te((()=>{class n extends Xn{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,s){return V(()=>{if(2!==e.length||e[0]!==e[1])throw new A("Identity matrix initializer can only be used for 2D square matrices.");return D(this.gain,vg(e[0]))})}getConfig(){return{gain:this.gain}}}return n.className="Identity",n})());let Ln=(()=>{class n extends Xn{constructor(e){if(super(),e.scale<0)throw new A(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function nE(n){Pr(eE,"FanMode",n)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function sE(n){Pr(tE,"Distribution",n)}(this.distribution),this.seed=e.seed}apply(e,s){const r=function rE(n,t="channelsLast"){let e,s;if(Lt(t),2===n.length)e=n[0],s=n[1];else if(-1!==[3,4,5].indexOf(n.length)){if("channelsFirst"===t){const r=er(n,2);e=n[1]*r,s=n[0]*r}else if("channelsLast"===t){const r=er(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=er(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}(e),a=r[0],o=r[1];let i=this.scale;if(i/="fanIn"===this.mode?Math.max(1,a):"fanOut"===this.mode?Math.max(1,o):Math.max(1,(a+o)/2),"normal"===this.distribution){const l=Math.sqrt(i);if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Be(`${this.getClassName()} does not support dType ${s}.`);return $g(e,0,l,s,this.seed)}{const l=Math.sqrt(3*i);return ha(e,-l,l,s,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return n.className="VarianceScaling",n})();te(Ln);let Qy=(()=>{class n extends Ln{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ln.className}}return n.className="GlorotUniform",n})();te(Qy);let Jy=(()=>{class n extends Ln{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ln.className}}return n.className="GlorotNormal",n})();te(Jy);let ex=(()=>{class n extends Ln{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ln.className}}return n.className="HeNormal",n})();te(ex);let tx=(()=>{class n extends Ln{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ln.className}}return n.className="HeUniform",n})();te(tx);let nx=(()=>{class n extends Ln{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ln.className}}return n.className="LeCunNormal",n})();te(nx);let sx=(()=>{class n extends Ln{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ln.className}}return n.className="LeCunUniform",n})();te(sx),te((()=>{class n extends Xn{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,s){return V(()=>{if(e.length<2)throw new Be("Shape must be at least 2D.");if("int32"!==s&&"float32"!==s&&void 0!==s)throw new TypeError(`Unsupported data type ${s}.`);const r=I(e.slice(0,-1)),a=e[e.length-1],o=r*a;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const l=vu([Math.max(a,r),Math.min(a,r)],0,1,s,this.seed),u=Qk.qr(l,!1);let c=u[0];const d=u[1].flatten().stridedSlice([0],[Math.min(a,r)*Math.min(a,r)],[Math.min(a,r)+1]);return c=D(c,d.sign()),r<a&&(c=c.transpose()),D(Ve(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return n.className="Orthogonal",n})());const rx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ax(n,t={}){return ni(n,Dn.getMap().classNameMap,t,"initializer")}function $t(n){return cp(n)}function St(n){if("string"==typeof n){const t=n in rx?rx[n]:n;if("GlorotNormal"===t)return new Jy;if("GlorotUniform"===t)return new Qy;if("HeNormal"===t)return new ex;if("HeUniform"===t)return new tx;if("LeCunNormal"===t)return new nx;if("LeCunUniform"===t)return new sx;{const e={};return e.className=t,e.config={},ax(e)}}return n instanceof Xn?n:ax(n)}function yp(n){return Array.isArray(n)&&Array.isArray(n[0])}function Iu(n){return 0===n.length?[]:Array.isArray(n[0])?n:[n]}function Fe(n){let t;if(Array.isArray(n)){if(1!==n.length)throw new A(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function nt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(1===n.length)return n[0];throw new A(`Expected exactly 1 Shape; got ${n.length}`)}return n}function Su(n){let t=0;for(const e of n)t+=0===e.shape.length?1:e.shape.reduce((s,r)=>s*r);return t}const ox="Variable";class ws{constructor(t,e="float32",s=ox,r=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=By(),this.originalName=Gy(s=null==s?ox:s),this.name=Hy(this.originalName),this.trainable_=r,this.constraint=a,this.val=function ZC(n,t=!0,e,s){return R.makeVariable(n,t,e,s)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function aE(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function xp(n){return n.map(t=>t.read())}function bp(n){n.forEach(t=>{t[0].write(t[1])})}class Gt{constructor(t){this.dtype=t.dtype,this.shape=t.shape,this.ndim=null!=t.shape?t.shape.length:t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class vs{constructor(t,e,s,r,a,o,i){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=By(),null!=o&&(this.originalName=Gy(o),this.name=Hy(this.originalName)),this.rank=e.length}}let oE=0;class Cu{constructor(t,e){this.callArgs=e,this.id=oE++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)null!=s&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)t.push(null!=e?e.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let iE=0;class He extends Nr{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=iE++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=Ms(s)+"_"+xu(s)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let s;if(null!=t.batchInputShape)s=t.batchInputShape;else if(null!=t.inputShape){let a=null;null!=t.batchSize&&(a=t.batchSize),s=[a].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;null==r&&(r=t.inputDType),null==r&&(r="float32"),this.dtype=r}this.initialWeights=null!=t.weights?t.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new qn(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new A(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return vn(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return vn(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ys(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ys(`Layer ${this.name} is not connected, no input to return.`);return vn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ys(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ys(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return vn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=yt(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=yt(this.inputSpec);if(t.length!==e.length)throw new A(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let s=0;s<t.length;s++){const r=t[s],a=e[s];if(null==a)continue;const o=r.rank;if(null!=a.ndim&&o!==a.ndim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${o}`);if(null!=a.maxNDim&&o>a.maxNDim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${o}`);if(null!=a.minNDim&&o<a.minNDim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${o}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new A(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const i=r.shape;for(const l in a.axes){const u=Number(l),c=a.axes[l],h=u>=0?i[u]:i[i.length+u];if(null!=c&&-1===[c,null].indexOf(h))throw new A(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(null!=a.shape)for(let i=0;i<a.shape.length;++i){const l=a.shape[i],u=r.shape[i];if(null!=l&&null!=u&&l!==u)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=yt(t);let r=!0;for(const o of s)if(!(o instanceof vs)){r=!1;break}let a=!0;for(const o of s)if(o instanceof vs){a=!1;break}if(r===a)throw new A("Arguments to apply() must be all SymbolicTensors or all Tensors");return Lr(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const i of yt(t))o.push(i.shape);this.build(vn(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let o=this.call(t,e);const i=yt(o),l=[];for(let u of i)-1!==s.indexOf(u)&&(u=u.clone()),l.push(u);if(o=vn(l),null!=this.activityRegularizer)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}{const o=function lE(n){n=yt(n);const t=[];for(const e of n)t.push(e.shape);return vn(t)}(t),i=this.computeOutputShape(o);let l;const u="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),l=null!=i&&i.length>0&&Array.isArray(i[0])?i.map((c,h)=>new vs(u,c,this,yt(t),e,this.name,h)):new vs(u,i,this,yt(t),e,this.name),this.addInboundNode(t,l,null,null,o,i,e),this._refCount++,null!=this.activityRegularizer)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{null!=s&&null!=t[r]&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ys(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);-1===t.indexOf(s)&&t.push(s)}if(1===t.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ys(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Su(this.weights)}build(t){this.built=!0}getWeights(t=!1){return xp(t?this.trainableWeights:this.weights)}setWeights(t){V(()=>{const e=this.weights;if(e.length!==t.length)throw new A(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const s=[],r=xp(e);for(let a=0;a<r.length;++a){const o=r[a],i=e[a],l=t[a];if(!de(o.shape,l.shape))throw new A(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);s.push([i,l])}bp(s)})}addWeight(t,e,s,r,a,o,i,l){if(-1!==this._addedWeightNames.indexOf(t))throw new A(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==s&&(s="float32"),this.fastWeightInitDuringBuild&&(r=null!=l?l():St("zeros"));const u=r.apply(e,s),c=new ws(u,s,t,o,i);return u.dispose(),null!=a&&this.addLoss(()=>a.apply(c.read())),null==o&&(o=!0),o?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=yt(t),null!=this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(s=>{if(null!=s)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,s,r,a,o,i=null){const l=yt(t);e=yt(e),s=yt(s),r=yt(r),a=Iu(a),o=Iu(o);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Cu({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:a,outputShapes:o},i);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function ix(n,t,e){if((null==t||null!=e&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),0===t.inboundNodes.length)return[n];{const s=t.inboundNodes[e];if(0===s.inboundLayers.length)return s.inputTensors;{const r=[];for(let a=0;a<s.inboundLayers.length;a++){const u=ix(s.inputTensors[a],s.inboundLayers[a],s.nodeIndices[a]);for(const c of u)-1===r.indexOf(c)&&r.push(c)}return r}}}let ii=(()=>{class n extends He{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:xu("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new A("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let s=e.batchInputShape;if(null==s){if(null==e.inputShape)throw new A("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");s=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new A("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=s,this.dtype=r,this.inputSpec=[{shape:s}];const a=new vs(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Cu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[s],outputShapes:[s]})}apply(e,s){throw new A(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return n.className="InputLayer",n})();function lx(n){if(null==n.batchShape&&null==n.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=n.batchShape&&null!=n.shape)throw new A("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;null!=n.shape&&null==t&&(t=[null].concat(n.shape));let e=n.dtype;return null==e&&(e="float32"),new ii({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}te(ii);class nr{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof nr)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(null!=this.id2Value[t.id])throw new A(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function cE(n,t){if(null==n.dtype||n.dtype===t.dtype)return t;try{return ge(t,n.dtype)}catch(e){throw new A(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=s&&(this.id2Mask[t.id]=s),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof vs){if(null==this.id2Value[t.id])throw new A(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new A(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof vs){if(null==this.id2Value[t.id])throw new A(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new A(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&We(this.id2Mask)}}const Nu=new Ly,ku=new Ly;function li(n,t,e,s){const r=null!=e&&e.training,a=Array.isArray(n),o=a?n:[n],i=o.map(f=>f.name),l=[],u=t.names();for(const f of i)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=i.join(",")+"|"+t.names().sort().join(",");let d,h=Nu.get(c);if(null==h){const f=function dE(n,t){S(null!=n&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(1===n.length){const r=ux(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of n){const{sorted:o,recipientMap:i}=ux(a,t);for(const l of o)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in i)null==s[l]&&(s[l]=new Set),i[l].forEach(u=>s[l].add(u))}}return{sorted:e,recipientCounts:pE(s)}}(o,t);h=f.sorted,d=f.recipientCounts,Nu.put(c,h),ku.put(c,d)}d={},r||Object.assign(d,ku.get(c));const p=new nr(t);for(let f=0;f<h.length;++f){if(null!=s){const $=Hh().numTensors;$>s.maxNumTensors&&(s.maxNumTensors=$),$<s.minNumTensors&&(s.minNumTensors=$)}const g=h[f],m=g.sourceLayer;if(m instanceof ii)continue;const y=[],x=[],b=[];let w=!1;for(const $ of g.inputs){const E=p.getValue($),P=p.getMask($);y.push(E),x.push(P),null!=P&&(w=!0),r||(d[$.name]--,0===d[$.name]&&!t.hasKey($)&&-1===i.indexOf($.name)&&!E.isDisposed&&!0!==$.sourceLayer.stateful&&b.push(E))}w&&((e=e||{}).mask=x[0]);const v=yt(m.apply(y,e));let C=null;m.supportsMasking&&(C=m.computeMask(y,x));const k=fE(g),_=Array.isArray(k)?k:[k];for(let $=0;$<_.length;++$){p.hasKey(_[$])||p.add(_[$],v[$],Array.isArray(C)?C[0]:C);const E=i.indexOf(_[$].name);-1!==E&&(l[E]=v[$])}r||We(b)}return p.disposeMasks(),a?l:l[0]}function pE(n){const t={};for(const e in n)t[e]=n[e].size;return t}function ux(n,t){const e=new Set,s=[],r={};for(const i of t.names())e.add(i);const a=[],o=[];for(a.push(n);a.length>0;){const i=a[a.length-1];if(e.has(i.name)){a.pop();continue}const l=o[o.length-1]===a.length-1;if(0===i.inputs.length||l)a.pop(),s.push(i),e.add(i.name),l&&o.pop();else{o.push(a.length-1);for(const u of i.inputs)null==r[u.name]&&(r[u.name]=new Set),r[u.name].add(i.name),!e.has(u.name)&&a.push(u)}}return{sorted:s,recipientMap:r}}function fE(n){let t;if(1===n.sourceLayer.inboundNodes.length)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}function wp(n,t){return V(()=>pn(Se(D(n,n),t,!0)))}z().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function hE(n){null!=Nu&&Nu.setMaxEntries(n),null!=ku&&ku.setMaxEntries(n)});class ui extends Nr{getConfig(){return{}}}te((()=>{class n extends ui{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return V(()=>{const s=wp(e,this.axis),r=An(s,0,this.maxValue);return D(e,Te(r,oe(Ut(),s)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return n.className="MaxNorm",n})()),te((()=>{class n extends ui{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return V(()=>Te(e,oe(Ut(),wp(e,this.axis))))}getConfig(){return{axis:this.axis}}}return n.className="UnitNorm",n})()),te((()=>{class n extends ui{apply(e){return Os(e)}}return n.className="NonNeg",n})()),te((()=>{class n extends ui{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return V(()=>{const s=wp(e,this.axis),r=oe(D(this.rate,An(s,this.minValue,this.maxValue)),D(1-this.rate,s));return D(e,Te(r,oe(Ut(),s)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return n.className="MinMaxNorm",n})());const cx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ht(n){return cp(n)}function hx(n,t={}){return ni(n,Dn.getMap().classNameMap,t,"constraint")}function jt(n){return null==n?null:"string"==typeof n?hx({className:n in cx?cx[n]:n,config:{}}):n instanceof ui?n:hx(n)}function sr(n){return vp.apply(this,arguments)}function vp(){return(vp=(0,T.Z)(function*(n){if(null==n)return;const t=[],e=[],s=[];for(const r in n){const a=n[r];if("number"!=typeof a){const o=a;t.push(o.data()),e.push(r),s.push(o)}}if(t.length>0){const r=yield Promise.all(t);for(let a=0;a<r.length;++a)n[e[a]]=r[a][0];We(s)}})).apply(this,arguments)}function dx(n){if(null!=n)for(const t in n){const e=n[t];"number"!=typeof e&&e.dispose()}}class ya{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return(0,T.Z)(function*(){})()}onEpochEnd(t,e){return(0,T.Z)(function*(){})()}onBatchBegin(t,e){return(0,T.Z)(function*(){})()}onBatchEnd(t,e){return(0,T.Z)(function*(){})()}onTrainBegin(t){return(0,T.Z)(function*(){})()}onTrainEnd(t){return(0,T.Z)(function*(){})()}setModel(t){}}class gE{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochBegin(t,e)})()}onEpochEnd(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochEnd(t,e)})()}onBatchBegin(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchBegin(t,e)})()}onBatchEnd(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchEnd(t,e)})()}onTrainBegin(t){var e=this;return(0,T.Z)(function*(){null==t&&(t={});for(const s of e.callbacks)yield s.onTrainBegin(t)})()}onTrainEnd(t){var e=this;return(0,T.Z)(function*(){null==t&&(t={});for(const s of e.callbacks)yield s.onTrainEnd(t)})()}}class yE extends ya{constructor(){super()}onEpochBegin(t){var e=this;return(0,T.Z)(function*(){e.seen=0,e.totals={}})()}onBatchEnd(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});const r=null==e.size?0:e.size;s.seen+=r;for(const a in e){const o=e[a];if("number"==typeof o)s.totals.hasOwnProperty(a)||(s.totals[a]=0),s.totals[a]=s.totals[a]+o*r;else{let i;a in s.totals?i=s.totals[a]:s.totals[a]=0;const l=V(()=>oe(s.totals[a],D(o,r)));s.totals[a]=l,null!=i&&i.dispose()}}})()}onEpochEnd(t,e){var s=this;return(0,T.Z)(function*(){if(null!=e)for(const r of s.params.metrics)null!=s.totals[r]&&("number"==typeof s.totals[r]?e[r]=s.totals[r]/s.seen:V(()=>{const a=D(Te(1,s.seen),s.totals[r]);e[r]=a,s.totals[r].dispose(),ps(e[r])}))})()}}class xE extends ya{onTrainBegin(t){var e=this;return(0,T.Z)(function*(){e.epoch=[],e.history={}})()}onEpochEnd(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={}),s.epoch.push(t);for(const r in e)null==s.history[r]&&(s.history[r]=[]),s.history[r].push(e[r])})()}syncData(){var t=this;return(0,T.Z)(function*(){const e=[],s=[],r=[];for(const o in t.history){const i=t.history[o];for(let l=0;l<i.length;++l)"number"!=typeof i[l]&&(e.push(i[l].data()),s.push(o),r.push(l))}const a=yield Promise.all(e);for(let o=0;o<a.length;++o)t.history[s[o]][r[o]].dispose(),t.history[s[o]][r[o]]=a[o][0]})()}}class bE extends ya{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||jg,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ei(this.yieldEvery)&&(this.maybeWait=function F2(n,t,e){let r,s=null!=e?e():hn();return(...o)=>{const i=null!=e?e():hn();return i-s<t||(s=i,r=n(...o)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,s){var r=this;return(0,T.Z)(function*(){const a=[];null!=r.yield&&(yield sr(s),a.push(r.yield(t,e,s))),a.push(r.nextFrameFunc()),yield Promise.all(a)})()}onEpochBegin(t,e){var s=this;return(0,T.Z)(function*(){s.currentEpoch=t,null!=s.epochBegin&&(yield sr(e),yield s.epochBegin(t,e))})()}onEpochEnd(t,e){var s=this;return(0,T.Z)(function*(){const r=[];null!=s.epochEnd&&(yield sr(e),r.push(s.epochEnd(t,e))),"epoch"===s.yieldEvery&&r.push(s.nextFrameFunc()),yield Promise.all(r)})()}onBatchBegin(t,e){var s=this;return(0,T.Z)(function*(){null!=s.batchBegin&&(yield sr(e),yield s.batchBegin(t,e))})()}onBatchEnd(t,e){var s=this;return(0,T.Z)(function*(){const r=[];null!=s.batchEnd&&(yield sr(e),r.push(s.batchEnd(t,e))),"batch"===s.yieldEvery?r.push(s.nextFrameFunc()):Ei(s.yieldEvery)&&r.push(s.maybeWait(s.currentEpoch,t,e)),yield Promise.all(r)})()}onTrainBegin(t){var e=this;return(0,T.Z)(function*(){null!=e.trainBegin&&(yield sr(t),yield e.trainBegin(t))})()}onTrainEnd(t){var e=this;return(0,T.Z)(function*(){null!=e.trainEnd&&(yield sr(t),yield e.trainEnd(t))})()}}function px(n,t){return null==n&&(n={}),n instanceof ya?[n]:Array.isArray(n)&&n[0]instanceof ya?n:yt(n).map(s=>new bE(s,t))}let wE=(()=>{class n{constructor(){}static registerCallbackConstructor(e,s){S(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),n.checkForDuplicate(s),null==n.constructors[e]&&(n.constructors[e]=[]),n.constructors[e].push(s)}static checkForDuplicate(e){for(const s in n.constructors)n.constructors[+s].forEach(a=>{if(a===e)throw new A("Duplicate callback constructor.")})}static clear(){n.constructors={}}static createCallbacks(e){const s=[];for(const r in n.constructors){const a=+r;e>=a&&s.push(...n.constructors[a])}return s.map(r=>new r)}}return n.constructors={},n})();function fx(n,t,e,s,r,a,o,i,l){const u=new xE,c=[new yE,...wE.createCallbacks(t)];null!=n&&c.push(...n),c.push(u);const h=new gE(c);return h.setParams({epochs:e,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:h,history:u}}function Is(n,t={},e=!1){return ni(n,Dn.getMap().classNameMap,t,"layer",e)}function Tu(n,t){return V(()=>{"float32"!==n.dtype&&(n=ge(n,"float32"));const e=Se(ai(n),t,!0),s=Wo(e.shape,Ut()),r=pn(Ks(e,s));return Te(n,r)})}function _u(n,t){return V(()=>Ot(ai(Ie(t,n)),-1))}function Ip(n,t){return V(()=>Ot(Kt(Ie(t,n)),-1))}function Sp(n,t){return V(()=>{const e=Ie(n,t),s=An(Kt(n),Ut(),Number.MAX_VALUE),r=Kt(Te(e,s));return D(100,Ot(r,-1))})}function ci(n,t,e=!1){return V(()=>{if(e)t=Sd(t);else{const s=Se(t,t.shape.length-1,!0);t=Te(t,s)}return t=An(t,Ut(),1-Ut()),It(Se(D(ge(n,"float32"),Gn(t)),t.shape.length-1))})}function $u(n,t,e=!1){return V(()=>{const s=ge(tu(function X2(n){const t=[er(n.shape)];return F(n,t)}(n)),"int32"),r=(t=An(t,Ut(),1-Ut())).shape;return ci(F(Cg(s,r[r.length-1]),r),t,e)})}function Eu(n,t){return V(()=>{let e;return e=An(t,Ut(),1-Ut()),e=Gn(Te(e,Ie(1,e))),Ot(function kE(n,t){if(!de(n.shape,t.shape))throw new A(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return V(()=>{const e=Os(t),s=It(Kt(t));return oe(Ie(e,D(t,n)),dd(Un(s)))})}(n,e),-1)})}function mx(n,t){return V(()=>{const e=Tu(n,-1),s=Tu(t,-1),r=D(e,s);return It(Se(r,-1))})}const Du={meanSquaredError:_u,meanAbsoluteError:Ip,meanAbsolutePercentageError:Sp,meanSquaredLogarithmicError:function vE(n,t){return V(()=>{const e=An(t,Ut(),Number.MAX_VALUE),s=Gn(oe(1,e)),r=An(n,Ut(),Number.MAX_VALUE),a=Gn(oe(1,r));return Ot(ai(Ie(s,a)),-1)})},squaredHinge:function IE(n,t){return V(()=>{const e=Ks(0,Ie(1,D(n,t)));return Ot(ai(e),-1)})},hinge:function SE(n,t){return V(()=>{const e=Ks(0,Ie(1,D(n,t)));return Ot(e,-1)})},categoricalHinge:function CE(n,t){return V(()=>{const e=Se(D(n,t),-1),s=ts(D(Ie(1,n),t),-1);return Ks(0,oe(1,Ie(s,e)))})},logcosh:function NE(n,t){return V(()=>{const e=Math.log(2),s=Ie(t,n),r=Ie(oe(s,Zo(D(-2,s))),e);return Ot(r,-1)})},categoricalCrossentropy:ci,sparseCategoricalCrossentropy:$u,binaryCrossentropy:Eu,kullbackLeiblerDivergence:function TE(n,t){return V(()=>{const e=An(n,Ut(),1),s=An(t,Ut(),1);return Se(D(n,Gn(Te(e,s))),-1)})},poisson:function _E(n,t){return V(()=>{const e=Gn(oe(Ut(),t));return Ot(Ie(t,D(n,e)),-1)})},cosineProximity:mx};function Cp(n){if("string"==typeof n){if(n in Du)return Du[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new A(t)}return n}function gx(n,t){return V(()=>{const e=D(.5,Hn(t)),s=xs(Rn(t,e),n.dtype);return Ot(fs(n,s),-1)})}function yx(n,t){return V(()=>xs(fs(Uo(n,-1),Uo(t,-1)),"float32"))}function AE(n,t){return Eu(n,t)}function RE(n,t){return n.rank===t.rank&&(n=Yo(n,[n.rank-1])),(t=Uo(t,-1)).dtype!==n.dtype&&(t=ge(t,n.dtype)),ge(fs(n,t),"float32")}const bx=ci,wx=$u,Au={binaryAccuracy:gx,categoricalAccuracy:yx,precision:function DE(n,t){return V(()=>{const e=function xx(n,t){return V(()=>ge(Se(Rs(fs(n,1),fs(t,1))),"float32"))}(n,t),s=function EE(n,t){return V(()=>ge(Se(Rs(fs(n,0),fs(t,1))),"float32"))}(n,t),r=oe(e,s);return ge(mn(Rn(r,0),Te(e,r),0),"float32")})},categoricalCrossentropy:bx,sparseCategoricalCrossentropy:wx,mse:_u,MSE:_u,mae:Ip,MAE:Ip,mape:Sp,MAPE:Sp,cosine:mx};function BE(n){if("string"==typeof n&&n in Au)return Au[n];if("string"!=typeof n&&null!=n)return n;throw new A(`Unknown metric ${n}`)}function Ru(n){if(Fn(null!==n,`Unknown LossOrMetricFn ${n}`),"string"==typeof n)return n;{let t;for(const e of Object.keys(Du))if(Du[e]===n){t=e;break}if(void 0!==t)return t;for(const e of Object.keys(Au))if(Au[e]===n){t=e;break}return void 0!==t?t:n.name}}function Ix(n,t,e=!1){if(null==n||"object"!=typeof n||Object.getPrototypeOf(n)!==Object.prototype||!Np(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Np(n){if(null===n)return!0;if("object"==typeof n){if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if("string"!=typeof e||!Np(n[e]))return!1;return!0}if(Array.isArray(n)){for(const t of n)if(!Np(t))return!1;return!0}return!1}{const t=typeof n;return"string"===t||"number"===t||"boolean"===t}}function Ou(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function jE(n,t,e){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch(l){r="multiple"}try{s=JSON.stringify(n.outputShape)}catch(l){s="multiple"}Ou([`${n.name} (${n.getClassName()})`,r,s,n.countParams().toString()],t,e)}function qE(n,t,e,s){let r,a;try{a=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch(h){a="multiple"}try{r=JSON.stringify(n.outputShape)}catch(h){r="multiple"}const o=[];for(const h of n.inboundNodes)if(!(null!=e&&e.length>0&&-1===e.indexOf(h)))for(let d=0;d<h.inboundLayers.length;++d)o.push(`${h.inboundLayers[d].name}[${h.nodeIndices[d]}][${h.tensorIndices[d]}]`);const i=n.name,l=n.getClassName(),u=0===o.length?"":o[0];Ou([`${i} (${l})`,a,r,n.countParams().toString(),u],t,s);for(let h=1;h<o.length;++h)Ou(["","","","",o[h]],t,s)}function Sx(n,t,e){return("inboundNodes"===n||"outputLayers"===n||"inputLayers"===n)&&0===t&&"string"==typeof e}function Fu(n,t){if(null===n)return null;if("string"==typeof n)return Fr(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const a=n[r];Sx(t,r,a)?e.push(a):e.push(Fu(a,t))}return e}{const e={};for(const s of Object.keys(n)){const r=n[s];if("name"===s&&"string"==typeof r)e[s]=r;else{const a=Fr(s);e[a]=Fu(r,a)}}return e}}function kp(n,t){if(null==n)return null;if("string"==typeof n)return Ms(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const a=n[r];Sx(t,r,a)?e.push(a):e.push(kp(a,t))}return e}{const e={};for(const s of Object.keys(n)){const r=n[s];e[Ms(s)]="name"!==s&&"className"!==s||"string"!=typeof r?kp(r,s):r}return e}}class as extends He{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const x=this.getClassName().toLowerCase();this.name=xu(x)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(t.inputs)?t.inputs.slice():[t.inputs],this.outputs=Array.isArray(t.outputs)?t.outputs.slice():[t.outputs],Js(this.inputs).length!==this.inputs.length)throw new A(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Js(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const w=x.nodeIndex,v=x.tensorIndex;this.outputLayers.push(x.sourceLayer),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(v)}for(const x of this.inputs){const b=x.sourceLayer,w=x.nodeIndex,v=x.tensorIndex;Fn(0===w,"input layer has >1 nodes"),Fn(0===v,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const b=this.inputLayers[x];if(!(b instanceof ii))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${x} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const e={},s={},r={},a={},o={},i=[],l=(x,b,w,v,C,k)=>{(null==v||null==C||null==k)&&(v=x.sourceLayer,C=x.nodeIndex,k=x.tensorIndex);const _=v.inboundNodes[C];if(-1!==w.indexOf(_))throw new qn(`The tensor ${x.name} at layer "${v.name}" is part of a cycle.`);if(-1!==b.indexOf(_))return;this.containerNodes.add(as.nodeKey(v,C)),v.id in o||(o[v.id]=Object.keys(o).length),-1===w.indexOf(_)&&w.push(_);const $=_.inboundLayers.length;for(let E=0;E<$;E++)l(_.inputTensors[E],b,w,_.inboundLayers[E],_.nodeIndices[E],_.tensorIndices[E]);for(b.push(_);w.indexOf(_)>=0;)w.splice(w.indexOf(_),1);i.push(_)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=i.slice().reverse();for(const x of h){s[x.id]=x,x.id in e||(e[x.id]=0);let b=e[x.id];b=Math.max(b,null==r[x.outboundLayer.id]?0:r[x.outboundLayer.id]),r[x.outboundLayer.id]=b,a[x.outboundLayer.id]=x.outboundLayer,e[x.id]=b;for(let v=0;v<x.inboundLayers.length;v++){const _=x.inboundLayers[v].inboundNodes[x.nodeIndices[v]];e[_.id]=Math.max(b+1,null==e[_.id]?0:e[_.id]),s[_.id]=_}}const d={};for(const x in e){const b=e[x];b in d||(d[b]=[]),d[b].push(s[x])}const p={};for(const x in r){const b=r[x];b in p||(p[b]=[]),p[b].push(a[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(gu);this.layers=[];for(const x of f){const b=p[x];b.sort((w,v)=>{const C=o[w.id],k=o[v.id];return C<k?-1:C>k?1:0});for(const w of b)w instanceof as&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(gu);const g=this.inputs.slice(),m=[];for(const x of f)for(const b of d[x]){const w=b.outboundLayer;if(null!=w){for(const v of b.inputTensors)if(-1===g.indexOf(v))throw new qn(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${w.name}". The following previous layers were accessed without issue: ${m}`);for(const v of b.outputTensors)g.push(v);m.push(w.name)}}this.nodesByDepth=d;const y=this.layers.map(x=>x.name);for(const x of y){const b=y.filter(w=>w===x).length;if(1!==b)throw new qn(`The name "${x}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Cu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new A("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;for(const o of this.layers)for(const i of o.weights){if(null!=s[i.originalName])throw new A(`Duplicate weight name: ${i.originalName}`);s[i.originalName]=i,r++}const a=[];for(const o in t){let i=o;if(null==s[o]){const l=o.split("/");i=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(null!=s[i])a.push([s[i],t[o]]);else if(e)throw new A(`Provided weight data has no target variable: ${o}`);delete s[i]}if(e){const o=[];for(const i in s)o.push(i);if(o.length>0)throw new A(`${o.length} of ${r} weights are not set: ${o}`)}bp(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 4.4.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=kp(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return V(()=>{t=yt(t);const s=new nr;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return li(this.outputs,s,e)})}computeMask(t,e){return V(()=>{let s;return t=yt(t),s=null==e?Or(null,t.length):yt(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Iu(t);if(e.length!==this.inputLayers.length)throw new A(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<e.length;i++)s[this.inputLayers[i].name+"_0_0"]=e[i];const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(gu);if(r.length>1)for(const i of r){const l=this.nodesByDepth[i];for(const u of l){const c=u.outboundLayer;if(-1!==this.inputLayers.map(g=>g.id).indexOf(c.id))continue;const h=[];for(let g=0;g<u.inboundLayers.length;g++)h.push(s[`${u.inboundLayers[g].name}_${u.nodeIndices[g]}_${u.tensorIndices[g]}`]);const p=Iu(c.computeOutputShape(vn(h))),f=c.inboundNodes.indexOf(u);for(let g=0;g<p.length;g++)s[`${c.name}_${f}_${g}`]=p[g]}}const a=[],o=[];for(let i=0;i<this.outputLayers.length;i++)o.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<o.length;i++){const l=o[i];Fn(l in s),a.push(s[l])}return vn(a)}runInternalGraph(t,e){null==e&&(e=Or(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l)s[this.inputs[l].id]=[t[l],e[l]];const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(gu);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const g of d)g.id in s&&f.push(s[g.id]);if(f.length===d.length){let m,y,x,b,g={};if(null!=c.callArgs&&(g=c.callArgs),1===f.length){const[w,v]=f[0];null==g.mask&&(g.mask=v),x=yt(h.call(w,g)),b=yt(h.computeMask(w,v)),m=[w],y=[v]}else m=f.map(w=>w[0]),y=f.map(w=>w[1]),null==g.mask&&(g.mask=y),x=yt(h.call(m,g)),b=yt(h.computeMask(m,y));if(h.activityRegularizer)throw new Be("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w)s[p[w].id]=[x[w],b[w]]}}}const a=[],o=[],i=[];for(const l of this.outputs){Fn(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];i.push(u.shape),a.push(u),o.push(c)}return[a,o,i]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof as?1:0;for(let a=0;a<r.inboundNodes.length;a++){const o=as.nodeKey(r,a);this.containerNodes.has(o)&&(e[o]=s,s+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new A(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new A("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===t)return s;throw new A(`No such layer: ${t}`)}calculateLosses(){return V(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=as.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const i=o.getClassName(),l=o.getConfig(),u=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],p=as.nodeKey(o,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch(g){console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const y=d.inboundLayers[m],b=d.tensorIndices[m];let v=e[as.nodeKey(y,d.nodeIndices[m])];null==v&&(v=0),g.push([y.name,v,b,f])}u.push(g)}}}const c={};c.name=o.name,c.className=i,c.config=l,c.inboundNodes=u,s.push(c)}t.layers=s;const r=[];for(let o=0;o<this.inputLayers.length;o++){const i=this.inputLayers[o],u=as.nodeKey(i,this.inputLayersNodeIndices[o]);if(!this.containerNodes.has(u))continue;let c=e[u];null==c&&(c=0),r.push([i.name,c,this.inputLayersTensorIndices[o]])}t.inputLayers=r;const a=[];for(let o=0;o<this.outputLayers.length;o++){const i=this.outputLayers[o],u=as.nodeKey(i,this.outputLayersNodeIndices[o]);if(!this.containerNodes.has(u))continue;let c=e[u];null==c&&(c=0),a.push([i.name,c,this.outputLayersTensorIndices[o]])}return t.outputLayers=a,t}static fromConfig(t,e,s={},r=!1){const a={},o={};function i(m,y){m.name in o?o[m.name].push(y):o[m.name]=[y]}function l(m,y){const x=[];let b;for(const w of y){const v=w[0],C=w[1],k=w[2];if(b=null==w[3]?{}:w[3],!(v in a))return void i(m,y);const _=a[v];if(_.inboundNodes.length<=C)return void i(m,y);x.push(_.inboundNodes[C].outputTensors[k])}x.length>0&&m.apply(vn(x),b)}function u(m){const y=m.name,x=Is(m,null!=e.customObjects?e.customObjects:{});x.setFastWeightInitDuringBuild(r),a[y]=x,m.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new A(`Corrupted configuration, expected array for nodeData: ${w}`);i(x,w)})}const c=e.name,h=e.layers;for(const m of h)u(m);for(;!O2(o);)for(const m of h){const y=a[m.name];if(y.name in o){const x=o[y.name];delete o[y.name];for(const b of x)l(y,b)}}const d=[],p=[],f=e.inputLayers;for(const m of f){const y=m[0],x=m[1],b=m[2];Fn(y in a),d.push(a[y].inboundNodes[x].outputTensors[b])}const g=e.outputLayers;for(const m of g){const y=m[0],x=m[1],b=m[2];Fn(y in a),p.push(a[y].inboundNodes[x].outputTensors[b])}return new t({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new A("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function Nx(n,t){return function Cx(n,t,e){const s=t.length;if(null==n||Array.isArray(n)&&0===n.length)return t.map(r=>null);if(1===s)return Array.isArray(n)&&1===n.length?n:"object"==typeof n&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}if("object"==typeof n&&Object.keys(n).length>0&&"object"==typeof n[Object.keys(n)[0]]){const r=[];return t.forEach(a=>{r.push(a in n?n[a]:null)}),r}throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}(n,t,"classWeight")}function kx(n,t,e,s){return _p.apply(this,arguments)}function _p(){return(_p=(0,T.Z)(function*(n,t,e,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=e){const r=V(()=>{if(1===n.shape.length)return Cr(n);if(2===n.shape.length){if(n.shape[1]>1)return Uo(n,1);if(1===n.shape[1])return F(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(yield r.data());We(r);const o=[];return a.forEach(i=>{if(null==e[i])throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(e[i])}),kn(o,"float32")}return null})).apply(this,arguments)}function KE(n,t){return D(n,t)}function Tx(n,t){let e,s;e=t.xs,s=t.ys,S(null!=e&&null!=s,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=_x("input",n.inputNames,e),o=_x("output",n.outputNames,s),i=a[0].shape[0];S(a.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),S(o.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<a.length;l++)S(a[l].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let l=0;l<o.length;l++)S(o[l].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:a,ys:o}}function _x(n,t,e){if(e instanceof Rt)return[e];if(Array.isArray(e))return S(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(null==e[r])throw new A(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function ZE(n){if(3===n.length)throw new Be("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}function $p(){return($p=(0,T.Z)(function*(n,t,e){const s=null!=e.batchesPerEpoch;if(S(null!=n.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),S(null!=e,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),S(null!=e.epochs&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),S(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),S(null==e.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=null!=e.validationData;let a,o;if(r)if($x(e.validationData))S(null==e.validationBatches||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const m=ZE(e.validationData);a=m.xs,o=m.ys}const i=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map(m=>"val_"+m)):l.slice();const c=px(e.callbacks,e.yieldEvery),h=null==e.verbose?1:e.verbose,{callbackList:d,history:p}=fx(c,h,e.epochs,null,null,QE(t,e),null,r,u);d.setModel(n),n.history=p,yield d.onTrainBegin(),n.stopTraining_=!1;let f=null==e.initialEpoch?0:e.initialEpoch,g=yield t.iterator();for(;f<e.epochs;){const m={};yield d.onEpochBegin(f);let y=0,x=0;for(s||(g=yield t.iterator());!s||y<e.batchesPerEpoch;){const b=yield g.next();if(s&&b.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=b.value){const{xs:w,ys:v}=Tx(n,b.value),C={};C.batch=x,C.size=w[0].shape[0],yield d.onBatchBegin(x,C);const k=[];if(null!=e.classWeight){const E=Nx(e.classWeight,n.outputNames);for(let P=0;P<E.length;++P)k.push(yield kx(v[P],null,E[P]))}const _=w.concat(v).concat(k),$=i(_);We(_);for(let E=0;E<l.length;++E){const B=$[E];C[l[E]]=B,ps(B)}yield d.onBatchEnd(x,C),dx(C),x++,y++}if(s?y>=e.batchesPerEpoch:b.done){if(r){let w;w=$x(e.validationData)?yt(yield n.evaluateDataset(e.validationData,{batches:e.validationBatches})):yt(n.evaluate(a,o,{batchSize:null==e.validationBatchSize?32:e.validationBatchSize,verbose:0}));for(let v=0;v<n.metricsNames.length;++v)m[`val_${n.metricsNames[v]}`]=w[v]}break}if(n.stopTraining_)break}if(yield d.onEpochEnd(f,m),f++,n.stopTraining_)break}return yield d.onTrainEnd(),yield n.history.syncData(),n.history}finally{n.isTraining=!1}})).apply(this,arguments)}function QE(n,t){let e=null;return null!=t.batchesPerEpoch?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function $x(n){return"function"==typeof n.iterator}function JE(n){return"function"==typeof n.next}function Ep(){return(Ep=(0,T.Z)(function*(n,t,e){const s=null!=(e=e||{}).batches,r=n.testFunction;let a=[];if(e.verbose>0)throw new Be("Verbose mode is not implemented yet.");S(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const o=JE(t)?t:yield t.iterator();let i=0,l=0;for(;!s||l<e.batches;){const u=yield o.next();if(a=V(()=>{if(u.value){const{xs:c,ys:h}=Tx(n,u.value),d=c.concat(h),p=V(()=>r(d));if(We(d),0===l)for(let g=0;g<p.length;++g)a.push(Ve(0));const f=d[0].shape[0];for(let g=0;g<p.length;++g){const m=p[g],y=a[g];a[g]=V(()=>oe(a[g],D(f,m))),l>0&&We(y)}We(p),i+=f,++l}return a}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){const c=a[u];a[u]=Te(a[u],i),We(c)}return vn(a)})).apply(this,arguments)}function Dp(n){S(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function hi(n,t,e){return null==n?[null]:Array.isArray(n)?n.map(s=>Vr(s,t,e-t)):Vr(n,t,e-t)}function Ap(n,t){return V(()=>null==n?null:Array.isArray(n)?n.map(e=>Ap(e,t)):Xy(n,"int32"===t.dtype?t:ge(t,"int32")))}function Rp(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function Ex(n){const t=[];n instanceof Rt&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(1===s.rank)t.push(ri(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function os(n,t){if(null==n)return;const e=[];if(t instanceof Rt)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(null!=t)for(const r in t)e.push(t[r].id);const s=[];if(n instanceof Rt)-1===e.indexOf(n.id)&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{-1===e.indexOf(r.id)&&s.push(r)});else if(null!=n)for(const r in n){const a=n[r];-1===e.indexOf(a.id)&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function Op(n){return Array.isArray(n)}function Dx(n){return!function tD(n){return n instanceof Rt}(n)&&!Op(n)}function Ax(n,t,e,s=!0,r=""){if(null==t||0===t.length){if(null!=n){let o=!1;if(Op(n)&&n.length>0)o=!0;else if(Dx(n)){for(const i in n)if(n.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new A(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(null==n)return t.map(o=>null);let a;if(Dx(n)){a=[];for(const o of t){if(null==n[o])throw new A(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(n[o])}}else if(Op(n)){if(n.length!==t.length)throw new A(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);a=n}else{if(t.length>1)throw new A(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);a=[n]}if(a=Ex(a),null!=e)for(let o=0;o<t.length;++o){if(null==e[o])continue;const i=a[o];if(i.shape.length!==e[o].length)throw new A(`Error when checking ${r}: expected ${t[o]} to have ${e[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<e[o].length;++l){if(0===l&&!s)continue;const u=i.shape[l],c=e[o][l];if(null!=c&&c>=0&&u!==c)throw new A(`${r} expected a batch of elements where each example has shape [${e[o].slice(1,e[o].length)}] (i.e.,tensor shape [*,${e[o].slice(1,e[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Rx(n,t,e,s=!0,r=""){let a;if(Array.isArray(n)){if(n.length!==t.length)throw new A(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);a=n}else{if(t.length>1)throw new A(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);a=[n]}if(null!=e)for(let o=0;o<t.length;++o){if(null==e[o])continue;const i=a[o];if(i.shape.length!==e[o].length)throw new A(`Error when checking ${r}: expected ${t[o]} to have ${e[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<e[o].length;++l){if(0===l&&!s)continue;const u=i.shape[l],c=e[o][l];if(null!=c&&c!==u)throw new A(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(e[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}let Mr=(()=>{class n extends as{constructor(e){super(e),this.isTraining=!1}summary(e,s,r=console.log){if(!this.built)throw new A("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function UE(n,t,e,s=console.log){const r=function HE(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let a=!1;for(const o of r.inboundNodes)if(-1!==s.indexOf(o)){if(a){t=!1;break}a=!0}if(!t)break}return t}(n),a=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(c=>Math.floor(t*c))),!r){a.push("Receives inputs"),o=[];for(const c in n.nodesByDepth)o.push(...n.nodesByDepth[c])}s("_".repeat(t)),Ou(a,e,s),s("=".repeat(t));const i=n.layers;for(let c=0;c<i.length;++c)r?jE(i[c],e,s):qE(i[c],e,o,s),s((c===i.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=function GE(n){let t;return t=Su(null!=n.collectedTrainableWeights?n.collectedTrainableWeights:n.trainableWeights),t}(n),u=Su(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,s,r)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function WE(n){const t={Adagrad:()=>Ar.adagrad(.01),Adadelta:()=>Ar.adadelta(1,.95,Ut()),Adam:()=>Ar.adam(.001,.9,.999,Ut()),Adamax:()=>Ar.adamax(.002,.9,.999,Ut(),0),RMSProp:()=>Ar.rmsprop(.001,.9,0,Ut()),SGD:()=>Ar.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new A(`Unknown Optimizer ${n}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof qs))throw new A("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let s=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new A(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);s=e.loss.map(l=>Cp(l))}else{const i=Cp(e.loss);this.outputs.forEach(l=>{s.push(i)})}else{e.loss=e.loss;for(const i in e.loss)if(-1===this.outputNames.indexOf(i))throw new A(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)null==e.loss[i]&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),s.push(Cp(e.loss[i]))}this.lossFunctions=s,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i];this.feedOutputNames.push(this.outputNames[i]),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Lr("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==r.indexOf(i))continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=function rD(n,t){if(null==n||Array.isArray(n)&&0===n.length)return t.map(s=>[]);let e;if("string"==typeof n||"function"==typeof n)e=[n];else{if(!Array.isArray(n)&&"object"!=typeof n)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);e=n}if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let a=e.hasOwnProperty(r)?e[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}(e.metrics,this.outputNames),o=(i,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,i])};Lr("metric",()=>{for(let i=0;i<this.outputs.length;++i)-1===r.indexOf(i)&&(c=>{let d,p,f;for(const g of c){if("string"==typeof g&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(g)){const y=this.internalOutputShapes[i];let x;1===y[y.length-1]||this.lossFunctions[i]===Eu?-1!==["accuracy","acc"].indexOf(g)?p=gx:-1!==["crossentropy","ce"].indexOf(g)&&(p=AE):this.lossFunctions[i]===$u?-1!==["accuracy","acc"].indexOf(g)?p=RE:-1!==["crossentropy","ce"].indexOf(g)&&(p=wx):-1!==["accuracy","acc"].indexOf(g)?p=yx:-1!==["crossentropy","ce"].indexOf(g)&&(p=bx),-1!==["accuracy","acc"].indexOf(g)?x="acc":-1!==["crossentropy","ce"].indexOf(g)&&(x="ce"),f=p,d=""+x}else f=BE(g),d=""+Ru(g);let m;Lr(d,()=>{m=f}),o(i,d,m)}})(a[i])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,s,r={}){const a=null==r.batchSize?32:r.batchSize;Dp(a);const i=this.standardizeUserDataXY(e,s,!0,a);try{const l=i[0].concat(i[1]);return this.makeTestFunction(),vn(this.testLoop(this.testFunction,l,a,r.verbose,r.steps))}finally{os(i[0],e),os(i[1],s)}}evaluateDataset(e,s){var r=this;return(0,T.Z)(function*(){return r.makeTestFunction(),function eD(n,t,e){return Ep.apply(this,arguments)}(r,e,s)})()}checkNumSamples(e,s,r,a="steps"){let o;if(null!=r){if(o=null,null!=s)throw new A(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${s}`)}else{if(null==e)throw new A(`Either the input data should have a defined shape, or ${a} shoud be specified.`);o=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return o}execute(e,s){if(Array.isArray(s)&&0===s.length)throw new A("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(s),o=this.retrieveSymbolicTensors(r?s:[s]),i=new nr;if(e instanceof Rt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new A(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],e[u])}else for(const u of this.inputs){const c=e[u.name];if(null==c)throw new A(`No value is provided for the model's input ${u.name}`);i.add(u,c)}const l=li(o,i);return r?l:l[0]}retrieveSymbolicTensors(e){const s=Or(null,e.length);let r=e.length;for(const a of this.layers){const o=Array.isArray(a.output)?a.output:[a.output],i=o.map(l=>l.name);for(let l=0;l<e.length;++l){const u=i.indexOf(e[l]);if(-1!==u&&(s[l]=o[u],r--),0===r)break}if(0===r)break}if(r>0){const a=[];throw s.forEach((o,i)=>{null==o&&a.push(e[i])}),new A(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return s}predictLoop(e,s=32,r=!1){return V(()=>{const a=this.checkNumSamples(e);if(r)throw new Be("Verbose predictLoop() is not implemented yet.");const o=Rp(a,s),i=this.outputs.map(l=>[]);for(let l=0;l<o.length;++l)V(()=>{const d=hi(e,o[l][0],o[l][1]),p=[];if(Array.isArray(d))for(let g=0;g<d.length;++g)p.push({key:this.inputs[g],value:d[g]});else p.push({key:this.inputs[0],value:d});const f=new nr(p);return li(this.outputs,f)}).forEach((c,h)=>i[h].push(c));return vn(i.map(l=>ln(l,0)))})}predict(e,s={}){const r=Ex(e);Rx(r,this.inputNames,this.feedInputShapes,!1);try{const a=null==s.batchSize?32:s.batchSize;return Dp(a),this.predictLoop(r,a)}finally{os(r,e)}}predictOnBatch(e){Rx(e,this.inputNames,this.feedInputShapes,!0);const s=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,s)}standardizeUserDataXY(e,s,r=!0,a){if(null==this.optimizer_)throw new qn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];o.push(this.feedLossFns[i]===$u?l.slice(0,l.length-1).concat([1]):l)}if(function nD(n,t,e){const s=Js(n.map(a=>a.shape[0]));s.sort();const r=Js(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new A(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(a=>a.shape))}`);if(r.length>1)throw new A(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!de(s,r))throw new A(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Ax(e,this.feedInputNames,this.feedInputShapes,!1,"input"),s=Ax(s,this.feedOutputNames,o,!1,"target")),function sD(n,t,e){const s=[_u,Eu,ci];for(let r=0;r<n.length;++r){const a=n[r],o=t[r],i=e[r];if(null!=o){if(o===ci&&1===a.shape[a.shape.length-1])throw new A(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(o)){const l=a.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(null!=d&&h!==d)throw new A(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(s,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new A(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,s]}standardizeUserData(e,s,r,a,o=!0,i){var l=this;return(0,T.Z)(function*(){const[u,c]=l.standardizeUserDataXY(e,s,o,i);if(null!=r)throw new Error("sample weight is not supported yet.");let h=null;if(null!=a){const d=Nx(a,l.outputNames);h=[];for(let p=0;p<d.length;++p)h.push(yield kx(c[p],null,d[p]))}return[u,c,h]})()}testLoop(e,s,r,a=0,o){return V(()=>{const i=this.checkNumSamples(s,r,o,"steps"),l=[];if(a>0)throw new Be("Verbose mode is not implemented yet.");if(null!=o)throw new Be("steps mode in testLoop() is not implemented yet");{const u=Rp(i,r),c=kn(ns(0,i));for(let h=0;h<u.length;++h){const d=u[h][0],p=u[h][1],f=Vr(c,d,p-d),g=Ap(s,f),m=e(g);if(0===h)for(let y=0;y<m.length;++y)l.push(Ve(0));for(let y=0;y<m.length;++y)l[y]=oe(l[y],D(p-d,m[y]))}for(let h=0;h<l.length;++h)l[h]=Te(l[h],i)}return l})}getDedupedMetricsNames(){const e=this.metricsNames,s=[];for(let r=0;r<e.length;++r){const a=e[r];let o=a;Vy(e,a)>1&&(o+=`_${Vy(e.slice(0,r),a)}`),s.push(o)}return s}makeTrainFunction(){return e=>{const s=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],u=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:r[m]});const p=new nr(d),f=li(this.outputs,p,{training:!0});let g;for(let m=0;m<this.lossFunctions.length;++m){let x=(0,this.lossFunctions[m])(a[m],f[m]);null!=o[m]&&(x=KE(x,o[m]));const b=Ot(x);s.push(b),g=0===m?x:oe(g,x)}for(let m=0;m<this.metricsTensors.length;++m){let y;if(this.outputs.length>1&&m<this.outputs.length)y=s[m];else{const b=this.metricsTensors[m][1];y=Ot((0,this.metricsTensors[m][0])(a[b],f[b]))}ps(y),i.push(y)}return g=Ot(g),this.calculateLosses().forEach(m=>{g=oe(g,m)}),g},!0,u)].concat(i)}}makeTestFunction(){this.testFunction=e=>V(()=>{const s=[];let r;const a=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:a[c]});const l=new nr(i),u=li(this.outputs,l);for(let c=0;c<this.lossFunctions.length;++c){const d=Ot((0,this.lossFunctions[c])(o[c],u[c]));r=0===c?d:oe(r,d),s.push(r)}for(let c=0;c<this.metricsTensors.length;++c){const d=this.metricsTensors[c][1],p=Ot((0,this.metricsTensors[c][0])(o[d],u[d]));s.push(p)}return s})}fit(e,s,r={}){var a=this;return(0,T.Z)(function*(){if(a.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let o,i,l,u,c,h,d,p,f;a.isTraining=!0;try{const g=null==r.batchSize?32:r.batchSize;Dp(g);const m=!1,y=yield a.standardizeUserData(e,s,r.sampleWeight,r.classWeight,m,g);o=y[0],i=y[1],f=y[2];let b,x=!1;if(null!=r.validationData&&r.validationData.length>0){if(x=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Be("validationData including sample weights is not supported yet."):new A(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);c=r.validationData[0],h=r.validationData[1];const P=!0,B=yield a.standardizeUserData(c,h,null,null,P,g);d=B[0],p=B[1],b=d.concat(p)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){x=!0;const P=Math.floor(o[0].shape[0]*(1-r.validationSplit)),B=o[0].shape[0];d=hi(o,P,B),l=o,o=hi(o,0,P),p=hi(i,P,B),u=i,i=hi(i,0,P),b=d.concat(p)}else null!=r.validationSteps&&(x=!0);const w=o.concat(i).concat(f);a.checkTrainableWeightsConsistency();const v=a.makeTrainFunction(),C=a.getDedupedMetricsNames();let k,_;x?(a.makeTestFunction(),k=a.testFunction,_=C.slice().concat(C.map(P=>"val_"+P))):(k=null,b=[],_=C.slice());const $=px(r.callbacks,r.yieldEvery);return yield a.fitLoop(v,w,C,g,r.epochs,r.verbose,$,k,b,r.shuffle,_,r.initialEpoch,null,null)}finally{a.isTraining=!1,os(o,e),os(i,s),os(l,e),os(u,s),os(d,c),os(p,h),null!=f&&We(f)}})()}fitLoop(e,s,r,a,o,i,l,u,c,h,d,p,f,g){var m=this;return(0,T.Z)(function*(){null==a&&(a=32),null==o&&(o=1),null==h&&(h=!0),null==p&&(p=0);let y=!1;if(null!=u&&null!=c&&(y=!0),null!=g&&(y=!0,null==f))throw new A("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const x=m.checkNumSamples(s,a,f,"steps_per_epoch");let b;null!=x&&(b=ns(0,x)),null==i&&(i=1);const{callbackList:w,history:v}=fx(l,i,o,p,x,f,a,y,d);w.setModel(m),m.history=v,yield w.onTrainBegin(),m.stopTraining_=!1;for(let C=p;C<o;++C){yield w.onEpochBegin(C);const k={};if(null!=f)throw new Be("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new Be("batch shuffling is not implemneted yet");h&&Y(b);const _=kn(b),$=Rp(x,a);for(let E=0;E<$.length;++E){const P={};if(yield w.onBatchBegin(E,P),V(()=>{const B=$[E][0],U=$[E][1],G=Vr(_,B,U-B);P.batch=E,P.size=U-B;const H=Ap(s,G),K=e(H);for(let X=0;X<r.length;++X){const Z=K[X];P[r[X]]=Z,ps(Z)}if(E===$.length-1&&y){const X=m.testLoop(u,c,a);for(let j=0;j<r.length;++j){const Z=r[j],ae=X[j];ps(ae),k["val_"+Z]=ae}}}),yield w.onBatchEnd(E,P),dx(P),m.stopTraining_)break}_.dispose()}if(yield w.onEpochEnd(C,k),m.stopTraining_)break}return yield w.onTrainEnd(),yield m.history.syncData(),m.history})()}fitDataset(e,s){var r=this;return(0,T.Z)(function*(){return function YE(n,t,e){return $p.apply(this,arguments)}(r,e,s)})()}trainOnBatch(e,s){var r=this;return(0,T.Z)(function*(){const a=yield r.standardizeUserData(e,s),o=a[0],i=a[1],u=r.makeTrainFunction()(o.concat(i)),c=[];for(const h of u){const d=yield h.data();c.push(d[0])}return We(u),os(a[0],e),os(a[1],s),vn(c)})()}getNamedWeights(e){const s=[],r=null!=e&&e.trainableOnly,a=r?this.trainableWeights:this.weights,o=this.getWeights(r);for(let i=0;i<a.length;++i)r&&!a[i].trainable||s.push({name:a[i].originalName,tensor:o[i]});return s}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const s=Hh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=s-Hh().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ms(this.loss);else if(Array.isArray(this.loss)){for(const s of this.loss)if("string"!=typeof s)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(s=>Ms(s))}else{const s=Object.keys(this.loss);e={};const r=this.loss;for(const a of s){if("string"!=typeof r[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Ms(r[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ms(Ru(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ms(Ru(e)));{const e={};for(const s in this.metrics)e[s]=Ms(Ru(this.metrics[s]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const r=Is(Fu(e.optimizer_config));let a,o;if("string"==typeof e.loss)a=Fr(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(i=>Fr(i));else if(null!=e.loss){a={};for(const i in e.loss)a[i]=Fr(e.loss[i])}if(Array.isArray(e.metrics))o=e.metrics.map(i=>Fr(i));else if(null!=e.metrics){o={};for(const i in e.metrics)o[i]=Fr(e.metrics[i])}this.compile({loss:a,metrics:o,optimizer:r})}save(e,s){var r=this;return(0,T.Z)(function*(){if("string"==typeof e){const h=(n=>Tt.getSaveHandlers(n))(e);if(0===h.length)throw new A(`Cannot find any save handlers for URL '${e}'`);if(h.length>1)throw new A(`Found more than one (${h.length}) save handlers for URL '${e}'`);e=h[0]}if(null==e.save)throw new A("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=yield Dm(r.getNamedWeights(s)),u={modelTopology:r.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v4.4.0",convertedBy:null};if(null!=s&&s.includeOptimizer&&null!=r.optimizer){u.trainingConfig=r.getTrainingConfig();const h="optimizer",{data:d,specs:p}=yield Dm(yield r.optimizer.getWeights(),h);a.specs.push(...p),a.data=Oh([a.data,d])}return null!=r.userDefinedMetadata&&(Ix(r.userDefinedMetadata,r.name,!0),u.userDefinedMetadata=r.userDefinedMetadata),u.weightData=a.data,u.weightSpecs=a.specs,e.save(u)})()}setUserDefinedMetadata(e){Ix(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}return n.className="Model",n})();function oD(n,t){return Pp.apply(this,arguments)}function Pp(){return(Pp=(0,T.Z)(function*(n,t){if(null==t&&(t={}),"string"==typeof n){const e=sI(n,t);if(0===e.length)e.push(jI(n,t));else if(e.length>1)throw new A(`Found more than one (${e.length}) load handlers for URL '${n}'`);n=e[0]}return iD(n,void 0,t)})).apply(this,arguments)}function iD(n,t,e){return Lp.apply(this,arguments)}function Lp(){return(Lp=(0,T.Z)(function*(n,t,e){if(null==e&&(e={}),null==n.load)throw new A("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=yield n.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==e.strict||e.strict,o=null!=s.weightData&&null!=s.weightSpecs&&a,i=Is(Fu(r),t,o),l=s.trainingConfig;if(null!=l&&i.loadTrainingConfig(l),null!=s.userDefinedMetadata&&i.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new A("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:c}=lD(s.weightData,s.weightSpecs);i.loadWeights(u,a),null!=i.optimizer&&c.length>0&&(yield i.optimizer.setWeights(c)),We(u),We(c.map(h=>h.tensor))}return i})).apply(this,arguments)}function lD(n,t){const e=function Am(n,t){const e={};let s,r=0;for(const a of t){const o=a.name,i=a.dtype,l=a.shape,u=I(l);let c;if("quantization"in a){const h=a.quantization;if("uint8"===h.dtype||"uint16"===h.dtype){if(!("min"in h)||!("scale"in h))throw new Error(`Weight ${a.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==h.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${i}.`)}const d=Dh[h.dtype],p=n.slice(r,r+u*d),f="uint8"===h.dtype?new Uint8Array(p):new Uint16Array(p);if("float32"===i)if("uint8"===h.dtype||"uint16"===h.dtype){c=new Float32Array(f.length);for(let g=0;g<f.length;g++)c[g]=f[g]*h.scale+h.min}else{if("float16"!==h.dtype)throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);void 0===s&&(s=tI()),c=s(f)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${o}': ${i}`);if("uint8"!==h.dtype&&"uint16"!==h.dtype)throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let g=0;g<f.length;g++)c[g]=Math.round(f[g]*h.scale+h.min)}r+=u*d}else if("string"===i){const h=I(a.shape);c=[];for(let d=0;d<h;d++){const p=new Uint32Array(n.slice(r,r+4))[0];r+=4;const f=new Uint8Array(n.slice(r,r+p));c.push(f),r+=p}}else{const h=Dh[i],d=n.slice(r,r+u*h);if("float32"===i)c=new Float32Array(d);else if("int32"===i)c=new Int32Array(d);else if("bool"===i)c=new Uint8Array(d);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${o}': ${i}`);{c=new Float32Array(d);const p=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let y=0;y<p.length;y++)p[y]=c[2*y],f[y]=c[2*y+1];const g=Bo(p,l,"float32"),m=Bo(f,l,"float32");e[o]=vr(g,m),g.dispose(),m.dispose()}}r+=u*h}"complex64"!==i&&(e[o]=Bo(c,l,i))}return e}(n,t),s={},r=[];return t.forEach(a=>{"optimizer"===a.group?r.push({name:a.name,tensor:e[a.name]}):s[a.name]=e[a.name]}),{modelWeights:s,optimizerWeights:r}}function uD(n){return new Mr(n)}function Ox(n){return lx(n)}te(Mr),te((()=>{class n extends Mr{}return n.className="Functional",n})()),te((()=>{class n extends Mr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:xu("sequential_"),null!=e.layers)for(const s of e.layers)this.add(s)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new A(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const s=e instanceof n||e instanceof Mr;let r;if(s){if(r=e,1!==r.outputs.length)throw new A("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new A("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new A("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=lx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(s)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==e.inboundNodes.length)throw new A(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new A("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ix(this.outputs[0])}this.inboundNodes=[],new Cu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Or(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,s){return null==this.model&&this.build(),this.model.call(e,s)}build(e){if(nt(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Mr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,s,r=console.log){this.built||this.build(),super.summary(e,s,r)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,s,r={}){if(!this.built)throw new qn("The model needs to be compiled before being used.");return this.model.evaluate(e,s,r)}evaluateDataset(e,s){var r=this;return(0,T.Z)(function*(){if(!r.built)throw new qn("The model needs to be compiled before being used.");return r.model.evaluateDataset(e,s)})()}predict(e,s={}){return null==this.model&&this.build(),this.model.predict(e,s)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}fit(e,s,r={}){var a=this;return(0,T.Z)(function*(){if(!a.built)throw new qn("The model needs to be compiled before being used.");return a.model.fit(e,s,r)})()}fitDataset(e,s){var r=this;return(0,T.Z)(function*(){if(!r.built)throw new qn("The model needs to be compiled before being used.");return r.model.fitDataset(e,s)})()}trainOnBatch(e,s){var r=this;return(0,T.Z)(function*(){return r.model.trainOnBatch(e,s)})()}static fromConfig(e,s,r={},a=!1){let o,i={};if(s instanceof Array){if(null==s[0].className||"Merge"===s[0].className)throw new A("Legacy serialization format not supported yet.");o=s}else S(null!=s.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=s.layers,delete s.layers,i=s;const l=new e(i);if(!(l instanceof n))throw new Be(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const u of o){const h=Is(u,void 0,a);a&&h.setFastWeightInitDuringBuild(!0),l.add(h)}return l}set stopTraining(e){if(null==this.model)throw new A("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new A("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const s of this.layers){const r={};r.className=s.getClassName(),r.config=s.getConfig(),e.push(r)}return{name:this.name,layers:e}}}return n.className="Sequential",n})());class In extends Nr{getConfig(){return{}}}te((()=>{class n extends In{apply(e,s=1){return function Y2(n,t=1){if(1!==t)throw new Be(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return eu(n)}(e,s)}}return n.className="elu",n})()),te((()=>{class n extends In{apply(e){return kg(e)}}return n.className="selu",n})()),te((()=>{class n extends In{apply(e){return Os(e)}}return n.className="relu",n})()),te((()=>{class n extends In{apply(e){return V(()=>ca(6,Os(e)))}}return n.className="relu6",n})()),te((()=>{class n extends In{apply(e){return e}}return n.className="linear",n})()),te((()=>{class n extends In{apply(e){return da(e)}}return n.className="sigmoid",n})()),te((()=>{class n extends In{apply(e){return function J2(n){return V(()=>{const t=oe(.5,D(.2,n));return An(t,0,1)})}(e)}}return n.className="hardSigmoid",n})()),te((()=>{class n extends In{apply(e){return Zo(e)}}return n.className="softplus",n})()),te((()=>{class n extends In{apply(e){return function Q2(n){return V(()=>Te(n,oe(Kt(n),1)))}(e)}}return n.className="softsign",n})()),te((()=>{class n extends In{apply(e){return Cd(e)}}return n.className="tanh",n})());let Fx=(()=>{class n extends In{apply(e,s=-1){return Sd(e,s)}}return n.className="softmax",n})();function rr(n){return n.getClassName()}function Vp(n,t={}){return ni(n,Dn.getMap().classNameMap,t,"activation")}function ar(n){if(null==n){return Vp({className:"linear",config:{}})}if("string"==typeof n){const t={};return t.className=n,t.config={},Vp(t)}return n instanceof In?n:Vp(n)}te(Fx),te((()=>{class n extends In{apply(e,s=-1){return Ig(e,s)}}return n.className="logSoftmax",n})()),te((()=>{class n extends In{apply(e,s=1){return V(()=>D(da(D(e,s)),e))}}return n.className="swish",n})()),te((()=>{class n extends In{apply(e){return V(()=>D(e,Cd(Zo(e))))}}return n.className="mish",n})());class Px extends Nr{}te((()=>{class n extends Px{constructor(e){super(),function Mp(n){if(null!=n&&"object"!=typeof n)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return V(()=>{let s=Wt([1]);return this.hasL1&&(s=oe(s,Se(D(this.l1,Kt(e))))),this.hasL2&&(s=oe(s,Se(D(this.l2,ai(e))))),F(s,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,s){return new e({l1:s.l1,l2:s.l2})}}return n.className="L1L2",n})());const Lx={l1l2:"L1L2"};function ft(n){return cp(n)}function Vx(n,t={}){return ni(n,Dn.getMap().classNameMap,t,"regularizer")}function Ct(n){return null==n?null:"string"==typeof n?Vx({className:n in Lx?Lx[n]:n,config:{}}):n instanceof Px?n:Vx(n)}let Mx=(()=>{class n extends He{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,s){e=Fe(e);let r=Os(e);return null!=this.maxValue&&(r=An(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ReLU",n})();te(Mx);let zx=(()=>{class n extends He{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,s){const r=Fe(e);return hd(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return n.className="LeakyReLU",n})();te(zx);let Bx=(()=>{class n extends He{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=St(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ct(e.alphaRegularizer),this.alphaConstraint=jt(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new A(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const s=(e=nt(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)s[a-1]=1;this.alpha=this.addWeight("alpha",s,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)r[a]=e[a];this.inputSpec=[new Gt({ndim:e.length,axes:r})],this.built=!0}call(e,s){return e=Fe(e),yd(e,this.alpha.read())}getConfig(){const e={alphaInitializer:$t(this.alphaInitializer),alphaRegularizer:ft(this.alphaRegularizer),alphaConstraint:Ht(this.alphaConstraint),sharedAxes:this.sharedAxes},s=super.getConfig();return Object.assign(e,s),e}}return n.className="PReLU",n})();te(Bx);let Wx=(()=>{class n extends He{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Be(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,s){const r=Fe(e);return eu(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ELU",n})();te(Wx);let Ux=(()=>{class n extends He{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,s){const r=Fe(e);return D(r,ge(Rn(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ThresholdedReLU",n})();te(Ux);let Gx=(()=>{class n extends He{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Fx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,s){const r=Fe(e);return this.softmax(r,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Softmax",n})();function xa(n,t,e){if("number"==typeof n)return Or(n,t);if(n.length!==t)throw new A(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!H2(r))throw new A(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function is(n,t,e,s,r=1){if(null==n)return n;let o;return o="same"===e?n:n-(t+(t-1)*(r-1))+1,Math.floor((o+s-1)/s)}function Ss(n,t,e,s){if(null==n)return null;if("valid"===s)n=n*t+tr([e-t,0]);else{if("same"!==s)throw new A(`Unsupport padding mode: ${s}.`);n*=t}return n}function Bp(n,t){return V(()=>(Lt(t),"channelsFirst"===t?Je(n,[0,2,3,1]):n))}function Hx(n,t){return V(()=>(Lt(t),"channelsFirst"===t?Je(n,[0,2,3,4,1]):n))}function Wp(n,t,e,s=[1,1],r="valid",a,o,i=null){return V(()=>{if(null==a&&(a="channelsLast"),Lt(a),3!==n.rank&&4!==n.rank)throw new A(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(3!==t.rank&&4!==t.rank)throw new A(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=Bp(n,a);if("causal"===r)throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=dN({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:e,activation:i}),"channelsFirst"===a&&(l=Je(l,[0,3,1,2])),l})}te(Gx);class Pu extends He{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Pu.verifyArgs(e),this.rank=t,Yt(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Be(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=xa(e.kernelSize,t,"kernelSize"),this.strides=xa(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Pn(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lt(this.dataFormat),this.activation=ar(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jt(e.biasConstraint),this.biasRegularizer=Ct(e.biasRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.dilationRate=xa(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new A(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new A(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new A(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Fn("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!dp(t.kernelSize,"number",1,3))throw new A(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:rr(this.activation),useBias:this.useBias,biasInitializer:$t(this.biasInitializer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),biasConstraint:Ht(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class ba extends Pu{constructor(t,e){super(t,e),this.kernel=null,ba.verifyArgs(e),this.filters=e.filters,Yt(this.filters,"filters"),this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.kernelRegularizer=Ct(e.kernelRegularizer)}build(t){t=nt(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new A(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return V(()=>{let s;t=Fe(t);const r=null==this.bias?null:this.bias.read(),a=zy(this.activation.getClassName());if(null!=a&&2===this.rank)s=Wp(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)s=function jx(n,t,e,s=1,r="valid",a,o=1){return V(()=>{if(null==a&&(a="channelsLast"),Lt(a),3!==n.shape.length)throw new A(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(3!==t.shape.length)throw new A(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=e&&1!==e.shape.length)throw new A(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(n=Je(n,[0,2,1])),"causal"===r)throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=yg(n,t,s,"same"===r?"same":"valid","NWC",o);return null!=e&&(i=rs(i,e)),i})}(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)s=Wp(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Be("convolutions greater than 3D are not implemented yet.");s=function qx(n,t,e,s=[1,1,1],r="valid",a,o){return V(()=>{if(null==a&&(a="channelsLast"),Lt(a),4!==n.rank&&5!==n.rank)throw new A(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(4!==t.rank&&5!==t.rank)throw new A(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=Hx(n,a);if("causal"===r)throw new Be("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=US(i,t,s,"same"===r?"same":"valid","NDHWC",o),null!=e&&(i=rs(i,e)),"channelsFirst"===a&&(i=Je(i,[0,4,1,2,3])),i})}(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=nt(t);const e=[],s="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<s.length;++a){const o=is(s[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(o)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:$t(this.kernelInitializer),kernelRegularizer:ft(this.kernelRegularizer),kernelConstraint:Ht(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new A(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}let Up=(()=>{class n extends ba{constructor(e){super(2,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!dp(e.kernelSize,"number",1,2))throw new A(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv2D",n})();te(Up);let Gp=(()=>{class n extends ba{constructor(e){super(3,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new A(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv3D",n})();te(Gp);let Kx=(()=>{class n extends Up{constructor(e){if(super(e),this.inputSpec=[new Gt({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new A(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=nt(e)).length)throw new A("Input should have rank 4; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new A("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Gt({ndim:4,axes:{[s]:r}})],this.built=!0}call(e,s){return V(()=>{let r=Fe(e);if(4!==r.shape.length)throw new A(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const a=r.shape;let i,l;"channelsFirst"===this.dataFormat?(i=2,l=3):(i=1,l=2);const c=a[l],d=this.kernelSize[1],f=this.strides[1],y=[a[0],Ss(a[i],this.strides[0],this.kernelSize[0],this.padding),Ss(c,f,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=Je(r,[0,2,3,1]));let x=xg(r,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(x=Je(x,[0,3,1,2])),null!=this.bias&&(x=rs(x,this.bias.read(),this.dataFormat)),null!=this.activation&&(x=this.activation.apply(x)),x})}computeOutputShape(e){const s=(e=nt(e)).slice();let r,a,o;"channelsFirst"===this.dataFormat?(r=1,a=2,o=3):(r=3,a=1,o=2);const i=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return s[r]=this.filters,s[a]=Ss(s[a],u,i,this.padding),s[o]=Ss(s[o],c,l,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv2DTranspose",n})();te(Kx);let Xx=(()=>{class n extends Gp{constructor(e){if(super(e),this.inputSpec=[new Gt({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new A(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=nt(e)).length)throw new A("Input should have rank 5; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new A("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Gt({ndim:5,axes:{[s]:r}})],this.built=!0}call(e,s){return V(()=>{let r=Fe(e);if(5!==r.shape.length)throw new A(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const a=r.shape;let i,l,u;"channelsFirst"===this.dataFormat?(u=2,i=3,l=4):(u=1,i=2,l=3);const h=a[i],d=a[l],f=this.kernelSize[1],g=this.kernelSize[2],y=this.strides[1],x=this.strides[2],C=[a[0],Ss(a[u],this.strides[0],this.kernelSize[0],this.padding),Ss(h,y,f,this.padding),Ss(d,x,g,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=Je(r,[0,2,3,4,1]));let k=jS(r,this.kernel.read(),C,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(k=Je(k,[0,4,1,2,3])),null!==this.bias&&(k=rs(k,this.bias.read(),this.dataFormat)),null!==this.activation&&(k=this.activation.apply(k)),k})}computeOutputShape(e){const s=(e=nt(e)).slice();let r,a,o,i;"channelsFirst"===this.dataFormat?(r=1,a=2,o=3,i=4):(r=4,a=1,o=2,i=3);const l=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],h=this.strides[0],d=this.strides[1],p=this.strides[2];return s[r]=this.filters,s[a]=Ss(s[a],h,l,this.padding),s[o]=Ss(s[o],d,u,this.padding),s[i]=Ss(s[i],p,c,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv3DTranspose",n})();te(Xx);let cD=(()=>{class n extends ba{constructor(e,s){if(super(e,s),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==s.filters)throw new A("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=s.kernelInitializer||null!=s.kernelRegularizer||null!=s.kernelConstraint)throw new A("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=s.padding&&"same"!==s.padding&&"valid"!==s.padding)throw new A(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(s.padding)}`);this.depthMultiplier=null==s.depthMultiplier?1:s.depthMultiplier,this.depthwiseInitializer=St(s.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ct(s.depthwiseRegularizer),this.depthwiseConstraint=jt(s.depthwiseConstraint),this.pointwiseInitializer=St(s.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ct(s.pointwiseRegularizer),this.pointwiseConstraint=jt(s.pointwiseConstraint)}build(e){if((e=nt(e)).length<this.rank+2)throw new A(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s]||e[s]<0)throw new A(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[s])}`);const r=e[s],a=this.kernelSize.concat([r,this.depthMultiplier]),o=[];for(let l=0;l<this.rank;++l)o.push(1);o.push(r*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):null,this.inputSpec=[new Gt({ndim:this.rank+2,axes:{[s]:r}})],this.built=!0}call(e,s){return V(()=>{let r;if(e=Fe(e),1===this.rank)throw new Be("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Je(e,[0,2,3,1])),r=Tg(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=rs(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),"channelsFirst"===this.dataFormat&&(r=Je(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=$t(this.depthwiseInitializer),e.pointwiseInitializer=$t(this.pointwiseInitializer),e.depthwiseRegularizer=ft(this.depthwiseRegularizer),e.pointwiseRegularizer=ft(this.pointwiseRegularizer),e.depthwiseConstraint=Ht(this.depthwiseConstraint),e.pointwiseConstraint=Ht(this.pointwiseConstraint),e}}return n.className="SeparableConv",n})(),Zx=(()=>{class n extends cD{constructor(e){super(2,e)}}return n.className="SeparableConv2D",n})();te(Zx);let Yx=(()=>{class n extends ba{constructor(e){super(1,e),n.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!dp(e.kernelSize,"number",1,1))throw new A(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv1D",n})();te(Yx);let Qx=(()=>{class n extends He{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,s){return V(()=>{if(e=Fe(e),"channelsLast"===this.dataFormat){const r=wu(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wu(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const r=wu(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wu(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Cropping2D",n})();te(Qx);let Jx=(()=>{class n extends He{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Lt(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function W2(n){Pr(V2,"InterpolationFormat",n)}(this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,s){return V(()=>{let r=Fe(e);const a=r.shape;if("channelsFirst"===this.dataFormat){r=Je(r,[0,2,3,1]);const o=this.size[0]*a[2],i=this.size[1]*a[3],l="nearest"===this.interpolation?ms.resizeNearestNeighbor(r,[o,i]):ms.resizeBilinear(r,[o,i]);return Je(l,[0,3,1,2])}{const o=this.size[0]*a[1],i=this.size[1]*a[2];return"nearest"===this.interpolation?ms.resizeNearestNeighbor(r,[o,i]):ms.resizeBilinear(r,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}}return n.className="UpSampling2D",n})();te(Jx);let eb=(()=>{class n extends Pu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=St(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jt(e.depthwiseConstraint),this.depthwiseRegularizer=Ct(e.depthwiseRegularizer)}build(e){if((e=nt(e)).length<4)throw new A(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const s="channelsFirst"===this.dataFormat?1:3;if(null==e[s]||e[s]<0)throw new A(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[s]}).`);const r=e[s];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return V(()=>{let r=function hD(n,t,e=[1,1],s="valid",r,a){return V(()=>{null==r&&(r="channelsLast"),Lt(r);let o=Bp(n,r);if(4!==n.rank)throw new A(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(4!==t.rank)throw new A(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Jl(o,t,e,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(o=Je(o,[0,3,1,2])),o})}(e=Fe(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=rs(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=nt(e);const r="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=is("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),i=is(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,o,i]:[e[0],o,i,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=$t(this.depthwiseInitializer),e.depthwiseRegularizer=ft(this.depthwiseRegularizer),e.depthwiseConstraint=Ht(this.depthwiseRegularizer),e}}return n.className="DepthwiseConv2D",n})();function tb(n,t,e,s){if(Array.isArray(n)){if(null!=t||null!=e)throw new A("When inputs is an array, neither initialState or constants should be provided");null!=s&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(a){return null==a||Array.isArray(a)?a:[a]}return{inputs:n,initialState:t=r(t),constants:e=r(e)}}function nb(n,t,e,s=!1,r,a,o=!1,i=!1){return V(()=>{const l=t.shape.length;if(l<3)throw new A(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(ns(2,l));if(t=Je(t,u),null!=a)throw new Be("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=ge(ge(r,"bool"),"float32")).rank===l-1&&(r=Nn(r,-1)),r=Je(r,u)),s&&(t=Er(t,0),null!=r&&(r=Er(r,0)));const c=[];let h,d=e;const p=t.shape[0],f=Dr(t);let g,m;null!=r&&(g=Dr(r));for(let y=0;y<p;++y){const x=f[y],b=V(()=>n(x,d));if(null==r)h=b[0],d=b[1];else{const w=V(()=>{const v=g[y],C=Ie(Hn(v),v);return{output:oe(D(b[0],v),D(d[0],C)),newStates:d.map(($,E)=>oe(D(b[1][E],v),D($,C)))}});h=w.output,d=w.newStates}i&&c.push(h)}return i&&(m=Fs(c,1)),[h,m,d]})}te(eb);let zr=(()=>{class n extends He{constructor(e){let s;if(super(e),null==e.cell)throw new A("cell property is missing for the constructor of RNN.");if(s=Array.isArray(e.cell)?new qp({cells:e.cell}):e.cell,null==s.stateSize)throw new A("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=s,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Gt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ns(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(s=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){yp(e)&&(e=e[0]);let s=this.cell.stateSize;Array.isArray(s)||(s=[s]);const r=s[0];let a;if(a=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){const o=[];for(const i of s)o.push([e[0],i]);return[a].concat(o)}return a}computeMask(e,s){return V(()=>{Array.isArray(s)&&(s=s[0]);const r=this.returnSequences?s:null;if(this.returnState){const a=this.states.map(o=>null);return[r].concat(a)}return r})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,s=[];for(let r=0;r<e;++r)s.push(null);return s}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Be("Constants support is not implemented in RNN yet.");yp(e)&&(e=e[0]);const r=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new Gt({shape:[r,null,...a]});const o=[e[0]].concat(e.slice(2));let i;if(this.cell.build(o),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!de(this.stateSpec.map(l=>l.shape[l.shape.length-1]),i))throw new A(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(l=>new Gt({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(e,s=!1){V(()=>{if(!this.stateful)throw new ys("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(null==r)throw new A("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>Wt([r,a])):[Wt([r,this.cell.stateSize])];else if(null==e)We(this.states_),null!=this.keptStates&&(We(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Wt([r,a])):this.states_[0]=Wt([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new A(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===s?this.keptStates.push(this.states_.slice()):We(this.states_);for(let a=0;a<this.states_.length;++a){const o=e[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,l=[r,i];if(!de(o.shape,l))throw new A(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${o.shape}`);this.states_[a]=o}}this.states_=this.states_.map(a=>ps(a.clone()))})}apply(e,s){let r=null==s?null:s.initialState,a=null==s?null:s.constants;null==s&&(s={});const o=tb(e,r,a,this.numConstants);e=o.inputs,r=o.initialState,a=o.constants;let i=[],l=[];if(null!=r){s.initialState=r,i=i.concat(r),this.stateSpec=[];for(const c of r)this.stateSpec.push(new Gt({shape:c.shape}));l=l.concat(this.stateSpec)}if(null!=a&&(s.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof vs){const c=[e].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(c,s);return this.inputSpec=d,p}return super.apply(e,s)}call(e,s){return V(()=>{const r=null==s?null:s.mask,a=null==s?null:s.training;let o=null==s?null:s.initialState;e=Fe(e),null==o&&(o=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new A(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:a},c=nb((g,m)=>{const y=this.cell.call([g].concat(m),l);return[y[0],y.slice(1)]},e,o,this.goBackwards,r,null,this.unroll,this.returnSequences),h=c[0],d=c[1],p=c[2];this.stateful&&this.resetStates(p,a);const f=this.returnSequences?d:h;return this.returnState?[f].concat(p):f})}getInitialState(e){return V(()=>{let s=Wt(e.shape);return s=Se(s,[1,2]),s=ri(s),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?mp(s,[1,r]):s):this.cell.stateSize>1?[mp(s,[1,this.cell.stateSize])]:[s]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),s={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(s.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===n.className&&(s.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),s)}static fromConfig(e,s,r={}){const o=Is(s.cell,r);return new e(Object.assign(s,{cell:o}))}}return n.className="RNN",n})();te(zr);class di extends He{}let Hp=(()=>{class n extends di{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yt(this.units,"units"),this.activation=ar(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ga([1,tr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ga([1,tr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return V(()=>{if(2!==e.length)throw new A(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const a=null!=s.training&&s.training;let o;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=or({ones:()=>Hn(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=or({ones:()=>Hn(r),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,l=this.recurrentDropoutMask;o=bs(null!=i?D(e,i):e,this.kernel.read()),null!=this.bias&&(o=rs(o,this.bias.read())),null!=l&&(r=D(r,l));let u=oe(o,bs(r,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:rr(this.activation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),s)}}return n.className="SimpleRNNCell",n})();te(Hp);let sb=(()=>{class n extends zr{constructor(e){e.cell=new Hp(e),super(e)}call(e,s){return V(()=>(null!=this.cell.dropoutMask&&(We(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(We(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return new e(s)}}return n.className="SimpleRNN",n})();te(sb);let jp=(()=>{class n extends di{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new A("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Yt(this.units,"units"),this.activation=ar(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ar(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ga([1,tr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ga([1,tr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return V(()=>{if(2!==e.length)throw new A(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=null!=s.training&&s.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=or({ones:()=>Hn(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=or({ones:()=>Hn(a),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const i=this.recurrentDropoutMask;let l,u,c;0<this.dropout&&this.dropout<1&&(e=D(e,this.dropoutMask[0]));let h=bs(e,this.kernel.read());this.useBias&&(h=rs(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=D(a,i[0]));const d=this.recurrentKernel.read(),[p,f]=On(d,[2*this.units,this.units],d.rank-1),g=bs(a,p),[m,y,x]=On(h,3,h.rank-1),[b,w]=On(g,2,g.rank-1);l=this.recurrentActivation.apply(oe(m,b)),u=this.recurrentActivation.apply(oe(y,w));const v=bs(D(u,a),f);c=this.activation.apply(oe(x,v));const C=oe(D(l,a),D(oe(1,It(l)),c));return[C,C]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:rr(this.activation),recurrentActivation:rr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),s)}}return n.className="GRUCell",n})();te(jp);let rb=(()=>{class n extends zr{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new jp(e),super(e)}call(e,s){return V(()=>(null!=this.cell.dropoutMask&&(We(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(We(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return n.className="GRU",n})();te(rb);let Lu=(()=>{class n extends di{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yt(this.units,"units"),this.activation=ar(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ar(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ga([1,tr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ga([1,tr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;let a;if(e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;a=new((s=class extends Xn{apply(u,c){const h=o.apply([i]),d=(new Yy).apply([i]),p=o.apply([2*i]);return Ky(Ky(h,d),p)}}).className="CustomInit",s)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,s){return V(()=>{const r=null!=s.training&&s.training;if(3!==e.length)throw new A(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=or({ones:()=>Hn(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=or({ones:()=>Hn(a),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const l=this.recurrentDropoutMask;let u,c,h,d;0<this.dropout&&this.dropout<1&&(e=D(e,this.dropoutMask[0]));let p=bs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=D(a,l[0])),p=oe(p,bs(a,this.recurrentKernel.read())),this.useBias&&(p=rs(p,this.bias.read()));const[f,g,m,y]=On(p,4,p.rank-1);u=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(g),h=oe(D(c,o),D(u,this.activation.apply(m))),d=this.recurrentActivation.apply(y);const x=D(d,this.activation.apply(h));return[x,x,h]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:rr(this.activation),recurrentActivation:rr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ft(this.kernelRegularizer),recurrentRegularizer:ft(this.recurrentRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),s)}}return n.className="LSTMCell",n})();te(Lu);let ab=(()=>{class n extends zr{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Lu(e),super(e)}call(e,s){return V(()=>(null!=this.cell.dropoutMask&&(We(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(We(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return n.className="LSTM",n})();te(ab);let qp=(()=>{class n extends di{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const s of this.cells.slice().reverse())Array.isArray(s.stateSize)?e.push(...s.stateSize):e.push(s.stateSize);return e}call(e,s){return V(()=>{let r=e.slice(1);const a=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?a.push(r.splice(0,l.stateSize.length)):a.push(r.splice(0,1));a.reverse();const o=[];let i;for(let l=0;l<this.cells.length;++l){const u=this.cells[l];r=a[l],i=0===l?[e[0]].concat(r):[i[0]].concat(r),i=u.call(i,s),o.push(i.slice(1))}r=[];for(const l of o.slice().reverse())r.push(...l);return[i[0]].concat(r)})}build(e){let s;yp(e)&&(e=e[0]),this.cells.forEach((r,a)=>{Lr(`RNNCell_${a}`,()=>{r.build(e),s=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,e=[e[0],s]})}),this.built=!0}getConfig(){const e=super.getConfig(),a={cells:this.cells.map(o=>({className:o.getClassName(),config:o.getConfig()}))};return Object.assign(Object.assign({},e),a)}static fromConfig(e,s,r={}){const a=[];for(const o of s.cells)a.push(Is(o,r));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const s of this.cells)e.push(...s.nonTrainableWeights);if(!this.trainable){const s=[];for(const r of this.cells)s.push(...r.trainableWeights);return s.concat(e)}return e}getWeights(){const e=[];for(const s of this.cells)e.push(...s.weights);return xp(e)}setWeights(e){const s=[];for(const r of this.cells){const o=e.splice(r.weights.length);for(let i=0;i<r.weights.length;++i)s.push([r.weights[i],o[i]])}bp(s)}}return n.className="StackedRNNCells",n})();function or(n){const{ones:t,rate:e,training:s=!1,count:r=1,dropoutFunc:a}=n,o=()=>null!=a?a(t(),e):Zy(t(),e),i=()=>oi(o,t,s);return!r||r<=1?ps(i().clone()):Array(r).fill(void 0).map(i).map(u=>ps(u.clone()))}te(qp);let pD=(()=>{class n extends zr{constructor(e){if(e.unroll)throw new Be("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Be("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Gt({ndim:5})]}call(e,s){return V(()=>{if(null!=this.cell.dropoutMask&&(We(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(We(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),s&&s.constants)throw new A("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})})}computeOutputShape(e){let s=this.computeSingleOutputShape(e);return this.returnSequences||(s=[s[0],...s.slice(2)]),this.returnState&&(s=[s,...Array(2).fill([e[0],...s.slice(-3)])]),s}getInitialState(e){return V(()=>{const{stateSize:s}=this.cell,a=this.computeSingleOutputShape(e.shape),i=Wt([a[0],...a.slice(2)]);return Array.isArray(s)?Array(s.length).fill(i):[i]})}resetStates(e,s=!1){V(()=>{if(!this.stateful)throw new ys("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,a=this.computeSingleOutputShape(r),o=[a[0],...a.slice(2)];if(null==r[0])throw new A("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>Wt(o)):[Wt(o)];else if(null==e)We(this.states_),null!=this.keptStates&&(We(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Wt(o)):this.states_[0]=Wt(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new A(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);s?this.keptStates.push(this.states_.slice()):We(this.states_);for(let l=0;l<this.states_.length;++l){const u=e[l],c=o;if(!de(u.shape,c))throw new A(`State ${l} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>ps(l.clone()))})}computeSingleOutputShape(e){const{dataFormat:s,filters:r,kernelSize:a,padding:o,strides:i,dilationRate:l}=this.cell,u="channelsFirst"===s,h=e[u?4:3],d=is(e[u?3:2],a[0],o,i[0],l[0]),p=is(h,a[1],o,i[1],l[1]);return[...e.slice(0,2),...u?[r,d,p]:[d,p,r]]}}return n.className="ConvRNN2D",n})(),Kp=(()=>{class n extends Lu{constructor(e){const{filters:s,kernelSize:r,strides:a,padding:o,dataFormat:i,dilationRate:l}=e;super(Object.assign(Object.assign({},e),{units:s})),this.filters=s,Yt(this.filters,"filters"),this.kernelSize=xa(r,2,"kernelSize"),this.kernelSize.forEach(u=>Yt(u,"kernelSize")),this.strides=xa(a||1,2,"strides"),this.strides.forEach(u=>Yt(u,"strides")),this.padding=o||"valid",Pn(this.padding),this.dataFormat=i||"channelsLast",Lt(this.dataFormat),this.dilationRate=xa(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>Yt(u,"dilationRate"))}build(e){var s;e=nt(e);const r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new A(`The channel dimension of the input should be defined. Found ${e[r]}`);const i=this.kernelSize.concat([e[r],4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,h=this.filters;u=new((s=class extends Xn{apply(p,f){return fp([c.apply([h]),Qs([h]),c.apply([2*h])])}}).className="CustomInit",s)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,s){return V(()=>{if(3!==e.length)throw new A(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=s.training||!1,a=e[0],o=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=or({ones:()=>Hn(a),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(ie,ue,le)=>ue&&ue[le]?D(ue[le],ie):ie;let h=c(a,u,0),d=c(a,u,1),p=c(a,u,2),f=c(a,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=or({ones:()=>Hn(o),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const g=this.recurrentDropoutMask;let m=c(o,g,0),y=c(o,g,1),x=c(o,g,2),b=c(o,g,3);const[v,C,k,_]=On(this.kernel.read(),4,3),[$,E,P,B]=this.useBias?On(this.bias.read(),4):[null,null,null,null];h=this.inputConv(h,v,$,this.padding),d=this.inputConv(d,C,E,this.padding),p=this.inputConv(p,k,P,this.padding),f=this.inputConv(f,_,B,this.padding);const[U,G,H,K]=On(this.recurrentKernel.read(),4,3);m=this.recurrentConv(m,U),y=this.recurrentConv(y,G),x=this.recurrentConv(x,H),b=this.recurrentConv(b,K);const X=this.recurrentActivation.apply(oe(h,m)),j=this.recurrentActivation.apply(oe(d,y)),Z=oe(D(j,i),D(X,this.activation.apply(oe(p,x)))),ae=D(this.recurrentActivation.apply(oe(f,b)),this.activation.apply(Z));return[ae,ae,Z]})}getConfig(){const r=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]])}return e}(super.getConfig(),["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),a)}inputConv(e,s,r,a){const o=_r(e,s,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?rs(o,r,this.dataFormat):o}recurrentConv(e,s){return _r(e,s,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}return n.className="ConvLSTM2DCell",n})();te(Kp);let ob=(()=>{class n extends pD{constructor(e){const s=new Kp(e);super(Object.assign(Object.assign({},e),{cell:s}))}static fromConfig(e,s){return new e(s)}}return n.className="ConvLSTM2D",n})();te(ob);let Xp=(()=>{class n extends He{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const s=e.shape,r=[];for(let a=0;a<this.noiseShape.length;++a)r.push(null==this.noiseShape[a]?s[a]:this.noiseShape[a]);return r}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e);if(0<this.rate&&this.rate<1){const a=null!=s.training&&s.training,o=this.getNoiseShape(r);return oi(()=>Zy(r,this.rate,o,this.seed),()=>r,a)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},s=super.getConfig();return Object.assign(e,s),e}dispose(){return super.dispose()}}return n.className="Dropout",n})();te(Xp);let ib=(()=>{class n extends Xp{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const s=e.shape;return[s[0],1,s[2]]}}return n.className="SpatialDropout1D",n})();te(ib);let lb=(()=>{class n extends He{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=[s,e.inputDim]}this.units=e.units,Yt(this.units,"units"),this.activation=ar(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.biasConstraint=jt(e.biasConstraint),this.kernelRegularizer=Ct(e.kernelRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const s=(e=nt(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[s,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:s}}],this.built=!0}computeOutputShape(e){const s=(e=nt(e)).slice();return s[s.length-1]=this.units,s}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e),a=zy(this.activation.getClassName());let o;return null!=a?o=bs(r,this.kernel.read(),a,this.bias?this.bias.read():null):(o=bs(r,this.kernel.read()),null!=this.bias&&(o=rs(o,this.bias.read())),null!=this.activation&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:rr(this.activation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:ft(this.kernelRegularizer),biasRegularizer:ft(this.biasRegularizer),activityRegularizer:ft(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),biasConstraint:Ht(this.biasConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Dense",n})();te(lb);let ub=(()=>{class n extends He{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=nt(e);for(const s of e.slice(1))if(null==s)throw new A(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],er(e,1)]}call(e,s){return V(()=>{this.invokeCallHook(e,s);let r=Fe(e);if("channelsFirst"===this.dataFormat&&r.rank>1){const a=[0];for(let o=2;o<r.rank;++o)a.push(o);a.push(1),r=Je(r,a)}return function Z2(n){if(n.rank<=1)throw new A(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],er(n.shape,1)];return F(n,t)}(r)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const s=super.getConfig();return Object.assign(e,s),e}}return n.className="Flatten",n})();te(ub);let cb=(()=>{class n extends He{constructor(e){super(e),this.supportsMasking=!0,this.activation=ar(e.activation)}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e);return this.activation.apply(r)})}getConfig(){const e={activation:rr(this.activation)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Activation",n})();te(cb);let hb=(()=>{class n extends He{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,s){return V(()=>function K2(n,t){return V(()=>{if(2!==n.shape.length)throw new A(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);return mp(ri(n,1),[1,t,1])})}(e=Fe(e),this.n))}getConfig(){const e={n:this.n},s=super.getConfig();return Object.assign(e,s),e}}return n.className="RepeatVector",n})();te(hb);let db=(()=>{class n extends He{constructor(e){super(e),this.targetShape=e.targetShape;for(let s=0;s<this.targetShape.length;++s)this.isUnknown(this.targetShape[s])&&(this.targetShape[s]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,s){const r="Total size of new array must be unchanged.",a=s.slice();let o=1,i=null;for(let u=0;u<a.length;++u){const c=a[u];if(this.isUnknown(c)){if(null!==i)throw new A("Can only specifiy one unknown dimension.");i=u}else o*=c}const l=er(e);if(null!==i){if(0===o||l%o!=0)throw new A(r);a[i]=l/o}else if(l!==o)throw new A(r);return a}computeOutputShape(e){let s=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){s=!0;break}return s?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e),a=r.shape,o=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return F(r,o)})}getConfig(){const e={targetShape:this.targetShape},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Reshape",n})();te(db);let pb=(()=>{class n extends He{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const s=ns(1,e.dims.length+1);if(!de(e.dims.slice().sort(),s))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Gt({ndim:this.dims.length+1})]}computeOutputShape(e){const s=(e=nt(e)).slice();return this.dims.forEach((r,a)=>{s[a+1]=e[r]}),s}call(e,s){return Je(Fe(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Permute",n})();te(pb);let fb=(()=>{class n extends He{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={maskValue:this.maskValue};return Object.assign(s,e),s}computeMask(e,s){const r=Fe(e);return ad(Ko(r,this.maskValue),-1)}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e),i=ad(Ko(r,this.maskValue),-1,!0);return D(r,ge(i,r.dtype))})}}return n.className="Masking",n})();te(fb);let mb=(()=>{class n extends He{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=null==e.inputLength?[s,null]:[s].concat(yt(e.inputLength))}this.inputDim=e.inputDim,Yt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Yt(this.outputDim,"outputDim"),this.embeddingsInitializer=St(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ct(e.embeddingsRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.embeddingsConstraint=jt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,s){return V(()=>this.maskZero?(e=Fe(e),Ko(e,Qe(e))):null)}computeOutputShape(e){if(e=nt(e),null==this.inputLength)return[...e,this.outputDim];const s=yt(this.inputLength);if(s.length!==e.length-1)throw new A(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let a=0;a<s.length;++a){const o=s[a],i=e[a+1];if(null!=o&&null!=i&&o!==i)throw new A(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==o&&(s[r]=i),r++}}return[e[0],...s,this.outputDim]}call(e,s){return V(()=>{this.invokeCallHook(e,s);let r=Fe(e);"int32"!==r.dtype&&(r=xs(r,"int32"));const a=Xy(this.embeddings.read(),F(r,[r.size]));return F(a,nt(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:$t(this.embeddingsInitializer),embeddingsRegularizer:ft(this.embeddingsRegularizer),activityRegularizer:ft(this.activityRegularizer),embeddingsConstraint:Ht(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Embedding",n})();te(mb);class Br extends He{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Be}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],o=e[r];if(null==a||null==o||a<0||o<0)s.push(null);else if(1===a)s.push(o);else if(1===o)s.push(a);else{if(a!==o)throw new A("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(a)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[nt(t)]),t.length<2)throw new A(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=Js(e),e.length>1)throw new A(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const o=null==t[a]?null:t[a].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const r=t.map(a=>a.length);this.reshapeRequired=-1!==t.indexOf(null)||1!==Js(r).length}call(t,e){return V(()=>{if(this.reshapeRequired){const s=[],r=t.map(a=>a.rank);if(-1===r.indexOf(null)){const a=tr(r);for(let o of t){const i=o.rank;for(let l=0;l<a-i;++l)o=ri(o,1);s.push(o)}return this.mergeFunction(s)}{let a=!1;for(const l of t){const u=l.rank;if(null==u){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=F(l,[h].concat(er(c.slice(1))));p=Je(p,[1,0]),p=F(p,d),s.push(p),a=!0}else if(u>1){const c=ns(1,u).concat([0]);s.push(Je(l,c)),a=!0}else s.push(l)}let o=this.mergeFunction(s);const i=o.rank;if(a)if(null==i){const l=o.shape,c=l[l.length-1],h=[c].concat(l.slice(0,l.length-1));o=F(Je(F(o,[-1,c]),[1,0]),h)}else if(i>1){const l=[i-1].concat(ns(0,i-1));o=Je(o,l)}return o}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const a=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,a)}let s=[];for(const r of t)null!=r&&null!==r[0]&&s.push(r[0]);return s=Js(s),e=1===s.length?s.concat(e):[null].concat(e),e}computeMask(t,e){return V(()=>{if(null==e)return null;if(!Array.isArray(e))throw new A("`mask` should be an Array");if(!Array.isArray(t))throw new A("`inputs` should be an Array");if(e.length!==t.length)throw new A(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>null==r))return null;let s=(e=e.map(r=>null==r?r:Nn(r,0)))[0];for(let r=1;r<e.length-1;++r)s=Rs(s,e[r]);return s})}}let Vu=(()=>{class n extends Br{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=oe(s,e[r]);return s})}}return n.className="Add",n})();te(Vu);let Mu=(()=>{class n extends Br{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=D(s,e[r]);return s})}}return n.className="Multiply",n})();te(Mu);let zu=(()=>{class n extends Br{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=oe(s,e[r]);return D(1/e.length,s)})}}return n.className="Average",n})();te(zu);let Bu=(()=>{class n extends Br{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=Ks(s,e[r]);return s})}}return n.className="Maximum",n})();te(Bu);let Wu=(()=>{class n extends Br{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=ca(s,e[r]);return s})}}return n.className="Minimum",n})();te(Wu);let Uu=(()=>{class n extends Br{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new A("A `Concatenate` layer should be called on a list of at least 2 inputs");let s=!0;for(const a of e)if(null!=a){s=!1;break}if(s)return;const r=[];for(let a=0;a<e.length;++a){const o=e[a].slice();o.splice(this.axis,1);let i=!1;for(const l of r)if(de(l,o)){i=!0;break}i||r.push(o)}if(r.length>1)throw new A("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return V(()=>fp(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new A("A `Concatenate` layer should be called on a list of inputs.");const s=e,r=s[0].slice(),a=this.axis<0?r.length+this.axis:this.axis;for(const o of s.slice(1)){if(null==r[a]||null==o[a]){r[a]=null;break}r[a]+=o[a]}return r}computeMask(e,s){if(null==s)return null;if(!Array.isArray(s))throw new A("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new A("`inputs` should be an array for Concatenate");if(s.length!==e.length)throw new A(`Mismatch in the length of mask (${s.length}) and the legnth of inputs (${e.length})`);return V(()=>{let r=!0;if(s.forEach(i=>{null==i||(r=!1)}),r)return null;const a=[];for(let i=0;i<e.length;++i)a.push(null==s[i]?ge(Hn(e[i]),"bool"):s[i].rank<e[i].rank?Nn(s[i],-1):s[i]);const o=ln(a,this.axis);return gg(o,-1,!1)})}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Concatenate",n})();function pi(n,t){for(;n<0;)n+=t;return n}te(Uu);let gb=(()=>{class n extends Br{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){S(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0],r=e[1];if(s.length>3||r.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(s,r);if(s[a[0]]!==r[a[1]])throw new A(`Dimension incompatibility: ${s[a[0]]} !== ${r[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new A(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let a,s=e[0],r=e[1];return a=Array.isArray(this.axes)?this.axes.map((o,i)=>pi(o,e[i].shape.length)):[pi(this.axes,s.shape.length),pi(this.axes,r.shape.length)],this.normalize&&(s=Tu(s,a[0]),r=Tu(r,a[1])),function fD(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Be("batchDot is not implemented for tensors of 4D or higher rank yet");if(S(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),S(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof e&&(e=[e,e]),"complex64"===n.dtype||"complex64"===t.dtype)throw new Be("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;null==e&&(e=[s-1,r-2]);const a=e;return V(()=>{let o,i;if(s>r){o=s-r;const l=[];for(let u=0;u<o;++u)l.push(1);t=F(t,t.shape.concat(l))}else if(r>s){o=r-s;const l=[];for(let u=0;u<o;++u)l.push(1);n=F(n,n.shape.concat(l))}else o=0;if(i=2===n.shape.length&&2===t.shape.length?a[0]===a[1]?Se(D(n,t),a[0]):Se(D(Je(n,[1,0]),t),a[1]):at(n,t,a[0]!==n.shape.length-1,a[1]===t.shape.length-1),o>0){let l;l=s>r?s+r-3:s-1;const u=[];for(let c=l;c<l+o;++c)u.push(c);i=Yo(i,u)}return 1===i.shape.length&&(i=Nn(i,1)),i})}(s,r,a)}interpretAxes(e,s){let r;return r=Array.isArray(this.axes)?this.axes:[pi(this.axes,e.length),pi(this.axes,s.length)],r}computeOutputShape(e){S(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0].slice(),r=e[1].slice();if(s.length>3||r.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(s,r);s.splice(a[0],1),r.splice(a[1],1),r.splice(0,1);const o=s.concat(r);return 1===o.length&&o.push(1),o}computeMask(e,s){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Dot",n})();te(gb);let yb=(()=>{class n extends He{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={stddev:this.stddev};return Object.assign(s,e),s}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e);return oi(()=>oe(vu(r.shape,0,this.stddev),r),()=>r,s.training||!1)})}}return n.className="GaussianNoise",n})();te(yb);let xb=(()=>{class n extends He{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e);return this.rate>0&&this.rate<1?oi(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return D(r,vu(r.shape,1,o))},()=>r,s.training||!1):r})}}return n.className="GaussianDropout",n})();te(xb);let bb=(()=>{class n extends He{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Fe(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return V(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return oi(()=>{const o=Fe(e),u=-1.7580993408473766;let c=$r(ha(r),this.rate);c=xs(c,"float32");const h=((1-this.rate)*(1+this.rate*u**2))**-.5,d=-h*u*this.rate,p=oe(D(o,c),D(oe(c,-1),u));return oe(D(p,h),d)},()=>Fe(e),s.training||!1)}return e})}}return n.className="AlphaDropout",n})();function fi(n,t,e,s,r,a=.001){let o;if(2===n.rank)o=IS(n,t,e,s,r,a);else if(3===n.rank)o=CS(n,t,e,s,r,a);else{if(4!==n.rank)throw new Be(`batchNormalization is not implemented for array of rank ${n.rank} yet`);o=kS(n,t,e,s,r,a)}return o}te(bb);let wb=(()=>{class n extends He{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=St(e.betaInitializer||"zeros"),this.gammaInitializer=St(e.gammaInitializer||"ones"),this.movingMeanInitializer=St(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=St(e.movingVarianceInitializer||"ones"),this.betaConstraint=jt(e.betaConstraint),this.gammaConstraint=jt(e.gammaConstraint),this.betaRegularizer=Ct(e.betaRegularizer),this.gammaRegularizer=Ct(e.gammaRegularizer)}build(e){e=nt(e);const s=this.axis>=0?this.axis:this.axis+e.length,r=e[s];if(null==r)throw new A(`Axis ${s} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Gt({ndim:e.length,axes:{[s]:r}})];const a=[r];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,s){return V(()=>{const r=null!=s.training&&s.training,a=Fe(e),o=a.shape,i=o.length,l=ns(0,i),u=this.axis>=0?this.axis:this.axis+i;l.splice(u,1);const c=Or(1,i);c[u]=o[u];const h=l.slice();h.sort();const d=!de(h,ns(0,i).slice(0,i-1));if(!r)return(()=>{if(d){const b=F(this.movingMean.read(),c),w=F(this.movingVariance.read(),c),v=this.center?F(this.beta.read(),c):null,C=this.scale?F(this.gamma.read(),c):null;return fi(a,b,w,v,C,this.epsilon)}return fi(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[f,g,m]=function yD(n,t,e,s,r=.001){return de(s.slice().sort(),ns(0,n.rank-1))?function mD(n,t,e,s,r=.001){return V(()=>{const a=md(n,s),o=a.mean,i=a.variance;return[fi(n,o,i,e,t,r),o,i]})}(n,t,e,s,r):function gD(n,t,e,s,r=.001){return V(()=>{const a=md(n,s),o=a.mean,i=a.variance,l=[];for(const f of ns(0,n.rank))-1!==s.indexOf(f)?l.push(1):l.push(n.shape[f]);const u=F(o,l),c=F(i,l),h=null==t?null:F(t,l),d=null==e?null:F(e,l);return[fi(n,u,c,d,h,r),o,i]})}(n,t,e,s,r)}(a,this.gamma.read(),this.beta.read(),l,this.epsilon),y=(b,w,v)=>{V(()=>{const C=1-v,k=b.read(),_=D(Ie(k,w),C);b.write(Ie(k,_))})};return(()=>{y(this.movingMean,g,this.momentum),y(this.movingVariance,m,this.momentum)})(),f})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$t(this.betaInitializer),gammaInitializer:$t(this.gammaInitializer),movingMeanInitializer:$t(this.movingMeanInitializer),movingVarianceInitializer:$t(this.movingVarianceInitializer),betaRegularizer:ft(this.betaRegularizer),gammaRegularizer:ft(this.gammaRegularizer),betaConstraint:Ht(this.betaConstraint),gammaConstraint:Ht(this.gammaConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="BatchNormalization",n})();te(wb);let vb=(()=>{class n extends He{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const s of this.axis)if(!Number.isInteger(s))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=St(e.betaInitializer||"zeros"),this.gammaInitializer=St(e.gammaInitializer||"ones"),this.betaRegularizer=Ct(e.betaRegularizer),this.gammaRegularizer=Ct(e.gammaRegularizer),this.supportsMasking=!0}build(e){const s=(e=nt(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=s);for(const o of this.axis)if(o<0||o>=s)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Js(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(o=>e[o]);this.gamma=this.scale?this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,s){const r=Fe(e),a=r.shape,o=a.length;return V(()=>{let{mean:l,variance:u}=md(r,this.axis,!0);const c=Or(1,o);for(const m of this.axis)c[m]=a[m];const h=m=>null!=m&&m.shape.length!==o?F(m,c):m;let d=this.scale?h(this.gamma.read()):null,p=this.center?h(this.beta.read()):null;const f=[],g=[];for(let m=0;m<o;++m)-1!==this.axis.indexOf(m)?(f.push(a[m]),g.push(1)):(f.push(1),g.push(a[m]));return l=es(l,f),u=es(u,f),null!=d&&(d=es(d,g)),null!=p&&(p=es(p,g)),fi(r,l,u,p,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$t(this.betaInitializer),gammaInitializer:$t(this.gammaInitializer),betaRegularizer:ft(this.betaRegularizer),gammaRegularizer:ft(this.gammaRegularizer)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="LayerNormalization",n})();te(vb);let Ib=(()=>{class n extends He{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new A(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let s,r;if("number"==typeof e.padding[0])s=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new A(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(s=e.padding[0],2!==e.padding[1].length)throw new A(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[s,r]}this.inputSpec=[new Gt({ndim:4})]}computeOutputShape(e){let s,r;return e=nt(e),"channelsFirst"===this.dataFormat?(s=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],s,r]):(s=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],s,r,e[3]])}call(e,s){return V(()=>function xD(n,t,e){return V(()=>{if(4!==n.rank)throw new A(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new A("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==e&&(e="channelsLast"),"channelsLast"!==e&&"channelsFirst"!==e)throw new A(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===e?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],gd(n,s)})}(Fe(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ZeroPadding2D",n})();function Gu(n,t,e,s,r,a){return V(()=>{let o;Lt(r),Wy(a),Pn(s),null==e&&(e=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),n=Bp(n,r);const i="same"===s?"same":"valid";return o="max"===a?pd(n,t,e,i):ld(n,t,e,i),"channelsFirst"===r&&(o=Je(o,[0,3,1,2])),o})}function Sb(n,t,e,s,r,a){return V(()=>{let o;Lt(r),Wy(a),Pn(s),null==e&&(e=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),n=Hx(n,r);const i="same"===s?"same":"valid";return o="max"===a?mC(n,t,e,i):xS(n,t,e,i),"channelsFirst"===r&&(o=Je(o,[0,4,1,2,3])),o})}te(Ib);class Cb extends He{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new A(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Yt(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new A(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Yt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Pn(this.padding),this.inputSpec=[new Gt({ndim:3})]}computeOutputShape(t){const e=is((t=nt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return V(()=>{this.invokeCallHook(t,e),t=ri(Fe(t),2);const s=this.poolingFunction(Fe(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Yo(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}let Nb=(()=>{class n extends Cb{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Lt(o),Pn(a),Gu(e,s,r,a,o,"max")}}return n.className="MaxPooling1D",n})();te(Nb);let kb=(()=>{class n extends Cb{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Lt(o),Pn(a),Gu(e,s,r,a,o,"avg")}}return n.className="AveragePooling1D",n})();te(kb);class Tb extends He{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new A(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Yt(this.poolSize,"poolSize"),Yt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Lt(this.dataFormat),Pn(this.padding),this.inputSpec=[new Gt({ndim:4})]}computeOutputShape(t){t=nt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],s="channelsFirst"===this.dataFormat?t[3]:t[2];return e=is(e,this.poolSize[0],this.padding,this.strides[0]),s=is(s,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return V(()=>(this.invokeCallHook(t,e),this.poolingFunction(Fe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let _b=(()=>{class n extends Tb{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Lt(o),Pn(a),Gu(e,s,r,a,o,"max")}}return n.className="MaxPooling2D",n})();te(_b);let $b=(()=>{class n extends Tb{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Lt(o),Pn(a),Gu(e,s,r,a,o,"avg")}}return n.className="AveragePooling2D",n})();te($b);class Eb extends He{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new A(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Yt(this.poolSize,"poolSize"),Yt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Lt(this.dataFormat),Pn(this.padding),this.inputSpec=[new Gt({ndim:5})]}computeOutputShape(t){t=nt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],s="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=is(e,this.poolSize[0],this.padding,this.strides[0]),s=is(s,this.poolSize[1],this.padding,this.strides[1]),r=is(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return V(()=>(this.invokeCallHook(t,e),this.poolingFunction(Fe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let Db=(()=>{class n extends Eb{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Lt(o),Pn(a),Sb(e,s,r,a,o,"max")}}return n.className="MaxPooling3D",n})();te(Db);let Ab=(()=>{class n extends Eb{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Lt(o),Pn(a),Sb(e,s,r,a,o,"avg")}}return n.className="AveragePooling3D",n})();te(Ab);class Rb extends He{constructor(t){super(t),this.inputSpec=[new Gt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Be}}let Ob=(()=>{class n extends Rb{constructor(e){super(e||{})}call(e,s){return V(()=>{const r=Fe(e);return Ot(r,1)})}}return n.className="GlobalAveragePooling1D",n})();te(Ob);let Fb=(()=>{class n extends Rb{constructor(e){super(e||{})}call(e,s){return V(()=>{const r=Fe(e);return ts(r,1)})}}return n.className="GlobalMaxPooling1D",n})();te(Fb);class Pb extends He{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Lt(this.dataFormat),this.inputSpec=[new Gt({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Be}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let Lb=(()=>{class n extends Pb{call(e,s){return V(()=>{const r=Fe(e);return Ot(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalAveragePooling2D",n})();te(Lb);let Vb=(()=>{class n extends Pb{call(e,s){return V(()=>{const r=Fe(e);return ts(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalMaxPooling2D",n})();te(Vb);class Mb extends He{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const a=Is(e.layer,s);delete e.layer;const o={layer:a};return Object.assign(o,e),new t(o)}}let zb=(()=>{class n extends Mb{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=nt(e)).length<3)throw new A(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const s=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(s),this.layer.built=!0),super.build(e)}computeOutputShape(e){const s=[(e=nt(e))[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(s);return[r[0],e[1]].concat(r.slice(1))}call(e,s){return V(()=>nb((i,l)=>[Fe(this.layer.call(i,s)),[]],e=Fe(e),[],!1,null,null,!1,!0)[1])}}return n.className="TimeDistributed",n})();te(zb);let Bb=(()=>{class n extends Mb{constructor(e){super(e);const s=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=s,this.forwardLayer=Is(r),s.goBackwards=!0!==s.goBackwards;const a={};if(a.className=e.layer.getClassName(),a.config=s,this.backwardLayer=Is(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function bD(n){Pr(B2,"BidirectionalMergeMode",n)}(this.mergeMode),e.weights)throw new Be("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const r=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let r,a,o,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState&&(o=s.slice(1)),r=s[0],"concat"===this.mergeMode?(r[r.length-1]*=2,a=[r]):a=null==this.mergeMode?[r,r.slice()]:[r],this.returnState?null==this.mergeMode?a.concat(o).concat(o.slice()):[r].concat(o).concat(o.slice()):vn(a)}apply(e,s){let r=null==s?null:s.initialState,a=null==s?null:s.constants;null==s&&(s={});const o=tb(e,r,a,this.numConstants);if(e=o.inputs,r=o.initialState,a=o.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(null==r||0===r.length)&&null==a)return super.apply(e,s);const i=[],l=[];if(null!=r){const c=r.length;if(c%2>0)throw new A("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");s.initialState=r,i.push(...r);const h=r.map(d=>new Gt({shape:d.shape}));this.forwardLayer.stateSpec=h.slice(0,c/2),this.backwardLayer.stateSpec=h.slice(c/2),l.push(...h)}if(null!=a)throw new Be("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof vs;for(const c of i)if(c instanceof vs!==u)throw new A("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[e].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(c,s);return this.inputSpec=d,p}return super.apply(e,s)}call(e,s){return V(()=>{const r=s.initialState;let a,o,i,l;if(null==r)a=this.forwardLayer.call(e,s),o=this.backwardLayer.call(e,s);else{const u=r.slice(0,r.length/2),c=r.slice(r.length/2);a=this.forwardLayer.call(e,Object.assign(s,{initialState:u})),o=this.backwardLayer.call(e,Object.assign(s,{initialState:c}))}return this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(o.slice(1))),a=a[0],o=o[0]),this.returnSequences&&(o=Er(o,1)),"concat"===this.mergeMode?l=fp([a,o]):"sum"===this.mergeMode?l=oe(a,o):"ave"===this.mergeMode?l=D(.5,oe(a,o)):"mul"===this.mergeMode?l=D(a,o):null==this.mergeMode&&(l=[a,o]),this.returnState?null==this.mergeMode?l.concat(i):[l].concat(i):l})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Lr(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Lr(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,s){let r;if(Array.isArray(s)&&(s=s[0]),r=this.returnSequences?null==this.mergeMode?[s,s]:s:null==this.mergeMode?[null,null]:null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(r)?r.concat(o).concat(o):[r].concat(o).concat(o)}return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},s=super.getConfig();return Object.assign(e,s),e}static fromConfig(e,s){const r=Is(s.layer);if(delete s.layer,null!=s.numConstants)throw new Be("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=s;return a.layer=r,new e(a)}}return n.className="Bidirectional",n})();te(Bb);let Wb=(()=>{class n extends He{constructor(e){super(e),this.scale=e.scale,this.offset=e.offset?e.offset:0}getConfig(){const e={scale:this.scale,offset:this.offset},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return V(()=>("float32"!==(e=Fe(e)).dtype&&(e=xs(e,"float32")),oe(D(e,this.scale),this.offset)))}}return n.className="Rescaling",n})();te(Wb);const{resizeBilinear:vD,cropAndResize:ID}=ms;let Ub=(()=>{class n extends He{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,s,r,a,o,i,l,u){return V(()=>{let c,h=!1;const m=[s/i,r/l,(a+s)/i,(o+r)/l],y=[];3===e.rank?(h=!0,c=Fs([e])):c=e;for(let C=0;C<c.shape[0];C++)y.push(m);const x=Bo(y,[y.length,4]),b=Xo(0,y.length,1,"int32"),v=ID(c,x,b,[a,o],"nearest");return xs(h?Fe(Dr(v)):v,u)})}upsize(e,s,r,a){return V(()=>xs(vD(e,[s,r]),a))}call(e,s){return V(()=>{const r=Fe(e),a=r.dtype,o=r.shape,i=o[o.length-3],l=o[o.length-2];let u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let c=0;return l!==this.width&&(c=Math.floor((l-this.width)/2),0===c&&(c=1)),u>=0&&c>=0?this.centerCrop(r,u,c,this.height,this.width,i,l,a):this.upsize(e,this.height,this.width,a)})}getConfig(){const e={height:this.height,width:this.width},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){const r=(e=nt(e)).length-2;return e[e.length-3]=this.height,e[r]=this.width,e}}return n.className="CenterCrop",n})();te(Ub);let Gb=(()=>{class n extends He{constructor(e){super(e),this.numTokens=e.numTokens,this.outputMode=e.outputMode?e.outputMode:"multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){return null==(e=nt(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,s){return V(()=>{let r;if("int32"!==(e=Fe(e)).dtype&&(e=xs(e,"int32")),void 0!==s.countWeights){if("count"!==this.outputMode)throw new A(`countWeights is not used when outputMode !== count.\n              Received countWeights=${s.countWeights}`);r=Fe(s.countWeights)}const a=ts(e),o=nu(e),i=Rn(this.numTokens,a).bufferSync().get(0),l=$r(o,0).bufferSync().get(0);if(!i||!l)throw new A(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function SD(n,t,e,s){let r=Fe(n);if("int32"!==r.dtype&&(r=xs(r,"int32")),"int"===t)return r;const a=r.shape;if(0===r.rank&&(r=Nn(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Nn(r,-1)),r.rank>2)throw new A(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${r.rank}.`);const o=["multiHot","oneHot"].includes(t);let l;if(l=wg(r,void 0!==s&&"count"===t?s:[],e,o),"tfIdf"!==t)return l;if(s)return D(l,s);throw new A("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,r)})}}return n.className="CategoryEncoding",n})();te(Gb);const Hb=new Set(["bilinear","nearest"]);let jb=(()=>{class n extends He{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Hb.has(e.interpolation))throw new A(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){return e=nt(e),[this.height,this.width,e[2]]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return V(()=>{const r=[this.height,this.width];if("bilinear"===this.interpolation)return ms.resizeBilinear(e,r,!this.cropToAspectRatio);if("nearest"===this.interpolation)return ms.resizeNearestNeighbor(e,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Hb]} are supported`)})}}return n.className="Resizing",n})();te(jb);let ND=(()=>{class n{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}return n.className="RandomSeed",n})(),kD=(()=>{class n extends He{constructor(e){super(e),this.randomGenerator=new ND(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},s=super.getConfig();return Object.assign(e,s),e}}return n.className="BaseRandomLayer",n})();const qb=new Set(["bilinear","nearest"]);let Kb=(()=>{class n extends kD{constructor(e){super(e);const{factor:s,interpolation:r="bilinear"}=e;if(this.factor=s,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new A(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new A(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new A(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(r){if(!qb.has(r))throw new A(`Invalid interpolation parameter: ${r} is not implemented`);this.interpolation=r}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){return e=nt(e),[this.imgHeight,-1,e[2]]}call(e,s){return V(()=>{const r=Fe(e);this.imgHeight=r.shape[r.shape.length-3];const a=r.shape[r.shape.length-2];this.widthFactor=ha([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*a;o=Math.round(o);const i=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return ms.resizeBilinear(e,i);case"nearest":return ms.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...qb]} are supported`)}})}}return n.className="RandomWidth",n})();function _D(n){return new ii(n)}function $D(n){return new Wx(n)}function ED(n){return new Mx(n)}function DD(n){return new zx(n)}function AD(n){return new Bx(n)}function RD(n){return new Gx(n)}function OD(n){return new Ux(n)}function FD(n){return new Yx(n)}function PD(n){return new Up(n)}function LD(n){return new Kx(n)}function VD(n){return new Gp(n)}function MD(n){return new Xx(n)}function zD(n){return new Zx(n)}function BD(n){return new Qx(n)}function WD(n){return new Jx(n)}function UD(n){return new eb(n)}function GD(n){return new cb(n)}function HD(n){return new lb(n)}function jD(n){return new Xp(n)}function qD(n){return new ib(n)}function KD(n){return new ub(n)}function XD(n){return new hb(n)}function ZD(n){return new db(n)}function YD(n){return new pb(n)}function QD(n){return new mb(n)}function JD(n){return new Vu(n)}function eA(n){return new zu(n)}function tA(n){return new Uu(n)}function nA(n){return new Bu(n)}function sA(n){return new Wu(n)}function rA(n){return new Mu(n)}function aA(n){return new gb(n)}function oA(n){return new wb(n)}function iA(n){return new vb(n)}function lA(n){return new Ib(n)}function Zp(n){return new kb(n)}function uA(n){return Zp(n)}function cA(n){return Zp(n)}function Yp(n){return new $b(n)}function hA(n){return Yp(n)}function dA(n){return Yp(n)}function Qp(n){return new Ab(n)}function pA(n){return Qp(n)}function fA(n){return Qp(n)}function mA(n){return new Ob(n)}function gA(n){return new Lb(n)}function Xb(n){return new Fb(n)}function Zb(n){return new Vb(n)}function Yb(n){return new Nb(n)}function Qb(n){return new _b(n)}function yA(n){return new Db(n)}function xA(n){return new rb(n)}function bA(n){return new jp(n)}function wA(n){return new ab(n)}function vA(n){return new Lu(n)}function IA(n){return new sb(n)}function SA(n){return new Hp(n)}function CA(n){return new ob(n)}function NA(n){return new Kp(n)}function kA(n){return new zr(n)}function TA(n){return new qp(n)}function _A(n){return new Bb(n)}function $A(n){return new zb(n)}te(Kb);const EA=Xb,DA=Zb,AA=Yb,RA=Qb;function OA(n){return new yb(n)}function FA(n){return new xb(n)}function PA(n){return new bb(n)}function LA(n){return new fb(n)}function VA(n){return new Wb(n)}function MA(n){return new Ub(n)}function zA(n){return new jb(n)}function BA(n){return new Gb(n)}function WA(n){return new Kb(n)}var e0;function ve(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&S("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}z().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(n){let t;var e;(e=t=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(e0||(e0={})),Error,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const ER=wy;let DR=(()=>{class n extends L{nextDataId(){return n.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new M(this,ds())}write(e,s,r){this.firstUse&&(this.firstUse=!1,z().get("IS_NODE")&&En("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:r,refCount:1}),a}makeTensorInfo(e,s,r){let a;if("string"===s&&null!=r&&r.length>0&&Qr(r[0])){const o=r.map(i=>_s(i));a=this.write(o,e,s)}else a=this.write(r,e,s);return{dataId:a,shape:e,dtype:s}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,s,r,a,o){this.data.set(e,{values:s,dtype:a,refCount:o})}numDataIds(){return this.data.numDataIds()}read(e){var s=this;return(0,T.Z)(function*(){return s.readSync(e)})()}readSync(e){const{dtype:s,complexTensorInfos:r}=this.data.get(e);return"complex64"===s?Ls(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):jf(this.data.get(e).values,s)}bufferSync(e){const s=this.readSync(e.dataId);if("string"===e.dtype)try{const r=s.map(a=>$s(a));return Ge(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ge(e.shape,e.dtype,s)}makeOutput(e,s,r){return ds().makeTensorFromTensorInfo(this.makeTensorInfo(s,r,e),this)}disposeData(e,s=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!s&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}time(e){return(0,T.Z)(function*(){const s=hn();return e(),{kernelMs:hn()-s}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ve([e],"where");const s=this.readSync(e.dataId);return ER(e.shape,s)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return n.nextDataId=0,n})();function Cs(n){return(t,e,s)=>{const r=pt(e,t.length);for(let a=0;a<t.length;++a)r[a]=n(t[a],s);return r}}function it(n,t,e){return ir(n,Cs(t),e)}function ir(n,t,e){return({inputs:s,attrs:r,backend:a})=>{const{x:o}=s;ve(o,n);const i=a,l=i.data.get(o.dataId).values;let u;if("string"===o.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Vs(l)}else u=l;const c=e||o.dtype,h=t(u,c,r);return i.makeTensorInfo(o.shape,c,h)}}Gm("cpu",()=>new DR,1);const A0=it(Za,n=>n>=0?n:Math.exp(n)-1),RR={kernelName:Za,backendName:"cpu",kernelFunc:A0};function Ns(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const OR={kernelName:so,backendName:"cpu",kernelFunc:Ns};function R0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:a}=s;ve([r],"leakyRelu");const o=I(r.shape),i=e.data.get(r.dataId).values,l=rt("float32",o);for(let u=0;u<i.length;u++)l[u]=i[u]<0?a*i[u]:i[u];return e.makeTensorInfo(r.shape,"float32",l)}const FR={kernelName:tl,backendName:"cpu",kernelFunc:R0};function Mt(n){return(t,e,s,r,a)=>{const o=Me(t,e),i=o.length,l=ke(o),c=rt(a,I(o)),h=t.length,d=e.length,p=ke(t),f=ke(e),g=la(t,o),m=la(e,o);if(g.length+m.length===0)for(let y=0;y<c.length;++y)c[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const x=xr(y,i,l),b=x.slice(-h);g.forEach(k=>b[k]=0);const w=Qn(b,h,p),v=x.slice(-d);m.forEach(k=>v[k]=0);const C=Qn(v,d,f);c[y]=n(s[w],r[C])}return[c,o]}}const PR=Mt((n,t)=>n<0?t*n:n);function O0(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;ve([s,r],"prelu");const a=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,[i,l]=PR(s.shape,r.shape,a,o,"float32");return e.makeTensorInfo(l,"float32",i)}const LR={kernelName:wl,backendName:"cpu",kernelFunc:O0},F0=it(yo,n=>Math.max(0,n)),VR={kernelName:yo,backendName:"cpu",kernelFunc:F0},P0=it(xo,n=>Math.min(Math.max(0,n),6)),MR={kernelName:xo,backendName:"cpu",kernelFunc:P0},zR=Cs(n=>1/(1+Math.exp(-n))),L0=it(No,n=>1/(1+Math.exp(-n))),BR={kernelName:No,backendName:"cpu",kernelFunc:L0};function Yu(n,t,e,s,r){if("linear"===e)return Ns({inputs:{x:t},backend:n});if("relu"===e)return F0({inputs:{x:t},backend:n});if("elu"===e)return A0({inputs:{x:t},backend:n});if("relu6"===e)return P0({inputs:{x:t},backend:n});if("prelu"===e)return O0({inputs:{x:t,alpha:s},backend:n});if("leakyrelu"===e)return R0({inputs:{x:t},backend:n,attrs:{alpha:r}});if("sigmoid"===e)return L0({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function Tn(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,a=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,i=e.makeTensorInfo(s.shape,"complex64");return e.data.get(i.dataId).complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",a),imag:e.makeTensorInfo(r.shape,"float32",o)},i}const WR={kernelName:Oc,backendName:"cpu",kernelFunc:Tn};function Qu(n,t,e="float32"){if("complex64"===e)return Tn({inputs:{real:Qu(n,t,"float32"),imag:Qu(n,t,"float32")},backend:n});const s=tn(I(t),e);return n.makeTensorInfo(t,e,s)}function Ur(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,a=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,a)}const UR={kernelName:ah,backendName:"cpu",kernelFunc:Ur};function V0(n,t,e,s){if("int32"===s)return[t,"int32",Int32Array.from(n)];if("bool"===s){const r=Gs([0],e),[a,o]=Mt((i,l)=>i!==l?1:0)(t,[],n,r,"bool");return[o,"bool",a]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function lr(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return Ns({inputs:{x:r},backend:e});const c=Qu(e,r.shape,r.dtype),h=lr({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),d=Tn({inputs:{real:h,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),d}if("complex64"===r.dtype){const c=Ur({inputs:{input:r},backend:e}),h=lr({inputs:{x:c},backend:e,attrs:{dtype:a}});return e.disposeIntermediateTensorInfo(c),h}if(!Cc(r.dtype,a)){const c=Ns({inputs:{x:r},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:a}}const o=e.data.get(r.dataId).values,[i,l,u]=V0(o,r.shape,r.dtype,a);return e.makeTensorInfo(i,l,u)}const GR={kernelName:Ga,backendName:"cpu",kernelFunc:lr};function Qt(n,t,e,s){return null==e?({inputs:r,backend:a})=>{const{a:o,b:i}=r,l=a;ve([o,i],n);const u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,h="string"===o.dtype?Vs(u):u,d="string"===o.dtype?Vs(c):c,p=s||o.dtype,[f,g]=t(o.shape,i.shape,h,d,p);return l.makeTensorInfo(g,p,f)}:({inputs:r,backend:a})=>{const{a:o,b:i}=r,l=a;if("complex64"===o.dtype||"complex64"===i.dtype){const u=lr({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),d=c.complexTensorInfos.imag,p=l.data.get(c.complexTensorInfos.real.dataId).values,f=l.data.get(d.dataId).values,g=lr({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),x=m.complexTensorInfos.imag,b=l.data.get(m.complexTensorInfos.real.dataId).values,w=l.data.get(x.dataId).values,[v,C,k]=e(o.shape,i.shape,p,f,b,w),_=l.makeTensorInfo(k,"float32",v),$=l.makeTensorInfo(k,"float32",C),E=Tn({inputs:{real:_,imag:$},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(_),l.disposeIntermediateTensorInfo($),E}{const u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,h=s||o.dtype,[d,p]=t(o.shape,i.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function hf(n){return(t,e,s,r,a,o)=>{const i=Me(t,e),l=I(i),u=i.length,c=ke(i),h=rt("float32",l),d=rt("float32",l),p=la(t,i),f=la(e,i),g=Ls(s,r),m=Ls(a,o),y=t.length,x=ke(t),b=e.length,w=ke(e);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const C=v%g.length,k=v%m.length,_=n(g[2*C],g[2*C+1],m[2*k],m[2*k+1]);h[v]=_.real,d[v]=_.imag}else for(let v=0;v<h.length;v++){const C=xr(v,u,c),k=C.slice(-y);p.forEach(B=>k[B]=0);const _=Qn(k,y,x),$=C.slice(-b);f.forEach(B=>$[B]=0);const E=Qn($,b,w),P=n(g[2*_],g[2*_+1],m[2*E],m[2*E+1]);h[v]=P.real,d[v]=P.imag}return[h,d,i]}}const M0=Mt((n,t)=>n+t),HR=hf((n,t,e,s)=>({real:n+e,imag:t+s})),wa=Qt(Jr,M0,HR),jR={kernelName:Jr,backendName:"cpu",kernelFunc:wa};function xt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:a}=s,o=I(r.shape),i=kt(a,o),l=I(i);S(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const u=e.data.get(r.dataId);if(null!=u.complexTensorInfos){const h=u.complexTensorInfos.imag;u.complexTensorInfos.real.shape=i,h.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const qR={kernelName:Il,backendName:"cpu",kernelFunc:xt};function z0(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;ve([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],h=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],p=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),g=a.shape.slice(0,-2),m=I(f),y=I(g),b=Me(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);S(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);const v=i?[y,p,h]:[y,h,p],C=xt({inputs:{x:r},backend:e,attrs:{shape:o?[m,c,d]:[m,d,c]}}),k=xt({inputs:{x:a},backend:e,attrs:{shape:v}}),_=o?C.shape[1]:C.shape[2],$=o?C.shape[2]:C.shape[1],E=i?k.shape[1]:k.shape[2],P=Math.max(m,y),B=e.data.get(C.dataId).values,U=e.data.get(k.dataId).values,G=ke(C.shape),H=ke(k.shape),[K,X,j]=o?[G[0],1,G[1]]:[G[0],G[1],1],[Z,ae,ie]=i?[1,H[1],H[0]]:[H[1],1,H[0]],ue=$*E,le=Ge([P,$,E],C.dtype),ye=le.values,ce=e.blockSize;for(let xe=0;xe<P;xe++){const _e=xe%m,Pe=xe%y;for(let Ae=0;Ae<$;Ae+=ce){const Ue=Math.min(Ae+ce,$);for(let je=0;je<E;je+=ce){const lt=Math.min(je+ce,E);for(let bt=0;bt<_;bt+=ce){const At=Math.min(bt+ce,_);for(let wt=Ae;wt<Ue;wt++)for(let ht=je;ht<lt;ht++){let Et=0;for(let Nt=bt;Nt<At;Nt++)Et+=B[_e*K+wt*X+Nt*j]*U[Nt*Z+ht*ae+Pe*ie];ye[xe*ue+(wt*E+ht)]+=Et}}}}}return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(k),e.makeTensorInfo(b,le.dtype,le.values)}const KR={kernelName:zi,backendName:"cpu",kernelFunc:z0},ZR={kernelName:Pl,backendName:"cpu",kernelFunc:function XR(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=z0({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:e}),o&&(p=wa({inputs:{a:d,b:o},backend:e}),g.push(d),d=p),c&&(f=Yu(e,d,c,i,h),g.push(d),d=f);for(const y of g)e.disposeIntermediateTensorInfo(y);return d}};function B0(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const YR={kernelName:Fi,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend;ve(t,"abs");let s=new Float32Array(I(t.shape));return s=B0(e.data.get(t.dataId).values),e.makeOutput(s,t.shape,t.dtype)}},QR=it(La,n=>Math.acos(n)),JR={kernelName:La,backendName:"cpu",kernelFunc:QR},eO=it(Va,n=>Math.acosh(n)),tO={kernelName:Va,backendName:"cpu",kernelFunc:eO},sO={kernelName:_c,backendName:"cpu",kernelFunc:function nO(n){const{inputs:t,backend:e}=n,s=t;ve(t,"addN");const r=s.map(i=>e.data.get(i.dataId).values),a=Ge(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){const l=r[i];for(let u=0;u<o.length;u++)o[u]+=l[u]}return e.makeTensorInfo(a.shape,a.dtype,a.values)}};function df(n,t,e,s,r){const a=t.length,o=I(t),i=ke(t),l=ke(r),u=rt(e,I(r));for(let c=0;c<o;++c){const h=xr(c,a,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];u[Qn(d,a,l)]=n[c]}return u}function Sn(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:a}=e;ve(r,"transpose");const i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[a[h]];const u=df(s.data.get(r.dataId).values,r.shape,r.dtype,a,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}const rO={kernelName:ea,backendName:"cpu",kernelFunc:Sn},oO={kernelName:"All",backendName:"cpu",kernelFunc:function aO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"all");const i=$e(a,r.shape);let l=i;const u=_t(l,r.shape.length);let c=r;null!=u&&(c=Sn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Pt(l.length,r.shape.length)),rn("all",l,c.shape.length);const[h,d]=Zt(c.shape,l),p=I(d),f=tn(I(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let b=g[x];for(let w=0;w<p;++w){const v=g[x+w];b=b&&v}f[y]=b}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(o){const x=xt({inputs:{x:m},backend:e,attrs:{shape:Ft(h,i)}});return e.disposeIntermediateTensorInfo(m),x}return m}},lO={kernelName:"Any",backendName:"cpu",kernelFunc:function iO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"any");const i=$e(a,r.shape);let l=i;const u=_t(l,r.shape.length);let c=r;null!=u&&(c=Sn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Pt(l.length,r.shape.length)),rn("any",l,c.shape.length);const[h,d]=Zt(c.shape,l),p=I(d),f=tn(I(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let b=g[x];for(let w=0;w<p;++w){const v=g[x+w];b=b||v}f[y]=b}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(o){const x=xt({inputs:{x:m},backend:e,attrs:{shape:Ft(h,i)}});return e.disposeIntermediateTensorInfo(m),x}return m}},cO={kernelName:Pi,backendName:"cpu",kernelFunc:function uO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a}=s;ve(r,"argMax");let o=$e(a,r.shape);const i=_t(o,r.shape.length);let l=r;const u=[];null!=i&&(l=Sn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),o=Pt(o.length,l.shape.length)),o=[o[0]],rn("argMax",o,l.shape.length);const[c,h]=Zt(l.shape,o),p=tn(I(c),"int32"),f=I(h),g=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let x=g[y],b=0;for(let w=0;w<f;++w){const v=g[y+w];v>x&&(x=v,b=w)}p[m]=b}return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(c,"int32",p)}},dO={kernelName:Li,backendName:"cpu",kernelFunc:function hO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a}=s;ve(r,"argMin");let o=$e(a,r.shape);const i=_t(o,r.shape.length);let l=r;const u=[];null!=i&&(l=Sn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),o=Pt(o.length,l.shape.length)),o=[o[0]],rn("argMin",o,l.shape.length);const[c,h]=Zt(l.shape,o),p=tn(I(c),"int32"),f=I(h),g=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let x=g[y],b=0;for(let w=0;w<f;++w){const v=g[y+w];v<x&&(x=v,b=w)}p[m]=b}return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(c,"int32",p)}},pO=it(Ma,n=>Math.asin(n)),fO={kernelName:Ma,backendName:"cpu",kernelFunc:pO},mO=it(za,n=>Math.asinh(n)),gO={kernelName:za,backendName:"cpu",kernelFunc:mO},yO=it(Ba,n=>Math.atan(n)),xO={kernelName:Ba,backendName:"cpu",kernelFunc:yO},bO=Mt((n,t)=>Math.atan2(n,t)),wO=Qt(Ua,bO),vO={kernelName:Ua,backendName:"cpu",kernelFunc:wO},IO=it(Wa,n=>Math.atanh(n)),SO={kernelName:Wa,backendName:"cpu",kernelFunc:IO};function pf(n,t,e,s,r,a){const o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Ge(r.outShape,e),m=g.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],b=r.outShape[3];for(let w=0;w<r.batchSize;++w){const v=w*y,C=w*s[0];for(let k=0;k<r.inChannels;++k)for(let _=0;_<r.outHeight;++_){const $=_*o-d,E=Math.max(0,$),P=Math.min(r.inHeight,c+$),B=v+_*x;for(let U=0;U<r.outWidth;++U){const G=U*i-p,H=Math.max(0,G),K=Math.min(r.inWidth,h+G);let X=f,j=0,Z=0;for(let ie=E;ie<P;ie+=l){const ue=C+ie*s[1];for(let le=H;le<K;le+=u){const ce=n[ue+le*s[2]+k];"max"===a&&ce>X?X=ce:"avg"===a&&(j+=ce,Z++)}if(isNaN(X))break}m[B+U*b+k]="avg"===a?j/Z:X}}}return g}function W0(n,t,e,s,r=!1,a=!1){const o=Ge(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=Ge(t,e,n);for(let m=0;m<s.batchSize;++m)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){const b=x*i-p;let w=b;for(;w<0;)w+=u;const v=Math.min(s.inHeight,h+b);for(let C=0;C<s.outWidth;++C){const k=C*l-f;let _=k;for(;_<0;)_+=c;const $=Math.min(s.inWidth,d+k);let E=Number.NEGATIVE_INFINITY,P=-1;for(let B=w;B<v;B+=u){const U=B-b;for(let G=_;G<$;G+=c){const H=G-k,K=g.get(m,B,G,y);K>E&&(E=K,P=r?a?((m*s.inHeight+B)*s.inWidth+G)*s.inChannels+y:(B*s.inWidth+G)*s.inChannels+y:U*d+H)}}o.set(P,m,x,C,y)}}return o}function U0(n,t,e,s,r,a){const o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,y=r.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Ge(r.outShape,e),w=b.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],_=r.outShape[4];for(let $=0;$<r.batchSize;++$){const E=$*v,P=$*s[0];for(let B=0;B<r.inChannels;++B)for(let U=0;U<r.outDepth;++U){const G=U*o-g;let H=G;for(;H<0;)H+=u;const K=Math.min(r.inDepth,d+G),X=E+U*C;for(let j=0;j<r.outHeight;++j){const Z=j*i-m;let ae=Z;for(;ae<0;)ae+=c;const ie=Math.min(r.inHeight,p+Z),ue=X+j*k;for(let le=0;le<r.outWidth;++le){const ye=le*l-y;let ce=ye;for(;ce<0;)ce+=h;const xe=Math.min(r.inWidth,f+ye),_e=ue+le*_;let Pe=x,Ae=0,Ue=0;for(let lt=H;lt<K;lt+=u){const bt=P+lt*s[1];for(let At=ae;At<ie;At+=c){const wt=bt+At*s[2];for(let ht=ce;ht<xe;ht+=h){const Nt=n[wt+ht*s[3]+B];if("max"===a&&Nt>Pe?Pe=Nt:"avg"===a&&(Ae+=Nt,Ue++),isNaN(Pe))break}if(isNaN(Pe))break}if(isNaN(Pe))break}w[_e+B]="avg"===a?Ae/Math.max(Ue,1):Pe}}}}return b}const kO={kernelName:Vi,backendName:"cpu",kernelFunc:function NO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;ve(r,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s;S(sn(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=Wn(r.shape,a,o,1,i,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&de(c.inShape,c.outShape))h=Ns({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=ke(r.shape),f=pf(d,0,r.dtype,p,c,"avg");h=e.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}},_O={kernelName:Mi,backendName:"cpu",kernelFunc:function TO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;ve(r,"avgPool3d");const c=Ds(r.shape,a,o,1,i,l,u),d=U0(e.data.get(r.dataId).values,0,r.dtype,ke(r.shape),c,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}},EO={kernelName:Ac,backendName:"cpu",kernelFunc:function $O(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;ve([r,a],"avgPool3DGrad");const c=Ds(a.shape,o,i,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,C=c.effectiveFilterWidth,k=w-1-c.padInfo.front,_=C-1-c.padInfo.left,$=v-1-c.padInfo.top,E=Ge(a.shape,"float32"),P=1/(f*g*m),B=e.bufferSync(r);for(let U=0;U<c.batchSize;++U)for(let G=0;G<c.inChannels;++G)for(let H=0;H<c.inDepth;++H)for(let K=0;K<c.inHeight;++K)for(let X=0;X<c.inWidth;++X){const j=H-k,Z=K-$,ae=X-_;let ie=0;for(let ue=0;ue<w;ue+=y){const le=(j+ue)/h;if(!(le<0||le>=c.outDepth||Math.floor(le)!==le))for(let ye=0;ye<v;ye+=x){const ce=(Z+ye)/d;if(!(ce<0||ce>=c.outHeight||Math.floor(ce)!==ce))for(let xe=0;xe<C;xe+=b){const _e=(ae+xe)/p;_e<0||_e>=c.outWidth||Math.floor(_e)!==_e||(ie+=B.get(U,le,ce,_e,G))}}}E.set(ie*P,U,H,K,X,G)}return e.makeTensorInfo(E.shape,E.dtype,E.values)}},AO={kernelName:Dc,backendName:"cpu",kernelFunc:function DO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,o=a;ve([r,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=s,c=Wn(o.shape,i,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,b=x-1-c.padInfo.left,w=y-1-c.padInfo.top,v=Ge(o.shape,"float32"),C=1/(p*f),k=e.data.get(r.dataId).values,_=Ge(r.shape,"float32",k);for(let $=0;$<c.batchSize;++$)for(let E=0;E<c.inChannels;++E)for(let P=0;P<c.inHeight;++P)for(let B=0;B<c.inWidth;++B){const U=P-w,G=B-b;let H=0;for(let K=0;K<y;K+=g){const X=(U+K)/h;if(!(X<0||X>=c.outHeight||Math.floor(X)!==X))for(let j=0;j<x;j+=m){const Z=(G+j)/d;Z<0||Z>=c.outWidth||Math.floor(Z)!==Z||(H+=_.get($,X,Z,E))}}v.set(H*C,$,P,B,E)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}},OO={kernelName:Qi,backendName:"cpu",kernelFunc:function RO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:a,offset:o,mean:i,variance:l}=t;S(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(null==o||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(null==a||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ve([r,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=e.data.get(r.dataId).values,h=e.data.get(i.dataId).values,d=e.data.get(l.dataId).values,p=a?e.data.get(a.dataId).values:new Float32Array([1]),f=o?e.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,y=p.length,x=d.length,b=h.length;let w=0,v=0,C=0,k=0;for(let _=0;_<c.length;++_)g[_]=f[w++]+(c[_]-h[v++])*p[C++]/Math.sqrt(d[k++]+u),w>=m&&(w=0),v>=b&&(v=0),C>=y&&(C=0),k>=x&&(k=0);return e.makeTensorInfo(r.shape,r.dtype,g)}};function G0(n,t,e,s,r){const a=nd(s,t,e),o=I(e),i=ke(s);if(a){const h=sd(t,i);return"string"===r?n.slice(h,h+o):n.subarray(h,h+o)}const u=Ge(s,r,"string"===r?Vs(n):n),c=Ge(e,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,g)=>f+t[g]);c.set(u.get(...p),...d)}return"string"===r?by(c.values):c.values}function Gr(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:a,size:o}=s;ve(r,"slice");const[i,l]=Yl(r,a,o);ed(r,i,l);const c=G0(e.data.get(r.dataId).values,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,c)}const FO={kernelName:Tl,backendName:"cpu",kernelFunc:Gr},LO={kernelName:Bi,backendName:"cpu",kernelFunc:function PO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:a,crops:o}=s;ve([r],"batchToSpaceND");const i=a.reduce((y,x)=>y*x),l=Jo(r.shape,a,i),u=ei(l.length,a.length),c=ti(r.shape,a,i),h=Md(o,a.length),d=zd(c,o,a.length),p=xt({inputs:{x:r},backend:e,attrs:{shape:l}}),f=Sn({inputs:{x:p},backend:e,attrs:{perm:u}}),g=xt({inputs:{x:f},backend:e,attrs:{shape:c}}),m=Gr({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}};function ff(n,t,e,s,r){const a=I(s),o=tn(r,e);for(let i=0;i<n.length;i++){const l=n[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o[l]+=a>0?t[i]:1)}return o}function H0(n,t,e,s=!1){const r=n.shape[0],a=n.shape[1],o=Ge([r,e],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){const u=n.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||o.set(s?1:t.size>0?o.get(i,u)+t.get(i,l):o.get(i,u)+1,i,u)}return o}const MO={kernelName:Rc,backendName:"cpu",kernelFunc:function VO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:a}=t,{size:o}=s,u=ff(e.data.get(r.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,o);return e.makeTensorInfo([o],a.dtype,u)}},BO={kernelName:Zf,backendName:"cpu",kernelFunc:function zO(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,a=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,i=Me(Array.from(a),Array.from(o));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},j0=Cs(n=>Math.ceil(n)),WO=ir(Ha,j0),UO={kernelName:Ha,backendName:"cpu",kernelFunc:WO},GO=it(ja,(n,t)=>n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n),HO={kernelName:ja,backendName:"cpu",kernelFunc:GO},jO={kernelName:Wi,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(I(t.shape)),r=e.data.get(t.dataId),o=r.complexTensorInfos.imag,i=e.data.get(r.complexTensorInfos.real.dataId).values,l=e.data.get(o.dataId).values;for(let u=0;u<i.length;u++)s[u]=Math.hypot(i[u],l[u]);return e.makeOutput(s,t.shape,"float32")}};function q0(n,t,e,s){const r=pt(e,I(t));if(s&&"string"!==e){let a=0;n.forEach(o=>{const i=I(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;n.forEach(o=>{const i="string"===e?Vs(o.vals):o.vals;let l=0;for(let u=0;u<o.shape[0];++u){const c=u*t[1]+a;for(let h=0;h<o.shape[1];++h)r[c+h]=i[l++]}a+=o.shape[1]})}return r}function va(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,a=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,a)}const qO={kernelName:Yc,backendName:"cpu",kernelFunc:va};function Ia(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,a=$e(r,t[0].shape)[0];Pd(t.map(g=>g.shape),a);let i=gs(t.map(g=>g.shape),a);if(0===I(i))return e.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(g=>I(g.shape)>0);if(1===l.length)return Ns({inputs:{x:l[0]},backend:e});if("complex64"===l[0].dtype){const g=l.map(w=>Ur({inputs:{input:w},backend:e})),m=l.map(w=>va({inputs:{input:w},backend:e})),y=Ia({inputs:g,backend:e,attrs:{axis:a}}),x=Ia({inputs:m,backend:e,attrs:{axis:a}}),b=Tn({inputs:{real:y,imag:x},backend:e});return g.forEach(w=>e.disposeIntermediateTensorInfo(w)),m.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(x),b}const u=l.map(g=>{const m=I(g.shape.slice(a));return xt({inputs:{x:g},backend:e,attrs:{shape:[-1,m]}})}),c=u.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));i=gs(u.map(g=>g.shape),1);const d=q0(c,i,t[0].dtype,1===u[0].shape[0]),p=gs(l.map(g=>g.shape),a),f=e.makeTensorInfo(p,t[0].dtype,d);return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}const KO={kernelName:Ui,backendName:"cpu",kernelFunc:Ia};function K0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s;ve([r,a],"conv2d");const h=As(l),d=Xt(r.shape,a.shape,o,u,i,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,b="channelsLast"===d.dataFormat,w=new nn(d.outShape,r.dtype),v=ke(r.shape),C=ke(a.shape),k=v[0],_=b?v[1]:v[2],$=b?v[2]:1,E=b?1:v[1],P=w.strides[0],B=b?w.strides[1]:w.strides[2],U=b?w.strides[2]:1,G=b?1:w.strides[1],H=e.data.get(r.dataId).values,K=e.data.get(a.dataId).values,X=w.values;for(let j=0;j<d.batchSize;++j){const Z=j*k,ae=j*P;for(let ie=0;ie<d.outHeight;++ie){const ue=ae+ie*B,le=ie*d.strideHeight-x;for(let ye=0;ye<p;++ye){const ce=le+ye*g;if(ce<0||ce>=d.inHeight)continue;const xe=ye*C[0],_e=Z+ce*_;for(let Pe=0;Pe<d.outWidth;++Pe){const Ae=ue+Pe*U,Ue=Pe*d.strideWidth-y;for(let je=0;je<f;++je){const lt=Ue+je*m;if(lt<0||lt>=d.inWidth)continue;const At=_e+lt*$;let wt=xe+je*C[1];for(let ht=0;ht<d.inChannels;++ht){const Et=H[At+ht*E];for(let Nt=0;Nt<d.outChannels;++Nt)X[Ae+Nt*G]+=Et*K[wt+Nt];wt+=d.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,X)}const XO={kernelName:Gi,backendName:"cpu",kernelFunc:K0},YO={kernelName:Fc,backendName:"cpu",kernelFunc:function ZO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;ve([r,a],"conv2dBackpropFilter");const h=As(l),d=Xt(r.shape,c,o,1,i,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,y="channelsLast"===d.dataFormat,x=new nn(d.filterShape,"float32"),b=d.padInfo.left,w=d.padInfo.top,v=e.data.get(r.dataId).values,C=e.data.get(a.dataId).values,k=new nn(r.shape,r.dtype,v),_=new nn(a.shape,a.dtype,C);for(let $=0;$<g;++$){const E=Math.max(0,Math.ceil((w-$)/p)),P=Math.min(d.outHeight,(d.inHeight+w-$)/p);for(let B=0;B<m;++B){const U=Math.max(0,Math.ceil((b-B)/f)),G=Math.min(d.outWidth,(d.inWidth+b-B)/f);for(let H=0;H<d.inChannels;++H)for(let K=0;K<d.outChannels;++K){let X=0;for(let j=0;j<d.batchSize;++j)for(let Z=E;Z<P;++Z){const ae=$+Z*p-w;for(let ie=U;ie<G;++ie){const ue=B+ie*f-b;X+=y?k.get(j,ae,ue,H)*_.get(j,Z,ie,K):k.get(j,H,ae,ue)*_.get(j,K,Z,ie)}}x.set(X,$,B,H,K)}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}},JO={kernelName:Hi,backendName:"cpu",kernelFunc:function QO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s;ve([r,a],"conv2dBackpropInput");const h=ke(a.shape),d=ke(r.shape);let p=As(u);const f=Xt(o,a.shape,i,1,l,c,!1,p),g=new nn(f.inShape,"float32"),m=g.values,y=e.data.get(r.dataId).values,x=e.data.get(a.dataId).values,[b,w,v]=h,{batchSize:C,filterHeight:k,filterWidth:_,inChannels:$,inHeight:E,inWidth:P,outChannels:B,outHeight:U,outWidth:G,strideHeight:H,strideWidth:K}=f;p=f.dataFormat;const X=k-1-f.padInfo.top,j=_-1-f.padInfo.left,Z="channelsLast"===p,ae=g.strides[0],ie=Z?g.strides[1]:g.strides[2],ue=Z?g.strides[2]:1,le=Z?1:g.strides[1],ye=d[0],ce=Z?d[1]:d[2],xe=Z?d[2]:1,_e=Z?1:d[1];for(let Pe=0;Pe<C;++Pe)for(let Ae=0;Ae<$;++Ae)for(let Ue=0;Ue<E;++Ue){const je=Ue-X,lt=Math.max(0,Math.ceil(je/H)),bt=Math.min(U,(k+je)/H);for(let At=0;At<P;++At){const wt=At-j,ht=Math.max(0,Math.ceil(wt/K)),Et=Math.min(G,(_+wt)/K);let Nt=0;for(let on=lt;on<bt;++on){const pr=on*H-je;for(let Mn=ht;Mn<Et;++Mn){const us=ye*Pe+ce*on+xe*Mn,Ws=b*(k-1-pr)+w*(_-1-(Mn*K-wt))+v*Ae;for(let fr=0;fr<B;++fr)Nt+=y[us+_e*fr]*x[Ws+fr]}}m[ae*Pe+ie*Ue+ue*At+le*Ae]=Nt}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}},tF={kernelName:ji,backendName:"cpu",kernelFunc:function eF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;ve([r,a],"conv3d");const u=Xs(r.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,y=m.front,x=m.left,b=m.top,w=new nn(u.outShape,r.dtype),v=e.data.get(r.dataId).values,C=e.data.get(a.dataId).values,k=w.values,_=ke(r.shape),$=ke(a.shape);for(let E=0;E<u.batchSize;++E){const P=E*_[0],B=E*w.strides[0];for(let U=0;U<u.outDepth;++U){const G=B+U*w.strides[1],H=U*u.strideDepth-y;for(let K=0;K<c;++K){const X=H+K*p;if(X<0||X>=u.inDepth)continue;const j=K*$[0],Z=P+X*_[1];for(let ae=0;ae<u.outHeight;++ae){const ie=G+ae*w.strides[2],ue=ae*u.strideHeight-b;for(let le=0;le<h;++le){const ye=ue+le*f;if(ye<0||ye>=u.inHeight)continue;const ce=j+le*$[1],xe=Z+ye*_[2];for(let _e=0;_e<u.outWidth;++_e){const Pe=ie+_e*u.outChannels,Ae=_e*u.strideWidth-x;for(let Ue=0;Ue<d;++Ue){const je=Ae+Ue*g;if(je<0||je>=u.inWidth)continue;const bt=xe+je*u.inChannels;let At=ce+Ue*$[2];for(let wt=0;wt<u.inChannels;++wt){const ht=v[bt+wt];for(let Et=0;Et<u.outChannels;++Et)k[Pe+Et]+=ht*C[At+Et];At+=u.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}},sF={kernelName:Pc,backendName:"cpu",kernelFunc:function nF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;ve([r,a],"conv3dBackpropFilterV2");const u=ke(r.shape),c=ke(a.shape),h=Xs(r.shape,l,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,y=h.filterWidth,x=new nn(h.filterShape,"float32"),b=x.values,[w,v,C,k]=x.strides,_=e.data.get(a.dataId).values,[$,E,P,B]=c,U=e.data.get(r.dataId).values,[G,H,K,X]=u,j=h.padInfo.front,Z=h.padInfo.left,ae=h.padInfo.top;for(let ie=0;ie<g;++ie){const ue=Math.max(0,Math.ceil((j-ie)/d)),le=Math.min(h.outDepth,(h.inDepth+j-ie)/d),ye=ie*w;for(let ce=0;ce<m;++ce){const xe=Math.max(0,Math.ceil((ae-ce)/p)),_e=Math.min(h.outHeight,(h.inHeight+ae-ce)/p),Pe=ce*v+ye;for(let Ae=0;Ae<y;++Ae){const Ue=Math.max(0,Math.ceil((Z-Ae)/f)),je=Math.min(h.outWidth,(h.inWidth+Z-Ae)/f),lt=Ae*C+Pe;for(let bt=0;bt<h.inChannels;++bt){const At=bt*k+lt;for(let wt=0;wt<h.outChannels;++wt){let ht=0;for(let Et=0;Et<h.batchSize;++Et){const Nt=Et*G,Bs=Et*$;for(let on=ue;on<le;++on){const Mn=(ie+on*d-j)*H+Nt,Yr=on*E+Bs;for(let us=xe;us<_e;++us){const fr=(ce+us*p-ae)*K+Mn,mr=us*P+Yr;for(let gr=Ue;gr<je;++gr)ht+=U[(Ae+gr*f-Z)*X+fr+bt]*_[gr*B+mr+wt]}}}b[At+wt]=ht}}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}},aF={kernelName:Lc,backendName:"cpu",kernelFunc:function rF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;ve([r],"conv3dBackpropInputV2");const u=ke(r.shape),c=ke(a.shape),h=Xs(l,a.shape,i,1,o),d=new nn(h.inShape,"float32"),p=d.values,[f,g,m,y]=d.strides,x=e.data.get(r.dataId).values,[b,w,v,C]=u,k=e.data.get(a.dataId).values,[_,$,E,P]=c,{batchSize:B,filterDepth:U,filterHeight:G,filterWidth:H,inChannels:K,inDepth:X,inHeight:j,inWidth:Z,outChannels:ae,outDepth:ie,outHeight:ue,outWidth:le,strideDepth:ye,strideHeight:ce,strideWidth:xe}=h,_e=U-1-h.padInfo.front,Pe=G-1-h.padInfo.top,Ae=H-1-h.padInfo.left;for(let Ue=0;Ue<B;++Ue)for(let je=0;je<K;++je)for(let lt=0;lt<X;++lt){const bt=lt-_e,At=Math.max(0,Math.ceil(bt/ye)),wt=Math.min(ie,(U+bt)/ye);for(let ht=0;ht<j;++ht){const Et=ht-Pe,Nt=Math.max(0,Math.ceil(Et/ce)),Bs=Math.min(ue,(G+Et)/ce);for(let on=0;on<Z;++on){const pr=on-Ae,Mn=Math.max(0,Math.ceil(pr/xe)),Yr=Math.min(le,(H+pr)/xe);let us=0;for(let Ws=At;Ws<wt;++Ws){const fr=Ws*ye-bt;for(let mr=Nt;mr<Bs;++mr){const gr=mr*ce-Et;for(let $i=Mn;$i<Yr;++$i){const zf=b*Ue+w*Ws+v*mr+C*$i,HK=_*(U-1-fr)+$*(G-1-gr)+E*(H-1-($i*xe-pr))+P*je;for(let Sc=0;Sc<ae;++Sc)us+=x[zf+Sc]*k[HK+Sc]}}}p[f*Ue+g*lt+m*ht+y*on+je]=us}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}},oF=it(qa,n=>Math.cos(n)),iF={kernelName:qa,backendName:"cpu",kernelFunc:oF},lF=it(Ka,n=>Math.cosh(n)),uF={kernelName:Ka,backendName:"cpu",kernelFunc:lF},hF={kernelName:Mc,backendName:"cpu",kernelFunc:function cF(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[g,m]=i,y=Ge([f,g,m,p],"float32"),x=e.data.get(a.dataId).values,b=e.data.get(o.dataId).values,w=e.data.get(r.dataId).values,v=ke(r.shape),C=ke(y.shape);for(let k=0;k<f;k++){const _=4*k,$=x[_],E=x[_+1],P=x[_+2],B=x[_+3],U=b[k];if(U>=c)continue;const G=g>1?(P-$)*(h-1)/(g-1):0,H=m>1?(B-E)*(d-1)/(m-1):0;for(let K=0;K<g;K++){const X=g>1?$*(h-1)+K*G:.5*($+P)*(h-1);if(X<0||X>h-1)for(let j=0;j<m;j++)for(let Z=0;Z<p;Z++)y.values[Z+j*C[2]+K*C[1]+k*C[0]]=u;else if("bilinear"===l){const j=Math.floor(X),Z=Math.ceil(X),ae=X-j;for(let ie=0;ie<m;ie++){const ue=m>1?E*(d-1)+ie*H:.5*(E+B)*(d-1);if(ue<0||ue>d-1){for(let xe=0;xe<p;xe++)y.values[xe+ie*C[2]+K*C[1]+k*C[0]]=u;continue}const le=Math.floor(ue),ye=Math.ceil(ue),ce=ue-le;for(let xe=0;xe<p;xe++){let _e=xe+le*v[2]+j*v[1]+U*v[0];const Pe=w[_e];_e=xe+ye*v[2]+j*v[1]+U*v[0];const Ae=w[_e];_e=xe+le*v[2]+Z*v[1]+U*v[0];const Ue=w[_e];_e=xe+ye*v[2]+Z*v[1]+U*v[0];const je=w[_e],lt=Pe+(Ae-Pe)*ce;_e=xe+ie*C[2]+K*C[1]+k*C[0],y.values[_e]=lt+(Ue+(je-Ue)*ce-lt)*ae}}}else for(let j=0;j<m;++j){const Z=m>1?E*(d-1)+j*H:.5*(E+B)*(d-1);if(Z<0||Z>d-1){for(let ue=0;ue<p;ue++)y.values[ue+j*C[2]+K*C[1]+k*C[0]]=u;continue}const ae=Math.round(Z),ie=Math.round(X);for(let ue=0;ue<p;ue++)y.values[ue+j*C[2]+K*C[1]+k*C[0]]=w[ue+ae*v[2]+ie*v[1]+U*v[0]]}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}},pF={kernelName:Vc,backendName:"cpu",kernelFunc:function dF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;ve(r,"cumprod");const l=_t([a],r.shape.length);let u=r;null!=l&&(u=Sn({inputs:{x:r},backend:e,attrs:{perm:l}}));const c=Pt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Cn(u.dtype,"int32"),d=Ri(I(u.shape),h),p=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const b=g(y,x);if(0===x)d[b]=o?1:p[b];else{const w=g(y,x-1);d[b]=o?p[w]*d[w]:p[b]*d[w]}}const m=e.makeTensorInfo(u.shape,h,d);if(null!=l){const x=Sn({inputs:{x:m},backend:e,attrs:{perm:Ys(l)}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),x}return m}},mF={kernelName:qi,backendName:"cpu",kernelFunc:function fF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;ve(r,"cumsum");const l=_t([a],r.shape.length);let u=r;null!=l&&(u=Sn({inputs:{x:r},backend:e,attrs:{perm:l}}));const c=Pt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Cn(u.dtype,"int32"),d=tn(I(u.shape),h),p=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const b=g(y,x);if(0===x)d[b]=o?0:p[b];else{const w=g(y,x-1);d[b]=o?p[w]+d[w]:p[b]+d[w]}}const m=e.makeTensorInfo(u.shape,h,d);if(null!=l){const x=Sn({inputs:{x:m},backend:e,attrs:{perm:Ys(l)}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),x}return m}},yF={kernelName:zc,backendName:"cpu",kernelFunc:function gF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(1===r.shape.length){const c=ff(e.data.get(r.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,o);return e.makeTensorInfo([o],a.dtype,c)}if(2===r.shape.length){const c=H0(e.bufferSync(r),e.bufferSync(a),o,i);return e.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},bF={kernelName:Bc,backendName:"cpu",kernelFunc:function xF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:a,dataFormat:o}=s;S("NHWC"===o,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const i=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,d=u*a,p=c/(a*a),f=e.data.get(r.dataId).values,g=new Float32Array(i*h*d*p);let m=0;for(let y=0;y<i;++y)for(let x=0;x<h;++x){const b=Math.floor(x/a),w=x%a;for(let v=0;v<d;++v){const C=Math.floor(v/a),_=(w*a+v%a)*p;for(let $=0;$<p;++$)g[m++]=f[$+_+c*(C+u*(b+l*y))]}}return e.makeTensorInfo([i,h,d,p],r.dtype,g)}};function X0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s;ve([r,a],"depthwiseConv2DNative");const c=ke(r.shape),h=ke(a.shape);let d=l;null==d&&(d=[1,1]),S(sn(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const p=Xt(r.shape,a.shape,o,d,i,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:y,padInfo:x}=p,b=x.left,w=x.top,v=p.outChannels/p.inChannels,C=new nn(p.outShape,r.dtype),k=e.data.get(r.dataId).values,_=e.data.get(a.dataId).values,$=C.values;for(let E=0;E<p.batchSize;++E){const P=E*c[0],B=E*C.strides[0];for(let U=0;U<p.outHeight;++U){const G=B+U*C.strides[1],H=U*p.strideHeight-w;for(let K=0;K<f;++K){const X=H+K*m;if(X<0||X>=p.inHeight)continue;const j=K*h[0],Z=P+X*c[1];for(let ae=0;ae<p.outWidth;++ae){const ie=G+ae*C.strides[2],ue=ae*p.strideWidth-b;for(let le=0;le<g;++le){const ye=ue+le*y;if(ye<0||ye>=p.inWidth)continue;const xe=Z+ye*p.inChannels;let _e=ie,Pe=j+le*h[1];for(let Ae=0;Ae<p.inChannels;++Ae){const Ue=k[xe+Ae];for(let je=0;je<v;++je)$[_e+je]+=Ue*_[Pe+je];_e+=v,Pe+=v}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const wF={kernelName:Ki,backendName:"cpu",kernelFunc:X0},IF={kernelName:Wc,backendName:"cpu",kernelFunc:function vF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s;ve([r,a],"depthwiseConv2dNativeBackpropFilter");const h=Xt(r.shape,c,o,i,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new nn(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,b=h.outChannels/h.inChannels,w=e.data.get(r.dataId).values,v=new nn(r.shape,r.dtype,w),C=e.data.get(a.dataId).values,k=new nn(a.shape,a.dtype,C);for(let _=0;_<f;++_){const $=Math.max(0,Math.ceil((x-_)/d)),E=Math.min(h.outHeight,(h.inHeight+x-_)/d);for(let P=0;P<g;++P){const B=Math.max(0,Math.ceil((y-P)/p)),U=Math.min(h.outWidth,(h.inWidth+y-P)/p);for(let G=0;G<h.outChannels;++G){const H=Math.trunc(G/b),K=G%b;let X=0;for(let j=0;j<h.batchSize;++j)for(let Z=$;Z<E;++Z){const ae=_+Z*d-x;for(let ie=B;ie<U;++ie)X+=v.get(j,ae,P+ie*p-y,H)*k.get(j,Z,ie,G)}m.set(X,_,P,H,K)}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}},CF={kernelName:Uc,backendName:"cpu",kernelFunc:function SF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s;ve([r,a],"depthwiseConv2DNativeBackpropInput");const h=ke(r.shape),d=ke(a.shape),p=Xt(c,a.shape,o,i,l,u,!0),f=new nn(p.inShape,"float32"),g=f.values,[m,y,x]=f.strides,b=e.data.get(r.dataId).values,[w,v,C]=h,k=e.data.get(a.dataId).values,[_,$,E]=d,{batchSize:P,filterHeight:B,filterWidth:U,inChannels:G,inHeight:H,inWidth:K,outChannels:X,outHeight:j,outWidth:Z,strideHeight:ae,strideWidth:ie}=p,ue=B-1-p.padInfo.top,le=U-1-p.padInfo.left,ye=X/G;for(let ce=0;ce<P;++ce)for(let xe=0;xe<G;++xe)for(let _e=0;_e<H;++_e){const Pe=_e-ue,Ae=Math.max(0,Math.ceil(Pe/ae)),Ue=Math.min(j,(B+Pe)/ae);for(let je=0;je<K;++je){const lt=je-le,bt=Math.max(0,Math.ceil(lt/ie)),At=Math.min(Z,(U+lt)/ie);let wt=0;for(let ht=Ae;ht<Ue;++ht){const Et=ht*ae-Pe;for(let Nt=bt;Nt<At;++Nt){const on=w*ce+v*ht+C*Nt,pr=_*(B-1-Et)+$*(U-1-(Nt*ie-lt))+E*xe;for(let Mn=0;Mn<ye;++Mn)wt+=b[on+(xe*ye+Mn)]*k[pr+Mn]}}g[m*ce+y*_e+x*je+xe]=wt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}},kF={kernelName:"Diag",backendName:"cpu",kernelFunc:function NF(n){const{inputs:t,backend:e}=n,{x:s}=t,r=I(s.shape),a=e.data.get(s.dataId).values,o=Ge([r,r],s.dtype),i=o.values;for(let u=0;u<a.length;u++)i[u*r+u]=a[u];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,o.dtype,o.values)}},TF={kernelName:Xi,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:a,pad:o,dilations:i}=e,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:x,padInfo:b,strideHeight:w,strideWidth:v,filterHeight:C,filterWidth:k,dilationHeight:_,dilationWidth:$,outShape:E}=Go(s.shape,r.shape,a,o,"NHWC",i),P=I(E),B=E.length,U=pt(s.dtype,P);for(let H=0;H<p;++H)for(let K=0;K<y;++K){const X=K*w-b.top;for(let j=0;j<x;++j){const Z=j*v-b.left;for(let ae=0;ae<m;++ae){let ie=Number.MIN_SAFE_INTEGER;for(let le=0;le<C;++le){const ye=X+le*_;if(ye>=0&&ye<f)for(let ce=0;ce<k;++ce){const xe=Z+ce*$;if(xe>=0&&xe<g){const _e=Qn([H,ye,xe,ae],c,ke(s.shape)),Pe=Qn([le,ce,ae],d,ke(r.shape)),Ae=u[_e]+h[Pe];Ae>ie&&(ie=Ae)}}}U[Qn([H,K,j,ae],B,ke(E))]=ie}}}return{dataId:l.write(Gs(U,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}},_F={kernelName:Hc,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:a}=n,{strides:o,pad:i,dilations:l}=e,u=t,c=zn(s.shape,u.data.get(s.dataId).values),h=zn(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:k,dilationWidth:_,outShape:$}=Go(s.shape,r.shape,o,i,"NHWC",l);S(a.rank===$.length,()=>`Error in ${Hc}, dy must have the same rank as output ${$.length}, but got ${a.rank}`);const E=zn($,u.data.get(a.dataId).values),P=Nc(r.shape,r.dtype);for(let U=0;U<d;++U)for(let G=0;G<m;++G){const H=G*b-x.top;for(let K=0;K<y;++K){const X=K*w-x.left;for(let j=0;j<g;++j){let Z=Number.MIN_SAFE_INTEGER,ae=0,ie=0;for(let ue=0;ue<v;++ue){const le=H+ue*k;if(le>=0&&le<p)for(let ye=0;ye<C;++ye){const ce=X+ye*_;if(ce>=0&&ce<f){const xe=c[U][le][ce][j]+h[ue][ye][j];xe>Z&&(Z=xe,ae=ue,ie=ye)}}}P[ae][ie][j]+=E[U][G][K][j]}}}return{dataId:u.write(Gs(P,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},$F={kernelName:Gc,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:a}=n,{strides:o,pad:i,dilations:l}=e,u=t,c=zn(s.shape,u.data.get(s.dataId).values),h=zn(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:k,dilationWidth:_,outShape:$}=Go(s.shape,r.shape,o,i,"NHWC",l);S(a.rank===$.length,()=>`Error in ${Gc}, dy must have the same rank as output ${$.length}, but got ${a.rank}`);const E=zn($,u.data.get(a.dataId).values),P=Nc(s.shape,s.dtype);for(let U=0;U<d;++U)for(let G=0;G<m;++G){const H=G*b-x.top;for(let K=0;K<y;++K){const X=K*w-x.left;for(let j=0;j<g;++j){let Z=Number.MIN_SAFE_INTEGER,ae=H<0?0:H,ie=X<0?0:X;for(let ue=0;ue<v;++ue){const le=H+ue*k;if(le>=0&&le<p)for(let ye=0;ye<C;++ye){const ce=X+ye*_;if(ce>=0&&ce<f){const xe=c[U][le][ce][j]+h[ue][ye][j];xe>Z&&(Z=xe,ae=le,ie=ce)}}}P[U][ae][ie][j]+=E[U][G][K][j]}}}return{dataId:u.write(Gs(P,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},mf=Mt((n,t)=>n*t),EF=hf((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),Ju=Qt(fo,mf,EF),DF={kernelName:fo,backendName:"cpu",kernelFunc:Ju};function yi(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;let i;ve(r,"sum"),i="bool"===r.dtype?lr({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):Ns({inputs:{x:r},backend:e});const l=i.shape.length,u=$e(a,i.shape),c=_t(u,l);let h=u,d=i;null!=c&&(d=Sn({inputs:{x:i},backend:e,attrs:{perm:c}}),h=Pt(h.length,l)),rn("sum",h,d.shape.length);const[p,f]=Zt(d.shape,h);let m=Qu(e,p,Cn(d.dtype,"int32"));const y=I(f),x=e.data.get(m.dataId).values,b=e.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const v=w*y;let C=0;for(let k=0;k<y;++k)C+=b[v+k];x[w]=C}if(o){const v=m;m=xt({inputs:{x:m},backend:e,attrs:{shape:Ft(m.shape,u)}}),e.disposeIntermediateTensorInfo(v)}return e.disposeIntermediateTensorInfo(i),null!=c&&e.disposeIntermediateTensorInfo(d),m}const AF={kernelName:_l,backendName:"cpu",kernelFunc:yi},OF={kernelName:"Einsum",backendName:"cpu",kernelFunc:function RF(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=Zd(r,a.length);Qd(o.length,l,a);const{path:u,steps:c}=Jd(i,l),h=c.length;let d=null,p=o.length;const f=[];for(let g=0;g<h;++g){for(const m of c[g]){const{permutationIndices:y,expandDims:x}=Yd(p,l[m]);let b;ep(y)?b=a[m]:(b=Sn({inputs:{x:a[m]},backend:e,attrs:{perm:y}}),f.push(b));const w=b.shape.slice();for(let v=0;v<x.length;++v)w.splice(x[v],0,1);de(b.shape,w)||(b=xt({inputs:{x:b},backend:e,attrs:{shape:w}}),f.push(b)),null===d?d=b:(d=Ju({inputs:{a:b,b:d},backend:e}),f.push(d))}g<h-1&&(u[g]>=0&&(d=yi({inputs:{x:d},backend:e,attrs:{axis:u[g]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}},PF={kernelName:jc,backendName:"cpu",kernelFunc:function FF(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;ve([s,r],"eluGrad");const a=new Float32Array(I(r.shape)),o=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values;for(let l=0;l<o.length;++l){const u=o[l];a[l]=u>=0?i[l]:i[l]*(u+1)}return e.makeTensorInfo(r.shape,"float32",a)}},Z0=Mt((n,t)=>n===t?1:0),Y0=Qt(Zi,Z0,null,"bool"),LF={kernelName:Zi,backendName:"cpu",kernelFunc:Y0},VF=Wd,MF=Ud,zF=Gd,BF=Hd,WF=jd,UF=qd,GF=it(Ya,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+VF*e);return t*(1-((((UF*s+WF)*s+BF)*s+zF)*s+MF)*s*Math.exp(-e*e))}),HF={kernelName:Ya,backendName:"cpu",kernelFunc:GF},Q0=Cs(n=>Math.exp(n)),J0=ir(Qa,Q0,"float32"),jF={kernelName:Qa,backendName:"cpu",kernelFunc:J0};function ec(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice();let l=a;return a<0&&(S(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),xt({inputs:{x:r},backend:e,attrs:{shape:i}})}const qF={kernelName:Yi,backendName:"cpu",kernelFunc:ec},ew=Cs(n=>Math.expm1(n)),KF=ir(Ja,ew),XF={kernelName:Ja,backendName:"cpu",kernelFunc:KF},ZF=Mt((n,t)=>n/t),gf=Qt(Xa,ZF),yf={kernelName:Xa,backendName:"cpu",kernelFunc:gf},tw=Mt((n,t)=>n-t),YF=hf((n,t,e,s)=>({real:n-e,imag:t-s})),xf=Qt($o,tw,YF),QF={kernelName:$o,backendName:"cpu",kernelFunc:xf};function nw(n,t,e){const s=n.shape,r=s[0],a=s[1],o=e.data.get(n.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[r,a],c=I(u),h=rt("float32",c),d=rt("float32",c);for(let m=0;m<r;m++){const y=Gr({inputs:{x:i},backend:e,attrs:{begin:[m,0],size:[1,a]}}),x=Gr({inputs:{x:l},backend:e,attrs:{begin:[m,0],size:[1,a]}}),b=Tn({inputs:{real:y,imag:x},backend:e}),{real:w,imag:v}=JF(b,t,e),C=Ls(w,v);for(let k=0;k<a;k++){const _=Kd(C,k);h[m*a+k]=_.real,d[m*a+k]=_.imag}e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b)}const p=e.makeTensorInfo(u,"float32",h),f=e.makeTensorInfo(u,"float32",d),g=Tn({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),g}function JF(n,t,e){const s=I(n.shape),r=e.data.get(n.dataId),a=e.data.get(r.complexTensorInfos.real.dataId).values,o=e.data.get(r.complexTensorInfos.imag.dataId).values;if(function eP(n){return 0==(n&n-1)}(s)){const i=bf(a,o,s,t,e),l=[n.shape[0],n.shape[1]];if(t){const u=e.makeTensorInfo(l,"float32",i.real),c=e.makeTensorInfo(l,"float32",i.imag),h=e.makeTensorInfo([],"float32",Ts(s,"float32")),d=Ns({inputs:{x:h},backend:e}),p=yf.kernelFunc({inputs:{a:u,b:h},backend:e}),f=yf.kernelFunc({inputs:{a:c,b:d},backend:e}),g=e.data.get(p.dataId).values,m=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:g,imag:m}}return i}{const l=function tP(n,t,e){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){const l=sy(r*i,t,e),u=Kd(n,i);a+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}e&&(a/=t,o/=t),ty(s,a,o,r)}return s}(Ls(a,o),s,t);return Qg(l)}}function bf(n,t,e,s,r){if(1===e)return{real:n,imag:t};const a=Ls(n,t),o=e/2,i=Jg(a),l=i.real,u=i.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=Tn({inputs:{real:h,imag:d},backend:r}),f=ey(a),g=f.real,m=f.imag,y=[g.length],x=r.makeTensorInfo(y,"float32",g),b=r.makeTensorInfo(y,"float32",m),w=Tn({inputs:{real:x,imag:b},backend:r}),v=bf(l,u,o,s,r),C=v.real,k=v.imag,_=[C.length],$=r.makeTensorInfo(_,"float32",C),E=r.makeTensorInfo(_,"float32",k),P=Tn({inputs:{real:$,imag:E},backend:r}),B=bf(g,m,o,s,r),U=B.real,G=B.imag,H=[U.length],K=r.makeTensorInfo(H,"float32",U),X=r.makeTensorInfo(H,"float32",G),j=Tn({inputs:{real:K,imag:X},backend:r}),Z=ny(e,s),ae=[Z.real.length],ie=r.makeTensorInfo(ae,"float32",Z.real),ue=r.makeTensorInfo(ae,"float32",Z.imag),le=Tn({inputs:{real:ie,imag:ue},backend:r}),ye=Ju({inputs:{a:le,b:j},backend:r}),ce=wa({inputs:{a:P,b:ye},backend:r}),xe=xf({inputs:{a:P,b:ye},backend:r}),_e=Ur({inputs:{input:ce},backend:r}),Pe=Ur({inputs:{input:xe},backend:r}),Ae=va({inputs:{input:ce},backend:r}),Ue=va({inputs:{input:xe},backend:r}),je=Ia({inputs:[_e,Pe],backend:r,attrs:{axis:0}}),lt=Ia({inputs:[Ae,Ue],backend:r,attrs:{axis:0}}),bt=r.data.get(je.dataId).values,At=r.data.get(lt.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(ye),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(xe),r.disposeIntermediateTensorInfo(_e),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(Ue),r.disposeIntermediateTensorInfo(je),r.disposeIntermediateTensorInfo(lt),{real:bt,imag:At}}const sP={kernelName:"FFT",backendName:"cpu",kernelFunc:function nP(n){const{inputs:t,backend:e}=n,{input:s}=t,r=I(s.shape),a=s.shape[s.shape.length-1],i=xt({inputs:{x:s},backend:e,attrs:{shape:[r/a,a]}}),l=nw(i,!1,e),u=xt({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}};function wf(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:a}=e,o=a||yr(r),i=pt(o,I(s));return function aP(n,t,e){n.fill(t)}(i,r),t.makeTensorInfo(s,o,i)}const rP={kernelName:Kc,backendName:"cpu",kernelFunc:wf},oP={kernelName:Xc,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{image:s}=n,r=e,a=rt(s.dtype,I(s.shape)),[o,i,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<o;d++){const p=d*l*i*u;for(let f=0;f<i;f++){const g=f*(l*u);for(let m=0;m<l;m++){const y=m*u;for(let x=0;x<u;x++){const b=Math.round(l-m-1),w=p+g+y+x;let v=c[w];b>=0&&b<l&&(v=c[p+g+b*u+x]),a[w]=v}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},sw=Cs(n=>Math.floor(n)),iP=ir(eo,sw),lP={kernelName:eo,backendName:"cpu",kernelFunc:iP},rw=Mt((n,t)=>Math.floor(n/t)),uP=Qt(to,rw,null,"int32"),cP={kernelName:to,backendName:"cpu",kernelFunc:uP},dP={kernelName:Ll,backendName:"cpu",kernelFunc:function hP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=K0({inputs:{x:r,filter:a},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const m=g;if("NCHW"===c&&1===o.shape.length&&1!==o.shape[0]){const y=xt({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});g=wa({inputs:{a:g,b:y},backend:e}),e.disposeIntermediateTensorInfo(y)}else g=wa({inputs:{a:g,b:o},backend:e});e.disposeIntermediateTensorInfo(m)}if(p){const m=g;if("NCHW"===c&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const y=xt({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});g=Yu(e,g,p,y,f),e.disposeIntermediateTensorInfo(y)}else g=Yu(e,g,p,i,f);e.disposeIntermediateTensorInfo(m)}return g}},fP={kernelName:Vl,backendName:"cpu",kernelFunc:function pP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=X0({inputs:{x:r,filter:a},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const m=g;g=wa({inputs:{a:g,b:o},backend:e}),e.disposeIntermediateTensorInfo(m)}if(p){const m=g;g=Yu(e,g,p,i,f),e.disposeIntermediateTensorInfo(m)}return g}};function aw(n,t,e,s,r,a,o,i,l){const u=Ge([s,a],e);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=n[c*r+p];d+=f*o[p],h.push(f)}if(d<0||d>=l/a)throw new Error(`Invalid indices: ${h} does not index into ${i}`);for(let p=0;p<a;p++)u.values[c*a+p]=t.get(...t.indexToLoc(d*a+p))}return u}const gP={kernelName:Jf,backendName:"cpu",kernelFunc:function mP(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,a=I(s.shape),o=r.shape,i=o[o.length-1],[l,u,c,h]=Bd(s,r);if(0===u)return e.makeTensorInfo(l,s.dtype,[]);const f=aw(e.data.get(r.dataId).values,e.bufferSync(s),s.dtype,u,i,c,h,s.shape,a);return e.makeTensorInfo(l,s.dtype,f.values)}};function ow(n,t,e){const s=Ge(e,n.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r).slice(),u=t.locToIndex([o[0],o[2]]);o[2]=t.values[u];const c=n.locToIndex(o);0<=c&&c<n.values.length&&(s.values[r]=n.values[c])}return s}const xP={kernelName:Ji,backendName:"cpu",kernelFunc:function yP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;ve([r,a],"gatherV2");const l=$e(o,r.shape)[0],u=e.data.get(a.dataId).values,c=r.shape[l];for(let w=0;w<u.length;++w){const v=u[w];S(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let h=i;null==i&&(h=0);const d=I(a.shape),p=sp(r,a,l,h),f=xt({inputs:{x:r},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=xt({inputs:{x:a},backend:e,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=e.bufferSync(g),b=ow(e.bufferSync(f),y,m);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(p.outputShape,b.dtype,b.values)}},iw=Mt((n,t)=>n>t?1:0),bP=Qt(el,iw,null,"bool"),wP={kernelName:el,backendName:"cpu",kernelFunc:bP},lw=Mt((n,t)=>n>=t?1:0),vP=Qt(no,lw,null,"bool"),IP={kernelName:no,backendName:"cpu",kernelFunc:vP},CP={kernelName:Zc,backendName:"cpu",kernelFunc:function SP(n){const{inputs:t,backend:e}=n,{input:s}=t,r=I(s.shape),a=s.shape[s.shape.length-1],i=xt({inputs:{x:s},backend:e,attrs:{shape:[r/a,a]}}),l=nw(i,!0,e),u=xt({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}},NP=it(ro,n=>Number.isFinite(n)?1:0,"bool"),kP={kernelName:ro,backendName:"cpu",kernelFunc:NP},TP=it(ao,n=>Math.abs(n)===1/0?1:0,"bool"),_P={kernelName:ao,backendName:"cpu",kernelFunc:TP},$P=it(oo,n=>Number.isNaN(n)?1:0,"bool"),EP={kernelName:oo,backendName:"cpu",kernelFunc:$P},uw=Mt((n,t)=>n<t?1:0),DP=Qt(nl,uw,null,"bool"),AP={kernelName:nl,backendName:"cpu",kernelFunc:DP},cw=Mt((n,t)=>n<=t?1:0),RP=Qt(sl,cw,null,"bool"),OP={kernelName:sl,backendName:"cpu",kernelFunc:RP};function hw(n,t,e){const s=(t-n)/(e-1),r=tn(e,"float32");r[0]=n;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}const PP={kernelName:em,backendName:"cpu",kernelFunc:function FP(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:a}=e,o=hw(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}},dw=Cs(n=>Math.log(n)),LP=ir(lo,dw),VP={kernelName:lo,backendName:"cpu",kernelFunc:LP},MP=it(uo,n=>Math.log1p(n)),zP={kernelName:uo,backendName:"cpu",kernelFunc:MP},BP=Mt((n,t)=>n&&t),WP=Qt(rl,BP,null,"bool"),UP={kernelName:rl,backendName:"cpu",kernelFunc:WP},GP=it(al,n=>n?0:1,"bool"),HP={kernelName:al,backendName:"cpu",kernelFunc:GP},jP=Mt((n,t)=>n||t),qP=Qt(ol,jP,null,"bool"),KP={kernelName:ol,backendName:"cpu",kernelFunc:qP},ZP={kernelName:il,backendName:"cpu",kernelFunc:function XP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;ve(r,"LRN");const u=r.shape[3],c=u-1,h=e.data.get(r.dataId).values,d=I(r.shape),p=new Float32Array(d);function f(g){const m=g%u;let y=g-m+Math.max(0,m-a);const x=g-m+Math.min(m+a,c);let b=0;for(;y<=x;y++){const w=h[y];b+=w*w}return b}for(let g=0;g<d;g++){const m=f(g),y=h[g]*Math.pow(o+i*m,-l);p[g]=y}return e.makeTensorInfo(r.shape,r.dtype,p)}},QP={kernelName:Qc,backendName:"cpu",kernelFunc:function YP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s;ve(o,"LRNGrad");const h=I(o.shape),d=o.shape[3],p=e.data.get(o.dataId).values,f=e.data.get(r.dataId).values,g=e.data.get(a.dataId).values,m=new Float32Array(h),y=h;for(let x=0;x<y;x++){const b=x%d,w=x-b+Math.max(0,b-i),v=x-b+Math.min(d,b+i+1);let C=0;for(let k=w;k<v;k++)C+=Math.pow(f[k],2);C=u*C+l;for(let k=w;k<v;k++){let _=-2*u*c*f[k]*g[x]/C;x===k&&(_+=Math.pow(C,-c)),_*=p[x],m[k]+=_}}return e.makeTensorInfo(o.shape,r.dtype,m)}};function pw(n,t,e,s){const r=rt(s,I(e));for(let a=0;a<r.length;++a){const o=a*t;let i=n[o];for(let l=0;l<t;++l){const u=n[o+l];(Number.isNaN(u)||u>i)&&(i=u)}r[a]=i}return r}function fw(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=e;let l=r.shape;const u=l.length,c=$e(a,l);let h=c;const d=_t(h,u);let p=i.data.get(r.dataId).values;if(null!=d){const w=new Array(u);for(let v=0;v<w.length;v++)w[v]=l[d[v]];p=df(p,l,r.dtype,d,w),h=Pt(h.length,u),l=w}ve(r,"max"),rn("max",h,u);const[f,g]=Zt(l,h),y=pw(p,I(g),f,r.dtype),x=i.write(y,f,r.dtype);let b=f;return o&&(b=Ft(f,c)),{dataId:x,shape:b,dtype:r.dtype}}const JP={kernelName:ll,backendName:"cpu",kernelFunc:fw},mw=Mt((n,t)=>Math.max(n,t)),eL=Qt(co,mw),tL={kernelName:co,backendName:"cpu",kernelFunc:eL},sL={kernelName:ul,backendName:"cpu",kernelFunc:function nL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;ve(r,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s;S(sn(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=Wn(r.shape,a,o,1,i,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&de(c.inShape,c.outShape))h=Ns({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=ke(r.shape),f=pf(d,0,r.dtype,p,c,"max");h=e.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}},aL={kernelName:cl,backendName:"cpu",kernelFunc:function rL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;ve(r,"maxPool3d");const c=Ds(r.shape,a,o,1,i,l,u),d=U0(e.data.get(r.dataId).values,0,r.dtype,ke(r.shape),c,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}},iL={kernelName:eh,backendName:"cpu",kernelFunc:function oL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;ve([r,a],"maxPool3DGrad");const c=Ds(a.shape,o,i,1,l,u),d=function CO(n,t){const e=Ge(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let y=0;y<t.outDepth;++y){const x=y*s-d;let b=x;for(;b<0;)b+=o;const w=Math.min(t.inDepth,u+x);for(let v=0;v<t.outHeight;++v){const C=v*r-p;let k=C;for(;k<0;)k+=i;const _=Math.min(t.inHeight,c+C);for(let $=0;$<t.outWidth;++$){const E=$*a-f;let P=E;for(;P<0;)P+=l;const B=Math.min(t.inWidth,h+E);let U=Number.NEGATIVE_INFINITY,G=-1;for(let H=b;H<w;H+=o){const K=H-x;for(let X=k;X<_;X+=i){const j=X-C;for(let Z=P;Z<B;Z+=l){const ae=Z-E,ie=n.get(g,H,X,Z,m);ie>=U&&(U=ie,G=K*c*h+j*c+ae)}}}e.set(G,g,y,v,$,m)}}}return e}(e.bufferSync(a),c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,C=b-1-c.padInfo.front,k=v-1-c.padInfo.left,_=w-1-c.padInfo.top,$=Ge(a.shape,"float32"),E=e.bufferSync(r);for(let P=0;P<c.batchSize;++P)for(let B=0;B<c.inChannels;++B)for(let U=0;U<c.inDepth;++U)for(let G=0;G<c.inHeight;++G)for(let H=0;H<c.inWidth;++H){const K=U-C,X=G-_,j=H-k;let Z=0;for(let ae=0;ae<b;ae+=m){const ie=(K+ae)/p;if(!(ie<0||ie>=c.outDepth||Math.floor(ie)!==ie))for(let ue=0;ue<w;ue+=y){const le=(X+ue)/f;if(!(le<0||le>=c.outHeight||Math.floor(le)!==le))for(let ye=0;ye<v;ye+=x){const ce=(j+ye)/g;if(ce<0||ce>=c.outWidth||Math.floor(ce)!==ce)continue;const Pe=b*w*v-1-d.get(P,ie,le,ce,B)===ae*w*v+ue*v+ye?1:0;0!==Pe&&(Z+=E.get(P,ie,le,ce,B)*Pe)}}}$.set(Z,P,U,G,H,B)}return e.makeTensorInfo($.shape,$.dtype,$.values)}},uL={kernelName:Jc,backendName:"cpu",kernelFunc:function lL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a,output:o}=t,i=a;ve([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Wn(i.shape,l,u,1,c,h),p=e.data.get(i.dataId).values,f=Ge(d.outShape,i.dtype,W0(p,i.shape,i.dtype,d).values),g=d.strideHeight,m=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,C=b-1-d.padInfo.top,k=Ge(i.shape,"float32"),_=e.data.get(r.dataId).values,$=Ge(r.shape,"float32",_);for(let E=0;E<d.batchSize;++E)for(let P=0;P<d.inChannels;++P)for(let B=0;B<d.inHeight;++B)for(let U=0;U<d.inWidth;++U){const G=B-C,H=U-v;let K=0;for(let X=0;X<b;X+=y){const j=(G+X)/g;if(!(j<0||j>=d.outHeight||Math.floor(j)!==j))for(let Z=0;Z<w;Z+=x){const ae=(H+Z)/m;if(ae<0||ae>=d.outWidth||Math.floor(ae)!==ae)continue;const le=b*w-1-f.get(E,j,ae,P)===X*w+Z?1:0;0!==le&&(K+=$.get(E,j,ae,P)*le)}}k.set(K,E,B,U,P)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}},hL={kernelName:tm,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=e;ve(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Wn(s.shape,r,a,[1,1],o),[h,d]=function cL(n,t,e,s,r){const o=pf(n,0,e,ke(t),r,"max"),i=W0(n,t,e,r,!0,s);return[o.values,i.values]}(u,s.shape,s.dtype,i,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},pL={kernelName:hl,backendName:"cpu",kernelFunc:function dL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=$e(a,r.shape),c=I(Zt(r.shape,i)[1]),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=lr({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});h.push(p);const f=gf({inputs:{a:p,b:d},backend:e});h.push(f);const g=yi({inputs:{x:f},backend:e,attrs:{axis:a,keepDims:o}});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),g}},mL={kernelName:dl,backendName:"cpu",kernelFunc:function fL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"min");const i=$e(a,r.shape);let l=i;const u=_t(l,r.shape.length);let c=r;null!=u&&(c=Sn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Pt(l.length,r.shape.length)),rn("min",l,c.shape.length);const[h,d]=Zt(c.shape,l),p=I(d),f=tn(I(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let b=g[x];for(let w=0;w<p;++w){const v=g[x+w];(Number.isNaN(v)||v<b)&&(b=v)}f[y]=b}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(o){const x=xt({inputs:{x:m},backend:e,attrs:{shape:Ft(h,i)}});return e.disposeIntermediateTensorInfo(m),x}return m}},gw=Mt((n,t)=>Math.min(n,t)),gL=Qt(ho,gw),yL={kernelName:ho,backendName:"cpu",kernelFunc:gL},bL={kernelName:pl,backendName:"cpu",kernelFunc:function xL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:a,mode:o}=s;ve(r,"mirrorPad");const i=a.map((b,w)=>b[0]+r.shape[w]+b[1]),l=a.map(b=>b[0]),u=a.map((b,w)=>b[0]+r.shape[w]),c="reflect"===o?0:1,h=e.data.get(r.dataId).values,d=r.shape.length,p=ke(r.shape),f=I(i),g=i.length,m=ke(i),y=rt(r.dtype,f);for(let b=0;b<f;b++){let w=xr(b,g,m);for(let C=0;C<g;C++)w[C]<l[C]?w[C]=2*l[C]-w[C]-c:w[C]>=u[C]&&(w[C]=2*(u[C]-1)-w[C]+c);w=w.map((C,k)=>C-l[k]);const v=Qn(w,d,p);y[b]=h[v]}return{dataId:e.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},wL=Mt((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),vL=Qt(po,wL),IL={kernelName:po,backendName:"cpu",kernelFunc:vL};function yw(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:a}=s,o=r.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const l=$e([i],r.shape),u=fw({inputs:{x:r},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),c=Ft(u.shape,l),h=xt({inputs:{x:u},backend:e,attrs:{shape:c}}),d=xf({inputs:{a:r,b:h},backend:e}),p=J0({inputs:{x:d},backend:e}),f=yi({inputs:{x:p},backend:e,attrs:{axis:l,keepDims:!1}}),g=xt({inputs:{x:f},backend:e,attrs:{shape:c}}),m=gf({inputs:{a:p,b:g},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}const SL={kernelName:Dl,backendName:"cpu",kernelFunc:yw},NL={kernelName:nm,backendName:"cpu",kernelFunc:function CL(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;ve(r,"multinomial");const l=i?r:yw({inputs:{logits:r},backend:e,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=e.data.get(l.dataId).values,d=[u,a],p=tn(I(d),"int32");for(let f=0;f<u;++f){const g=f*c,m=new Float32Array(c-1);m[0]=h[g];for(let b=1;b<m.length;++b)m[b]=m[b-1]+h[g+b];const y=xd.alea(o.toString()),x=f*a;for(let b=0;b<a;++b){const w=y();p[x+b]=m.length;for(let v=0;v<m.length;v++)if(w<m[v]){p[x+b]=v;break}}}return i||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",p)}};function xw(n,t,e){const s=Ts(-1,e);return mf([],t,s,n,e)}const TL={kernelName:fl,backendName:"cpu",kernelFunc:function kL(n){const{inputs:t,backend:e}=n,{x:s}=t;ve(s,"neg");const r=e.data.get(s.dataId).values,[a,o]=xw(r,s.shape,s.dtype);return e.makeTensorInfo(o,s.dtype,a)}},_L=$d,EL={kernelName:th,backendName:"cpu",kernelFunc:function $L(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;ve(r,"NonMaxSuppression");const u=e.data.get(r.dataId).values,c=e.data.get(a.dataId).values,{selectedIndices:h}=_L(u,c,o,i,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},DL=Ed,RL={kernelName:nh,backendName:"cpu",kernelFunc:function AL(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s;ve(r,"NonMaxSuppressionPadded");const c=e.data.get(r.dataId).values,h=e.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=DL(c,h,o,i,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}},OL=Dd,PL={kernelName:sh,backendName:"cpu",kernelFunc:function FL(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s;ve(r,"NonMaxSuppressionWithScore");const c=e.data.get(r.dataId).values,h=e.data.get(a.dataId).values,d=o,p=i,f=l,g=u,{selectedIndices:m,selectedScores:y}=OL(c,h,d,p,f,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},bw=Mt((n,t)=>n!==t?1:0),LL=Qt(ml,bw,null,"bool"),VL={kernelName:ml,backendName:"cpu",kernelFunc:LL},zL={kernelName:yl,backendName:"cpu",kernelFunc:function ML(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:a,depth:o,onValue:i,offValue:l}=s;ve(r,"oneHot");const u=I(r.shape),c=new Float32Array(u*o);c.fill(l);const h=e.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<o&&(c[d*o+h[d]]=i);return e.makeTensorInfo([...r.shape,o],a,c)}};function tc(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const r=Ur({inputs:{input:s},backend:e}),a=tc({inputs:{x:r},backend:e}),o=va({inputs:{input:s},backend:e}),i=tc({inputs:{x:o},backend:e}),l=Tn({inputs:{real:a,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),l}return wf({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const BL={kernelName:Fl,backendName:"cpu",kernelFunc:tc},WL={kernelName:gl,backendName:"cpu",kernelFunc:function ww(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const r=Ur({inputs:{input:s},backend:e}),a=ww({inputs:{x:r},backend:e}),o=va({inputs:{input:s},backend:e}),i=tc({inputs:{x:o},backend:e}),l=Tn({inputs:{real:a,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),l}return wf({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function vw(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(1===t.length)return ec({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const a=t[0].shape,o=t[0].dtype;t.forEach(c=>{ee(a,c.shape,"All tensors passed to stack must have matching shapes"),S(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=Ia({inputs:t.map(c=>{const h=ec({inputs:{input:c},backend:e,attrs:{dim:r}});return i.push(h),h}),backend:e,attrs:{axis:r}});return i.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}const UL={kernelName:xl,backendName:"cpu",kernelFunc:vw},Iw={kernelName:bl,backendName:"cpu",kernelFunc:function GL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:a,constantValue:o}=s;ve(r,"pad");const i=a.map((x,b)=>x[0]+r.shape[b]+x[1]),l=a.map(x=>x[0]),u=e.data.get(r.dataId).values,c=I(r.shape),h=r.shape.length,d=ke(r.shape),p=I(i),f=i.length,g=ke(i),m=rt(r.dtype,p);0!==o&&m.fill(o);for(let x=0;x<c;x++)m[Qn(xr(x,h,d).map((C,k)=>C+l[k]),f,g)]=u[x];return{dataId:e.write(m,i,r.dtype),shape:i,dtype:r.dtype}}},HL=Mt((n,t)=>Math.pow(n,t)),jL=Qt(mo,HL),qL={kernelName:mo,backendName:"cpu",kernelFunc:jL};function Sw(n,t,e,s){const[r,a]=Zt(n,s),o=Cn(t,"int32"),i=tn(I(r),o),l=I(a);for(let u=0;u<i.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=e[c+d];i[u]=h}return{outVals:i,outShape:r,outDtype:o}}const XL={kernelName:vl,backendName:"cpu",kernelFunc:function KL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"prod");const i=r.shape.length,l=$e(a,r.shape),u=_t(l,i);let c=l,h=r;const d=[];null!=u&&(h=Sn({inputs:{x:r},backend:e,attrs:{perm:u}}),d.push(h),c=Pt(c.length,i));const p=e.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=Sw(h.shape,h.dtype,p,c);let y=g;return o&&(y=Ft(g,l)),d.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(y,m,f)}};function Cw(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function Nw(n,t,e,s,r,a,o,i){if(0===n.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function ZL(n,t,e){n.forEach((s,r)=>{if(s<0||s>=e){const a=xr(r,t.length,ke(t)).join(",");throw new Error(`indices[${a}] = ${s} is not in [0, ${e})`)}})}(a,o,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=function QL(n,t,e,s){const r=[];let a=0;const i=new Array(t.length-1+e.length).fill(null).map(()=>[0]);!function YL(n,t){for(let e=0;e<n.length;++e){const s=n[e],r=e===n.length-1?t:n[e+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let a=1;a<s.length;++a)if(s[a-1]>s[a])throw new Error("Ragged splits must be sorted in ascending order")}}(e,s);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const c=t[u+1];for(let h=1;h<l+1;++h)i[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<e.length;++d){const p=e[d],f=d+t.length-1;if(f>=0){const g=i[f],m=g[g.length-1]-p[c];for(let y=c;y<h;++y)i[f].push(p[y+1]+m)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),a+=h-c)}return{outSplits:i,valueSlices:r,numValues:a}}(a,o,n,u),p=function JL(n){const t=[];for(let e=0;e<n.length;++e){const r=pt("int32",n[e].length);t.push(r),n[e].forEach((a,o)=>r[o]=a)}return t}(c),f=function tV(n,t,e,s,r){const a=t.slice();a[0]=r;const o=pt(e,I(a)),i=n.length;return function eV(n,t,e,s,r,a){const o=Cw(t,2)[1],i=Cw(a,2)[1];let l=0;for(const u of e)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[l*i+h]=n[c*o+h];++l}}(n,t,s,0===i?0:i/t[0],o,a),[o,a]}(e,s,r,h,d);return[p,f[0],f[1]]}const sV={kernelName:sm,backendName:"cpu",kernelFunc:function nV(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:a,indices:o}=t,l=r.map(y=>e.data.get(y.dataId).values),u=r.map(y=>y.shape),c=e.data.get(a.dataId).values,h=e.data.get(o.dataId).values,[d,p,f]=Nw(l,u,c,a.shape,a.dtype,h,o.shape),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),m=e.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},kw=2147483647;function Tw(n,t,e,s,r,a,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,l=0===r.length,u=0===o.length,c=[];i||c.push(t[0]),l||c.push(r[0]),u||c.push(o[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=pt("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const y=i?n[0]:n[m],x=l?s[0]:s[m],b=u?a[0]:a[m];if(0===b)throw new Error("Requires delta != 0");let w;if(b>0&&x<y||b<0&&x>y)w=0;else if(w=Math.ceil(Math.abs((x-y)/b)),w>kw)throw new Error(`Requires ((limit - start) / delta) <= ${kw}`);d[m+1]=d[m]+w}const f=pt(e,d[h]);let g=0;for(let m=0;m<h;++m){const y=d[m+1]-d[m];let x=i?n[0]:n[m];const b=u?a[0]:a[m];for(let w=0;w<y;++w)f[g++]=x,x+=b}return[d,f]}const aV={kernelName:rm,backendName:"cpu",kernelFunc:function rV(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:a}=t,o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(a.dataId).values,[u,c]=Tw(o,s.shape,s.dtype,i,r.shape,l,a.shape);return[e.makeTensorInfo([u.length],"int32",u),e.makeTensorInfo([c.length],s.dtype,c)]}};var Zn=jn;class nc{constructor(t,e,s,r,a,o,i,l,u,c){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=r,this.valuesDType=a,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Kg(c),this.raggedRank=Xg(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Zn.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Zn.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Zn.VALUE_ROWIDS:return nc.getMaxWidthValueRowID(e);case Zn.ROW_SPLITS:return nc.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Zn[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let s=0;for(let r=0;r<e-1;++r){const a=t[r+1]-t[r];a>s&&(s=a)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let s=0,r=t[0],a=0;for(let o=1;o<e;++o){const i=t[o];i!==r&&(r=i,a=Math.max(o-s,a),s=o)}return Math.max(e-s,a)}tensorShapeFromTensor(t,e,s=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return $w(t,s)}calculateOutputSize(t){const e=this.valuesShape;Zg(this.defaultValueShape,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=qg(this.raggedRank,r,e);o[0]<0&&(o[0]=t);for(let i=1;i<=this.raggedRank;++i)o[i]<0&&(o[i]=this.getMaxWidth(i));return o}calculateFirstParentOutputIndex(t,e,s){const r=Math.min(t,s),a=[];let o=0;for(let i=0;i<r;++i,o+=e)a.push(o);for(let i=r;i<t;++i)a.push(-1);return S(a.length===t,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(t,e,s,r){const a=t.length,o=[];for(let i=0;i<a-1;++i){const l=t[i+1]-t[i];let u=Math.min(r,l),c=e[i];-1===c&&(u=0);for(let h=0;h<u;++h)o.push(c),c+=s;for(let h=0;h<l-u;++h)o.push(-1)}if(a>0&&o.length!==t[a-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,s,r){const a=t.length,o=[];if(0===a)return[];let i=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];o.push(u);for(let c=1;c<a;++c){const h=t[c];if(h===l)u>=0&&(++i,i<r?u+=s:u=-1);else{if(i=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);u=e[h]}o.push(u)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,s,r){const a=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case Zn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,e,s,r);case Zn.ROW_SPLITS:if(a.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(a,e,s,r);default:throw new Error(`Unsupported partition type: ${Zn[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Zn.FIRST_DIM_SIZE:return t[0];case Zn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Zn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Zn[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const a=$w(s,!1),o=pt(this.valuesDType,I(a));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(e,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,o,a)}return[a,o]}setOutput(t,e,s,r){if(0===s.length)return;const a=this.values,o=s;let i=r.slice();i=i.slice(t+1);const l=I(i),u=e.length;let c=this.defaultValue;if(c.length!==l&&1!==c.length){const f=this.defaultValueShape;V(()=>{const g=F(c,f);c=qo(g,i).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let g=f<u?e[f]:-1;if(g!==p){if(d<p){const m=a.subarray(h*l);_w(o.subarray(d*l),m,(p-d)*l)}if(f>=u&&(g=Math.floor(s.length/l)),g>p)if(1===this.defaultValue.length)o.subarray(p*l,g*l).fill(this.defaultValue[0]),p=g;else for(;g>p;)_w(o.slice(p*l),c,l),++p;g<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}else++p}}}function _w(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function $w(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function Ew(n,t,e,s,r,a,o,i,l,u){return new nc(n,t,e,s,r,a,o,i,l,u).compute()}const iV={kernelName:am,backendName:"cpu",kernelFunc:function oV(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=s,u=e.data.get(r.dataId).values,c=e.data.get(a.dataId).values,h=e.data.get(o.dataId).values,d=i.map(m=>e.data.get(m.dataId).values),p=i.map(m=>m.shape),[f,g]=Ew(u,r.shape,c,a.shape,a.dtype,h,o.shape,d,p,l);return e.makeTensorInfo(f,a.dtype,g)}};function Dw(n,t,e,s){if(n===t||n<t&&e<0||t<n&&e>1)return tn(0,s);const l=tn(Math.abs(Math.ceil((t-n)/e)),s);t<n&&1===e&&(e=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}const uV={kernelName:rh,backendName:"cpu",kernelFunc:function lV(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:a,step:o}=e,i=Dw(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}},cV=it(go,n=>1/n),hV={kernelName:go,backendName:"cpu",kernelFunc:cV},pV={kernelName:Cl,backendName:"cpu",kernelFunc:function dV(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;ve(r,"resizeBilinear");const l=ke(r.shape),[u,c]=i,[h,d,p,f]=r.shape,g=e.data.get(r.dataId).values,m=new Float32Array(I([h,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c];let b=0;const w=y[0]/x[0],v=y[1]/x[1];for(let C=0;C<h;C++)for(let k=0;k<u;k++){let _;_=o?w*(k+.5)-.5:w*k;const $=Math.max(0,Math.floor(_)),E=_-$,P=Math.min(d-1,Math.ceil(_)),B=C*l[0]+$*l[1],U=C*l[0]+P*l[1];for(let G=0;G<c;G++){let H;H=o?v*(G+.5)-.5:v*G;const K=Math.max(0,Math.floor(H)),X=H-K,j=Math.min(p-1,Math.ceil(H)),Z=B+K*l[2],ae=U+K*l[2],ie=B+j*l[2],ue=U+j*l[2];for(let le=0;le<f;le++){const ye=g[Z+le],ce=g[ae+le],Pe=ye+(g[ie+le]-ye)*X;m[b++]=Pe+(ce+(g[ue+le]-ce)*X-Pe)*E}}}return e.makeTensorInfo([h,u,c,f],"float32",m)}},mV={kernelName:ih,backendName:"cpu",kernelFunc:function fV(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:a}=t,{alignCorners:o}=s;ve([a,r],"resizeBilinearGrad");const i=ke(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),g=[o&&d>1?u-1:u,o&&p>1?c-1:c],m=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=g[0]/m[0],x=g[1]/m[1],b=e.data.get(a.dataId).values;let w=0;for(let v=0;v<l;v++){const C=v*i[0];for(let k=0;k<d;k++){const _=k*y,$=Math.floor(_),E=Math.min(Math.ceil(_),u-1),P=C+$*i[1],B=C+E*i[1],U=_-$,G=1-U;for(let H=0;H<p;H++){const K=H*x,X=Math.floor(K),j=Math.min(Math.ceil(K),c-1),Z=K-X,ae=1-Z,ie=P+X*i[2],ue=P+j*i[2],le=B+X*i[2],ye=B+j*i[2],ce=G*ae,xe=G*Z,_e=U*ae,Pe=U*Z;for(let Ae=0;Ae<h;Ae++){const Ue=b[w++];f[ie+Ae]+=Ue*ce,f[ue+Ae]+=Ue*xe,f[le+Ae]+=Ue*_e,f[ye+Ae]+=Ue*Pe}}}}return e.makeTensorInfo([l,c,u,h],"float32",f)}},yV={kernelName:Sl,backendName:"cpu",kernelFunc:function gV(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;ve(r,"resizeNearestNeighbor");const l=ke(r.shape),[u,c]=i,[h,d,p,f]=r.shape,g=e.data.get(r.dataId).values,m=new Float32Array(h*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],b=y[0]/x[0],w=y[1]/x[1];let v=0;for(let C=0;C<h;C++){const k=C*l[0];for(let _=0;_<u;_++){const $=o?b*(_+.5):b*_;let E=Math.min(d-1,a?Math.round($):Math.floor($));o&&(E=Math.max(0,E));const P=k+E*l[1];for(let B=0;B<c;B++){const U=o?w*(B+.5):w*B;let G=Math.min(p-1,a?Math.round(U):Math.floor(U));o&&(G=Math.max(0,G));const H=P+G*l[2];for(let K=0;K<f;K++)m[v++]=g[H+K]}}}return e.makeTensorInfo([h,u,c,f],r.dtype,m)}},bV={kernelName:oh,backendName:"cpu",kernelFunc:function xV(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:a}=t,{alignCorners:o}=s;ve([a,r],"resizeNearestNeighborGrad");const i=ke(r.shape),l=ke(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,g=new Float32Array(u*c*h*d),m=e.data.get(a.dataId).values,y=[o&&p>1?c-1:c,o&&f>1?h-1:h],x=[o&&p>1?p-1:p,o&&f>1?f-1:f],b=y[0]/x[0],w=y[1]/x[1],v=1/b,C=1/w,k=2*Math.ceil(v)+2,_=2*Math.ceil(C)+2;for(let $=0;$<u;$++){const E=$*i[0];for(let P=0;P<c;P++){const B=E+P*i[1],U=Math.floor(P*v),G=Math.floor(U-k/2);for(let H=0;H<h;H++){const K=B+H*i[2],X=Math.floor(H*C),j=Math.floor(X-_/2);for(let Z=0;Z<d;Z++){let ae=0;for(let ie=0;ie<k;ie++){const ue=ie+G;if(ue<0||ue>=p)continue;const le=E+ue*l[1],ye=ue*b;if(P===Math.min(c-1,o?Math.round(ye):Math.floor(ye)))for(let xe=0;xe<_;xe++){const _e=xe+j;if(_e<0||_e>=f)continue;const Pe=le+_e*l[2],Ae=_e*w;H===Math.min(h-1,o?Math.round(Ae):Math.floor(Ae))&&(ae+=m[Pe+Z])}}g[K+Z]=ae}}}}return e.makeTensorInfo(r.shape,r.dtype,g)}},vV={kernelName:Nl,backendName:"cpu",kernelFunc:function wV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:a}=s;ve(r,"reverse");const o=r.shape.length,i=$e(a,r.shape);if(0===o)return Ns({inputs:{x:r},backend:e});const l=new nn(r.shape,r.dtype),u=e.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();i.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}},IV={kernelName:vh,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:a,center:o}=t,i=e,l=rt(s.dtype,I(s.shape)),[u,c,h,d]=s.shape,[p,f]=Vd(o,c,h),m=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let w=0;w<u;w++){const v=w*h*c*d;for(let C=0;C<c;C++){const k=C*(h*d);for(let _=0;_<h;_++){const $=_*d;for(let E=0;E<d;E++){const P=[u,C,_,E],B=P[2],U=P[1];let G=(B-p)*y-(U-f)*m,H=(B-p)*m+(U-f)*y;G=Math.round(G+p),H=Math.round(H+f);let K=a;"number"!=typeof a&&(K=3===E?255:a[E]),G>=0&&G<h&&H>=0&&H<c&&(K=x[v+H*(h*d)+G*d+E]),l[v+k+$+E]=K}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},SV=it(bo,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2==0?t:t+1}),CV={kernelName:bo,backendName:"cpu",kernelFunc:SV},Aw=Cs(n=>1/Math.sqrt(n)),NV=ir(wo,Aw),kV={kernelName:wo,backendName:"cpu",kernelFunc:NV};function Hr(n,t,e,s,r,a,o,i,l,u){const c=[s/r,r],h=n.values,d=t.values;if(0===s)return Ge(e,t.dtype);const p=l instanceof nn?l:Ge(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let f=0;f<a;f++){const g=[];let m=0;for(let y=0;y<o;y++){const x=h[f*o+y];g.push(x),m+=x*i[y]}if(m<0||m>=s/r)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let y=0;y<r;y++)u?p.values[m*r+y]+=d[f*r+y]:p.values[m*r+y]=0===t.rank?d[0]:d[f*r+y]}return p}const _V={kernelName:om,backendName:"cpu",kernelFunc:function TV(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rr(0,r,o),g=Hr(e.bufferSync(r),e.bufferSync(a),o,h,u,l,i,c,0,!0);return e.makeTensorInfo(o,g.dtype,g.values)}};function $V(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<t?e=r+1:s=r;return s}function EV(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<=t?e=r+1:s=r;return s}const RV={kernelName:lm,backendName:"cpu",kernelFunc:function AV(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:a}=t,{side:o}=s,u=function DV(n,t,e,s,r,a){const o=pt("int32",e*r);for(let i=0;i<e;++i){const l=n.slice(i*s,(i+1)*s),u=i*r;for(let c=0;c<r;++c)o[u+c]="left"===a?$V(l,t[c+u]):EV(l,t[c+u])}return o}(e.data.get(r.dataId).values,e.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],o);return e.makeTensorInfo(a.shape,"int32",u)}},FV={kernelName:kl,backendName:"cpu",kernelFunc:function OV(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:a}=t;ve([s,r,a],"select");const o=s.shape.length,i=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,u=e.data.get(a.dataId).values,c=Cn(r.dtype,a.dtype),h=tn(I(r.shape),c);let d=0;const p=0===o||o>1||1===r.shape.length?1:I(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let g=0;g<p;g++)h[d++]=1===i[f]?l[f]:u[f];return e.makeTensorInfo(r.shape,c,h)}},PV=fu,LV=mu,VV=it(vo,n=>n>=0?LV*n:PV*(Math.exp(n)-1)),MV={kernelName:vo,backendName:"cpu",kernelFunc:VV},zV=it(Co,n=>n<0?-1:n>0?1:0),BV={kernelName:Co,backendName:"cpu",kernelFunc:zV},WV=it(Io,n=>Math.sin(n)),UV={kernelName:Io,backendName:"cpu",kernelFunc:WV},GV=it(So,n=>Math.sinh(n)),HV={kernelName:So,backendName:"cpu",kernelFunc:GV},Rw=Math.log(1.1920928955078125e-7)+2,jV=it(ko,n=>{const t=n>-Rw,e=n<Rw,s=Math.exp(n);let r;return r=e?s:t?n:Math.log(1+s),r}),qV={kernelName:ko,backendName:"cpu",kernelFunc:jV},XV={kernelName:$l,backendName:"cpu",kernelFunc:function KV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:a,paddings:o}=s;ve([r],"spaceToBatchND");const i=I(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<r.shape.length;++C)l.push([0,0]);const u=Iw.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),c=Jo(u.shape,a,i,!1),h=ei(c.length,a.length,!1),d=ti(u.shape,a,i,!1),g=xt({inputs:{x:u},backend:e,attrs:{shape:c}}),x=Sn({inputs:{x:g},backend:e,attrs:{perm:h}}),v=xt({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),v}};function Ow(n,t,e,s,r,a,o){const i=t[0],l=a[0],u=new Array(l),c=new Array(i),h=t[1];if(0===l){if(0!==i)throw new Error(oy(i));return[pt(e,0),[0,h],pt(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let m=0;m<i;++m){const y=n[m*h];if(y<0)throw new Error(iy(m,y));if(y>=l)throw new Error(ly(m,y,l));++f[y],d=d&&y>=p,p=y}let g=!0;for(let m=0;m<l;++m){const y=0===f[m];u[m]=y,g=g&&!y,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const m=n,y=s;for(let x=0;x<i;++x)c[x]=x;return[m,[i,h],y,u,c]}{const m=f[l-1],y=pt(e,m*h),x=pt(r,m),b=new Array(l).fill(0);for(let w=0;w<i;++w){const v=n[w*h],k=(0===v?0:f[v-1])+b[v];b[v]++;for(let _=0;_<h;++_)y[k*h+_]=n[w*h+_];x[k]=s[w],c[w]=k}for(let w=0;w<l;++w)if(0===b[w]){const C=0===w?0:f[w-1];y[C*h+0]=w;for(let k=1;k<h;++k)y[C*h+k]=0;x[C]=o}return[y,[m,h],x,u,c]}}const YV={kernelName:lh,backendName:"cpu",kernelFunc:function ZV(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,u=e.data.get(a.dataId).values,c=e.data.get(o.dataId).values[0],[h,d,p,f,g]=Ow(i,s.shape,s.dtype,l,r.dtype,u,c);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(m=>Number(m)))),e.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}};function Fw(n,t,e,s,r){const a=I(s),o=t[0],i=r.length,l=[];let u=1,c=-1;for(let m=0;m<i;++m){const y=r[m];if(-1===y){if(-1!==c)throw new Error(uy(c,m));c=m,l.push(1)}else{if(y<0)throw new Error(cy(m,y));u*=y,l.push(y)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const m=Math.trunc(a/u);if(u*m!==a)throw new Error(dy(s,l));l[c]=m}if(I(l)!==a)throw new Error(py(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let m=d-2;m>=0;--m)p[m]=p[m+1]*s[m+1]}const f=[];if(i>0){f[i-1]=1;for(let m=i-2;m>=0;--m)f[m]=f[m+1]*l[m+1]}const g=pt(e,o*i);for(let m=0;m<o;++m){let y=0;for(let x=0;x<d;++x)y+=n[m*d+x]*p[x];for(let x=0;x<i;++x)g[m*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[g,[o,i],l]}const JV={kernelName:uh,backendName:"cpu",kernelFunc:function QV(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(e.data.get(r.dataId).values),i=e.data.get(s.dataId).values,l=Array.from(e.data.get(a.dataId).values),[u,c,h]=Fw(i,s.shape,s.dtype,o,l);return[e.makeTensorInfo(c,s.dtype,u),e.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function vf(n,t,e,s,r,a=!1,o=0){const i=s.length,l=[t[0],n.length/t[0]],u=l[1],h=i>0?r[i-1]+1:0;if(h<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=h;const f=pt(e,d.reduce((b,w)=>b*w,1));if(0===i)return h>0&&f.fill(o),[f,d];if(h<=0)throw new Error("segment ids must be >= 0");let g=0,m=1,y=0,x=r[g];for(;;){let b=0;if(m<i){if(b=r[m],x===b){++m;continue}if(x>=b)throw new Error("segment ids are not increasing")}if(x<0||x>=h)throw new Error(my(x,h));x>y&&f.fill(o,y*u,x*u);for(let w=g;w<m;++w){const v=s[w];if(v<0||v>=l[0])throw new Error(gy(w,s[w],l[0]));for(let C=0;C<u;C++)f[x*u+C]+=n[v*u+C]}if(a)for(let w=0;w<u;w++)f[x*u+w]/=m-g;if(g=m,++m,y=x+1,x=b,m>i)break}return y<h&&f.fill(o,y*u,h*u),[f,d]}const tM={kernelName:ch,backendName:"cpu",kernelFunc:function eM(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(a.dataId).values,[u,c]=vf(o,s.shape,s.dtype,i,l,!0);return e.makeTensorInfo(c,s.dtype,u)}},sM={kernelName:hh,backendName:"cpu",kernelFunc:function nM(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(a.dataId).values,[u,c]=vf(o,s.shape,s.dtype,i,l);return e.makeTensorInfo(c,s.dtype,u)}},aM={kernelName:um,backendName:"cpu",kernelFunc:function rM(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Rr(0,r,i),p=!1,f=e.bufferSync(r);let g;switch(a.dtype){case"bool":g=Hr(f,e.bufferSync(a),i,d,c,u,l,h,Boolean(e.data.get(o.dataId).values[0]),p);break;case"float32":case"int32":g=Hr(f,e.bufferSync(a),i,d,c,u,l,h,e.data.get(o.dataId).values[0],p);break;case"string":g=Hr(f,e.bufferSync(a),i,d,c,u,l,h,$s(e.data.get(o.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return e.makeTensorInfo(i,g.dtype,g.values)}},iM={kernelName:El,backendName:"cpu",kernelFunc:function oM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=$e(o,r.shape)[0],l=tp(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[i]=h;const p=Gr({inputs:{x:r},backend:e,attrs:{begin:u,size:d}});return u[i]+=h,p})}},lM=Cs(n=>Math.sqrt(n)),uM=it(To,n=>Math.sqrt(n)),cM={kernelName:To,backendName:"cpu",kernelFunc:uM},hM={kernelName:dh,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;ve(e,"square");const r=s.data.get(e.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){const l=r[i];a[i]=l*l}return{dataId:s.write(a,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},Pw=Mt((n,t)=>{const e=n-t;return e*e}),dM=Qt(_o,Pw),pM={kernelName:_o,backendName:"cpu",kernelFunc:dM},Lw=Cs((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:r}=t;return n.replace(new RegExp(e,s?"g":""),r)}),mM={kernelName:Al,backendName:"cpu",kernelFunc:ir(Al,Lw)},gM=it(Ro,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),yM={kernelName:Ro,backendName:"cpu",kernelFunc:gM};function Vw(n,t,e,s){const r=Ge(n,t.dtype);for(let a=0;a<r.size;a++){const o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*e[l]+s[l];r.set(t.get(...i),...o)}return r}const bM={kernelName:ph,backendName:"cpu",kernelFunc:function xM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;ve(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:x,end:b,strides:w}=rd(r.shape,a,o,i,l,u,c,h,d);let v;if(g)v=xt({inputs:{x:r},backend:e,attrs:{shape:f}});else if(m||y){S(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=td(x,b,w),k=Gr({inputs:{x:r},backend:e,attrs:{begin:x,size:C}});v=xt({inputs:{x:k},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(k)}else{const k=Vw(p,e.bufferSync(r),w,x);v=e.makeTensorInfo(f,k.dtype,k.values)}return v}};class wM{constructor(t,e,s,r,a,o){this.separator=_s(t),this.nGramWidths=e,this.leftPad=_s(s),this.rightPad=_s(r),this.padWidth=a,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,r,a,o){for(let i=0;i<a;++i){const l=this.getPadWidth(o),u=Math.max(0,l-i),c=Math.max(0,l-(a-(i+1))),h=o-(u+c),d=e+(u>0?0:i-l);let p=0;p+=u*this.leftPad.length;for(let x=0;x<h;++x)p+=t[d+x].length;p+=c*this.rightPad.length,p+=(u+c+h-1)*this.separator.length,s[r+i]=new Uint8Array(p);const g=s[r+i];let m=0;const y=x=>x.forEach(b=>g[m++]=b);for(let x=0;x<u;++x)y(this.leftPad),y(this.separator);for(let x=0;x<h-1;++x)y(t[d+x]),y(this.separator);if(h>0){y(t[d+h-1]);for(let x=0;x<c;++x)y(this.separator),y(this.rightPad)}else{for(let x=0;x<c-1;++x)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(t,e){const s=t.length,r=e.length;if(r>0){let l=e[0];if(0!==l)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=e[u]>=l;if(c=c&&e[u]<=s,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${s}]`);l=e[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const a=r-1,o=pt("int32",r);if(0===s||0===r){const l=new Array(s);for(let u=0;u<=a;++u)o[u]=0;return[l,o]}o[0]=0;for(let l=1;l<=a;++l){const u=e[l]-e[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&0===c&&(c=1),o[l]=o[l-1]+c}const i=new Array(o[a]);for(let l=0;l<a;++l){const u=e[l];let c=o[l];if(this.nGramWidths.forEach(h=>{const p=this.getNumNGrams(e[l+1]-e[l],h);this.createNGrams(t,u,i,c,p,h),c+=p}),this.preserveShort&&c===o[l]){const h=e[l+1]-e[l];if(0===h)continue;this.createNGrams(t,u,i,c,1,h+2*this.padWidth)}}return[i,o]}}function Mw(n,t,e,s,r,a,o,i){return new wM(e,s,r,a,o,i).compute(n,t)}const IM={kernelName:fh,backendName:"cpu",kernelFunc:function vM(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=e.data.get(c.dataId).values,p=e.data.get(h.dataId).values,[f,g]=Mw(d,p,r,a,o,i,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",g)]}};function SM(n,t,e,s){if(!n.length)return;if(0===t.length){for(let a=0;a<n.length;++a)s.push(n.subarray(a,a+1));return}if(1===t.length){const a=t[0];let o=n.indexOf(a);for(;-1!==o;){const i=n.subarray(0,o);(!e||0!==i.length)&&s.push(i),o=(n=n.subarray(o+1)).indexOf(a)}return void((!e||0!==n.length)&&s.push(n))}let r=0;for(let a=0;a<n.length+1;a++)if(a===n.length||-1!==t.indexOf(n[a])){const o=n.subarray(r,a);(!e||0!==o.length)&&s.push(o),r=a+1}}function zw(n,t,e){const s=n.length,r=[];let a=0,o=0;const i=new Array(s);for(let d=0;d<s;++d){const p=r.length;SM(n[d],t,e,r);const f=r.length-p;i[d]=f,a+=f,o=Math.max(o,f)}const l=pt("int32",2*a),u=new Array(a),c=[s,o];let h=0;for(let d=0;d<s;++d)for(let p=0;p<i[d];++p)l[2*h]=d,l[2*h+1]=p,u[h]=r[h],++h;return[l,u,c]}const NM={kernelName:mh,backendName:"cpu",kernelFunc:function CM(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=e.data.get(a.dataId).values,l=e.data.get(o.dataId).values[0],[u,c,h]=zw(i,l,r),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(h))]}};function Bw(n,t){const e=pt("int32",n.length);for(let s=0;s<n.length;++s)e[s]=gm(n[s]).modulo(t).getLowBitsUnsigned();return e}const TM={kernelName:gh,backendName:"cpu",kernelFunc:function kM(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=Bw(e.data.get(a.dataId).values,r);return e.makeTensorInfo(a.shape,"int32",i)}},_M=it(Eo,n=>Math.tan(n)),$M={kernelName:Eo,backendName:"cpu",kernelFunc:_M},EM=it(Do,n=>Math.tanh(n));function Ww(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=Ge(e,n.dtype);for(let r=0;r<s.values.length;++r){const a=s.indexToLoc(r),o=new Array(n.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%n.shape[l];const i=n.locToIndex(o);s.values[r]=n.values[i]}return s}const xi=(n,t)=>{const e=t.value-n.value;return 0===e?n.index-t.index:e};function Uw(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const i=s-e+1,l=t-e+1,u=Math.log(i),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(i-c)/i)*Math.sign(l-i/2);Uw(n,t,Math.max(e,Math.floor(t-l*c/i+h)),Math.min(s,Math.floor(t+(i-l)*c/i+h)))}const r=n[t];let a=e,o=s;for(ot(n,e,t),xi(n[s],r)>0&&ot(n,e,s);a<o;){for(ot(n,a,o),a++,o--;xi(n[a],r)<0;)a+=1;for(;xi(n[o],r)>0;)o-=1}0===xi(n[e],r)?ot(n,e,o):(o+=1,ot(n,o,s)),o<=t&&(e=o+1),t<=o&&(s=o-1)}}function Gw(n,t,e,s,r){const a=t[t.length-1],[o,i]=[n.length/a,a],l=rt(e,o*s),u=rt("int32",o*s);for(let h=0;h<o;h++){const d=h*i,p=n.subarray(d,d+i);let f=new Array(p.length);p.forEach((x,b)=>f[b]={value:x,index:b}),s<f.length&&(Uw(f,s),f=f.slice(0,s)),r&&f.sort(xi);const g=h*s,m=l.subarray(g,g+s),y=u.subarray(g,g+s);for(let x=0;x<s;x++)m[x]=f[x].value,y[x]=f[x].index}const c=t.slice();return c[c.length-1]=s,[Ge(c,e,l),Ge(c,"int32",u)]}function Hw(n,t,e){switch(e){case"reflect":return function zM(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return ze(0,e,t-1)}(n,t);case"wrap":return function BM(n,t){let e=n;return e<0?t<=1?e=0:e+=t*(Math.trunc(-e/(t-1))+1):e>t-1&&(t<=1?e=0:e-=t*Math.trunc(e/(t-1))),ze(0,e,t-1)}(n,t);case"nearest":return function UM(n,t){return ze(0,n,t-1)}(n,t);default:return function WM(n,t){return n}(n)}}function bi(n,t,e,s,r,a,o,i,l,u,c){return 0<=i&&i<t&&0<=l&&l<e?n[o*s+i*r+l*a+u]:c}function GM(n,t,e,s,r,a,o,i,l,u,c){return bi(n,t,e,s,r,a,o,Math.round(i),Math.round(l),u,c)}function HM(n,t,e,s,r,a,o,i,l,u,c){const h=Math.floor(i),d=Math.floor(l),p=h+1,f=d+1;return(p-i)*((f-l)*bi(n,t,e,s,r,a,o,h,d,u,c)+(l-d)*bi(n,t,e,s,r,a,o,h,f,u,c))+(i-h)*((f-l)*bi(n,t,e,s,r,a,o,p,d,u,c)+(l-d)*bi(n,t,e,s,r,a,o,p,f,u,c))}function jw(n,t,e,s){const r=$e(t,e)[0],a=[1,e[0],1];for(let f=0;f<r;f++)a[0]*=e[f];a[1]=e[r];for(let f=r+1;f<e.length;f++)a[2]*=e[f];const o=new Map,i=new Int32Array(e[r]),l=new nn(a,s,n),u=[],c=1===a[0]&&1===a[2];for(let f=0;f<e[r];f++){let g;if(c)g=n[f].toString();else{const y=[];for(let x=0;x<a[0];x++)for(let b=0;b<a[2];b++)y.push(l.get(x,f,b));g=y.join(",")}const m=o.get(g);if(null!=m)i[f]=m;else{const y=o.size;o.set(g,y),i[f]=y,u.push(f)}}const h=a.slice();h[1]=o.size;const d=new nn(h,s);u.forEach((f,g)=>{for(let m=0;m<a[0];m++)for(let y=0;y<a[2];y++)d.set(l.get(m,f,y),m,g,y)});const p=e.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const QM=[ZR,YR,JR,tO,jR,sO,oO,lO,cO,dO,fO,gO,xO,vO,SO,kO,_O,EO,AO,KR,OO,LO,MO,BO,GR,UO,HO,WR,jO,KO,XO,YO,JO,tF,sF,aF,iF,uF,hF,pF,mF,yF,bF,wF,IF,CF,kF,TF,_F,$F,OF,RR,PF,LF,HF,jF,qF,XF,sP,rP,oP,lP,cP,dP,fP,gP,xP,wP,IP,OR,CP,qO,kP,_P,EP,FR,AP,OP,PP,VP,zP,UP,HP,KP,ZP,QP,JP,tL,sL,aL,iL,uL,hL,pL,mL,yL,bL,IL,NL,DF,TL,EL,RL,PL,VL,zL,WL,UL,Iw,qL,LR,XL,sV,aV,iV,uV,UR,yf,hV,VR,MR,qR,pV,mV,yV,bV,vV,IV,CV,kV,_V,RV,FV,MV,BR,BV,UV,HV,FO,SL,qV,XV,YV,JV,tM,sM,aM,iM,cM,hM,pM,mM,yM,bM,IM,NM,TM,QF,AF,$M,{kernelName:Do,backendName:"cpu",kernelFunc:EM},{kernelName:im,backendName:"cpu",kernelFunc:function AM(n){const{inputs:t,backend:e}=n,{tensor:s,indices:r,updates:a}=t,{sliceRank:o,numUpdates:i,sliceSize:l,strides:u,outputSize:c}=Rr(0,r,s.shape),d=e.bufferSync(r),p=e.bufferSync(a),f=e.bufferSync(s),g=Hr(d,p,s.shape,c,l,i,o,u,f,!1);return e.makeTensorInfo(s.shape,g.dtype,g.values)}},{kernelName:Ao,backendName:"cpu",kernelFunc:function OM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:a}=s;ve(r,"tile");const o=Ww(e.bufferSync(r),a);return e.makeTensorInfo(o.shape,o.dtype,o.values)}},{kernelName:yh,backendName:"cpu",kernelFunc:function PM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:a,sorted:o}=s;ve(r,"topk");const i=e.data.get(r.dataId).values,[l,u]=Gw(i,r.shape,r.dtype,a,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}},{kernelName:xh,backendName:"cpu",kernelFunc:function VM(n){const{inputs:t,attrs:e,backend:s}=n,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=e,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],y=ke(r.shape),x=y[0],b=y[1],w=y[2],v=ke(m),C=v[0],k=v[1],_=v[2],$=rt(r.dtype,I(m));$.fill(l);const E=s.data.get(r.dataId).values,P=s.data.get(a.dataId).values;for(let U=0;U<c;++U){const G=1===a.shape[0]?P:P.subarray(8*U,8*U+8);for(let H=0;H<f;++H)for(let K=0;K<g;++K)for(let X=0;X<p;++X){let j;const Z=G[6]*K+G[7]*H+1;if(0===Z)continue;const ie=(G[3]*K+G[4]*H+G[5])/Z,ue=Hw((G[0]*K+G[1]*H+G[2])/Z,d,i),le=Hw(ie,h,i);switch(o){case"nearest":j=GM(E,h,d,x,b,w,U,le,ue,X,l);break;case"bilinear":j=HM(E,h,d,x,b,w,U,le,ue,X,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}$[U*C+H*k+K*_+X]=j}return s.makeTensorInfo(m,r.dtype,$)}return{dataId:s.write($,m,r.dtype),shape:r.shape,dtype:r.dtype}}},rO,{kernelName:bh,backendName:"cpu",kernelFunc:function jM(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:a}=t;ve(a,"unique");const o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=jw(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Rl,backendName:"cpu",kernelFunc:function KM(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r.shape.length,i=r.shape[a],l=new Array(o-1);let u=0;for(let p=0;p<o;p++)p!==a&&(l[u++]=r.shape[p]);const c=new Array(o).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(i);for(let p=0;p<d.length;p++){c[a]=p;const f=Gr({inputs:{x:r},backend:e,attrs:{begin:c,size:h}});d[p]=xt({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return d}},{kernelName:Ol,backendName:"cpu",kernelFunc:function ZM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:a}=t,{numSegments:o}=s;ve(r,"unsortedSegmentSum");const u=[],c=[],h=r.shape.length-a.shape.length;let d=a;for(let f=0;f<h;++f){const g=ec({inputs:{input:d},backend:e,attrs:{dim:f+1}});d=g,c.push(g)}for(let f=0;f<o;++f){const g=Ts(f,"int32"),m=e.makeTensorInfo([],"int32",g),y=Y0({inputs:{a:m,b:d},backend:e}),x=lr({inputs:{x:y},backend:e,attrs:{dtype:"float32"}}),b=Ju({inputs:{a:x,b:r},backend:e}),w=yi({inputs:{x:b},backend:e,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(m),c.push(y),c.push(x),c.push(b),c.push(w)}const p=vw({inputs:u,backend:e,attrs:{axis:0}});return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},BL];for(const n of QM)Ch(n);const ur={},sc={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ls(n,t){if(!(n in ur)||null!=t){const s=function tz(n,t){if(1!==n&&2!==n)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=null==t?function ez(n){if(!z().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===n)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(n):t;return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ur[n]},!1),z().getBool("SOFTWARE_WEBGL_ENABLED")&&(sc.failIfMajorPerformanceCaveat=!1),1===n?e.getContext("webgl",sc)||e.getContext("experimental-webgl",sc):e.getContext("webgl2",sc)}(n,t);if(null===s)return console.log("Could not get context for WebGL version",n),null;ur[n]=s}const e=ur[n];return null==e||e.isContextLost()?(delete ur[n],ls(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),ur[n])}var Sa=(()=>{return(n=Sa||(Sa={}))[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH",Sa;var n})(),_n=(()=>{return(n=_n||(_n={}))[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD",_n;var n})(),Jt=(()=>{return(n=Jt||(Jt={}))[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",Jt;var n})();function wi(n,t){return[t,n]}function rc(n){const t=I(n);return st(Math.ceil(t/4))}function Ca(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function If(n,t){const e=n;let s,r,a,o,i,l,u,c,h,d;return 2===z().getNumber("WEBGL_VERSION")?(s=e.R32F,r=e.R16F,a=e.RGBA16F,o=e.RGBA32F,i=e.RED,u=4,c=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(s=n.RGBA,r=n.RGBA,a=n.RGBA,o=e.RGBA,i=n.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function pe(n,t){const e=t();return z().getBool("DEBUG")&&function rz(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+function lz(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(n,t))}(n),e}function iz(n){return!!(z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===n||5.96e-8<Math.abs(n)&&Math.abs(n)<65504)}function ac(n,t){return zs(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}const hz=/ERROR: [0-9]+:([0-9]+):/g;function qw(n,t){const e=hz.exec(t);if(null==e)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(n);const s=+e[1],r=n.split("\n"),a=r.length.toString().length+2,o=r.map((h,d)=>vt((d+1).toString(),a)+h);let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const l=o.slice(0,s-1),u=o.slice(s-1,s),c=o.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${vt(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function Sf(n,t){if(pe(n,()=>n.validateProgram(t)),!1===n.getProgramParameter(t,n.VALIDATE_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Kw(n,t,e,s,r,a,o){const i=n.getAttribLocation(t,e);return-1!==i&&(pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),pe(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,a,o)),pe(n,()=>n.enableVertexAttribArray(i)),!0)}function Iz(n,t,e,s){pe(n,()=>function bz(n,t,e){(function Zw(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${e}].`)})(n,e),pe(n,()=>n.activeTexture(n.TEXTURE0+e)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,t))}(n,t,s)),pe(n,()=>n.uniform1i(e,s))}function Cf(n,t,e){pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Xw(n,t){pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function oc(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function Sz(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(n,t))}function zs(n,t,e){const s=pe(n,()=>t());if(null==s)throw new Error(e);return s}function Na(n,t=2){return I(n.slice(0,n.length-t))}function ka(n){if(0===n.length)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function ic(n){let t=[1,1,1];return 0===n.length||1===n.length&&1===n[0]||(t=[Na(n),...ka(n)]),t}function lc(n){return n%2==0}function uc(n,t){if(de(n=n.slice(-2),t=t.slice(-2))||!n.length||!t.length||0===n[0]||0===n[1]||0===t[0]||0===t[1])return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||lc(e)&&lc(s)&&(1===n[0]||1===t[0]))return!0}return n[1]===t[1]&&lc(n[0])&&lc(t[0])}let cc,hc;function Yn(n,t){return null!=n.getExtension(t)}function Yw(n){try{if(null!=ls(n))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Nf(n){const t=If(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(a),o}function vi(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&S("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const Ne=z();function yn(){let n,t,e,s,r,a,o,i,l,u;return 2===z().getNumber("WEBGL_VERSION")?(n="#version 300 es",t="in",e="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=z().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(n="",t="attribute",e="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function jr(n,t,e="index"){const s=ke(t);return s.map((r,a)=>`int ${n[a]} = ${e} / ${r}; ${a===s.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${r}`:`index -= ${n[a]} * ${r}`};`).join("")}function dc(n,t,e="index"){const s=ke(t);return s.map((r,a)=>`int ${n[a]} = ${e} / outShapeStrides[${a}]; ${a===s.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * outShapeStrides[${a}]`:`index -= ${n[a]} * outShapeStrides[${a}]`};`).join("")}function kf(n){const t=ke(n).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0),Ne.registerFlag("WEBGL_VERSION",()=>Yw(2)?2:Yw(1)?1:0),Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Ne.get("WEBGL_VERSION")),Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL")),Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function Nz(n){if(null==cc){const t=ls(n);cc=t.getParameter(t.MAX_TEXTURE_SIZE)}return cc}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function kz(n){if(null==hc){const t=ls(n);hc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,hc)}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ne.getNumber("WEBGL_VERSION");return 0===n?0:function Tz(n){if(0===n)return 0;let t;const e=ls(n);return t=Yn(e,"EXT_disjoint_timer_query_webgl2")&&2===n?2:Yn(e,"EXT_disjoint_timer_query")?1:0,t}(n)}),Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!km()),Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function _z(n){if(0===n)return!1;const t=ls(n);if(1===n){if(!Yn(t,"OES_texture_float"))return!1}else if(!Yn(t,"EXT_color_buffer_float"))return!1;return Nf(t)}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Ne.getBool("WEBGL_FORCE_F16_TEXTURES")&&Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function $z(n){if(0===n)return!1;const t=ls(n);if(1!==n){if(Yn(t,"EXT_color_buffer_float"))return Nf(t);const s="EXT_color_buffer_half_float";if(Yn(t,s)){const r=t.getExtension(s);return function Ez(n,t){const e=If(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(o),i}(t,r)}return!1}return!(!Yn(t,"OES_texture_float")||!Yn(t,"WEBGL_color_buffer_float"))&&Nf(t)}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>function Dz(n){return 2===n&&null!=ls(n).fenceSync}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>km()?1:-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Ne.registerFlag("WEBGL_EXP_CONV",()=>!1),Ne.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ne.getBool("IS_TEST")),Ne.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Ne.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Ne.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),Ne.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const Qw="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Jw}=we;function Oz(n,t,e){const s=[];if(n.forEach(p=>{const f=I(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){const{uniformShape:g}=_f(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(g.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`)}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join("\n"),a=n.map(p=>function Fz(n,t,e=!1,s){let r="";return r+=e?e1(n,s):Ta(n,s),n.shapeInfo.logicalShape.length<=t.logicalShape.length&&(r+=e?function f3(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",a=n.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=Jw(n.shapeInfo.logicalShape,t.logicalShape),l=ct(o),u=o-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":o<2&&i.length>=1?"coords = 0;":i.map(x=>`coords.${h[x+u]} = 0;`).join("\n");let d="";d=o<2&&a>0?"coords":n.shapeInfo.logicalShape.map((x,b)=>`coords.${h[b+u]}`).join(", ");let p="return outputValue;";const g=1===I(n.shapeInfo.logicalShape),y=1===I(t.logicalShape);if(1!==a||g||y){if(g&&!y)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const x=a-2,b=a-1;i.indexOf(x)>-1&&i.indexOf(b)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(b)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(n,t):function m3(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!n.shapeInfo.isUniform&&i===l&&null==n.shapeInfo.flatOffset&&de(n.shapeInfo.texShape,t.texShape))return`\n      float ${r}() {\n        return sampleTexture(${e}, resultUV);\n      }\n    `;const u=ct(l),c=Jw(n.shapeInfo.logicalShape,t.logicalShape),h=l-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":l<2&&c.length>=1?"coords = 0;":c.map(g=>`coords.${p[g+h]} = 0;`).join("\n");let f="";return f=l<2&&i>0?"coords":n.shapeInfo.logicalShape.map((g,m)=>`coords.${p[m+h]}`).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(n,t)),r}(p,t,e.packedInputs,e.enableShapeUniforms)).join("\n"),o=t.texShape,i=yn(),l=function Vz(n){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${n.texture2D}(textureSampler, uv).r;\n    }\n  `}(i);let u,c,h=function Bz(n){return`${n.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${n.varyingFs} vec2 resultUV;\n    ${n.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${n.defineSpecialNaN}\n    ${n.defineSpecialInf}\n    ${n.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Wz}\n    ${Uz}\n    ${Gz}\n  `}(i);return t.isPacked?(u=function Pz(n,t,e){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function jz(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,e);case 2:return function e3(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(de(n,t))return e?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(n[1]/2);return e?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(n,t,e);case 3:return function Kz(n,t,e){if(e)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[2]/2),a=r*Math.ceil(n[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(n,t,e);default:return function Zz(n,t,e){if(e)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[n.length-1]/2),a=r*Math.ceil(n[n.length-2]/2);let o=a,i="",l="b, r, c";for(let u=2;u<n.length-1;u++)o*=n[n.length-u-1],i=`\n      int b${u} = index / ${o};\n      index -= b${u} * ${o};\n    `+i,l=`b${u}, `+l;return`\n    ivec${n.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${n.length}(${l});\n    }\n  `}(n,t,e)}}(t.logicalShape,o,e.enableShapeUniforms),c=function zz(n){return`\n    void setOutput(vec4 val) {\n      ${n.output} = val;\n    }\n  `}(i)):(u=function Lz(n,t,e){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function qz(n,t,e){return 1===t[0]?e?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?e?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,e);case 2:return function t3(n,t,e){return de(n,t)?e?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===n[1]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===n[0]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:e?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${n[1]};\n      int c = index - r * ${n[1]};\n      return ivec2(r, c);\n    }\n  `}(n,t,e);case 3:return function Xz(n,t,e){if(e)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${dc(["r","c","d"],n)}\n    return ivec3(r, c, d);\n  }\n`;const s=jr(["r","c","d"],n);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(n,t,e);case 4:return function Yz(n,t,e){if(e)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${dc(["r","c","d","d2"],n)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=jr(["r","c","d","d2"],n);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(n,t,e);case 5:return function Qz(n,t){const e=jr(["r","c","d","d2","d3"],n);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(n,t);case 6:return function Jz(n,t){const e=jr(["r","c","d","d2","d3","d4"],n);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,e.enableShapeUniforms),c=function Mz(n){return`\n    void setOutput(float val) {\n      ${n.output} = vec4(val, 0, 0, 0);\n    }\n  `}(i)),e.packedInputs&&(h+=Hz),[h,l,c,r,u,a,e.userCode].join("\n")}function Ta(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return function s3(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[r,a]=n.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const o=qr(e);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `;const[i,l]=n.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${i}, ${l}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n,t);case 1:return function a3(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${_a(n)}\n      }\n    `;const r=n.shapeInfo.texShape,a=r[0],o=r[1];if(1===o&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=qr(e);return 1===o?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${e}TexShape[0]));\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${e}TexShape[1]), 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n,t);case 2:return function i3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape;if(null!=a&&de(e,a))return t?`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${a[0]}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const{newShape:o,keptDims:i}=dt(e);if(o.length<e.length){const p=["row","col"];return`\n      ${Ta($a(n,o),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${Ea(p,i)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${_a(n)}\n      }\n    `;const u=a[0],c=a[1],h=qr(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(n,t);case 3:return function u3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e[1]*e[2],o=e[2],{newShape:i,keptDims:l}=dt(e);if(i.length<e.length){const m=["row","col","depth"];return`\n        ${Ta($a(n,i),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Ea(m,l)});\n        }\n      `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${_a(n)}\n      }\n    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===o&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=qr(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(n,t);case 4:return function h3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e[3],o=e[2]*a,i=e[1]*o,{newShape:l,keptDims:u}=dt(e);if(l.length<e.length){const b=["row","col","depth","depth2"];return`\n      ${Ta($a(n,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Ea(b,u)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${_a(n)}\n      }\n    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const y=qr(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `}(n,t);case 5:return function d3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:u}=dt(t);if(l.length<t.length){const m=["row","col","depth","depth2","depth3"];return`\n      ${Ta($a(n,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${Ea(m,u)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${a}, ${r})) +\n          depth3;\n        ${_a(n)}\n      }\n    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${qr(e)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);case 6:return function p3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:a}=dt(t);if(r.length<t.length){const y=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ta($a(n,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${Ea(y,a)});\n      }\n    `}const o=t[5],i=t[4]*o,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${_a(n)}\n      }\n    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(f===o&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${qr(e)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function e1(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return function n3(n){const t=n.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${yn().texture2D}(${t}, halfCR);\n    }\n  `}(n);case 1:return function r3(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,a=yn();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(n,t);case 2:return function o3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape,o=a[0],i=a[1],l=yn();if(null!=a&&de(e,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(n,t);case 3:return function l3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const p=[1,2],g=["b","row","col"];return`\n        ${e1($a(n,e.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Ea(g,p)});\n        }\n      `}const i=yn();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${s}, uv);\n    }\n  `;const l=o[0],u=o[1],c=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(e[1]/2)}, ${c}, b, row, col);\n      return ${i.texture2D}(${s}, uv);\n    }\n  `}(n,t);default:return function c3(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=yn();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${e}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${e}, uv);\n    }\n  `;const a=n.shapeInfo.logicalShape,o=a.length,i=n.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[o-1]/2);let d=h*Math.ceil(a[o-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<o-1;g++)p=`int b${g}, `+p,d*=a[o-g-1],f=`b${g} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${e}, uv);\n    }\n  `}(n,t)}}const Wz="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Uz="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Gz="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Hz="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function qr(n){return`offset${n}`}function _a(n){const t=n.name,e=I(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`\n    for (int i = 0; i < ${e}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ct(n){if(n<=1)return"int";if(2===n)return"ivec2";if(3===n)return"ivec3";if(4===n)return"ivec4";if(5===n)return"ivec5";if(6===n)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function _f(n,t,e){const{newShape:s,keptDims:r}=dt(t),a=t.length,o=n&&3===a&&1===t[0],i=o?t.slice(1):s,l=!n&&a>1&&!de(t,e)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function $a(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function Ea(n,t){return t.map(e=>n[e]).join(", ")}function n1(n,t,e){const s=[],r=[];let a,o,i,l=null,u=null;u=n.getUniformLocation(e,"NAN",!1),1===z().getNumber("WEBGL_VERSION")&&(l=n.getUniformLocation(e,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const d={name:h,uniform:n.getUniformLocation(e,h,c),offset:n.getUniformLocation(e,`offset${h}`,c)};t.enableShapeUniforms&&(d.shape=n.getUniformLocation(e,`${h}Shape`,c),d.texShape=n.getUniformLocation(e,`${h}TexShape`,c)),s.push(d)}if(t.enableShapeUniforms&&(a=n.getUniformLocation(e,"outShape",c),i=n.getUniformLocation(e,"outShapeStrides",c),o=n.getUniformLocation(e,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)r.push(n.getUniformLocation(e,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}}function s1(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,a=t[s],o=a.shape;if(!de(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!de(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function un(n){return z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}class b3{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Sa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=yn();this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?dc(["r","c","d"],t):jr(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class w3{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Sa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=yn();this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?dc(["r","c","d"],t):jr(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class v3{constructor(t){this.variableNames=["A"],this.outTexUsage=_n.DOWNLOAD;const e=yn();this.outputShape=t,this.userCode=`\n      ${Qw}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class I3{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=_n.DOWNLOAD;const e=yn();this.outputShape=t,this.userCode=`\n      ${Qw}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}const S3={R:0,G:1,B:2,A:3};class r1{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=yn();this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);let a="result";e&&(a="floor(result * 255. + 0.5)");let o="";for(let i=0;i<s.length;i++)o+=`\n          if(offset == ${i}) {\n            result = values[${S3[s[i]]}];\n          }`;this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":kf(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${s.length});\n\n        flatIndex = idiv(flatIndex, ${s.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${o}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class C3{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=yn();this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);let r="",a="result";e&&(a="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let i=0;i<=1;i++){const l=2*o+i;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${i};\n          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${o};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${s.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${l}] = values[0];\n            } else if (offset == 1) {\n              result[${l}] = values[1];\n            } else if (offset == 2) {\n              result[${l}] = values[2];\n            } else {\n              result[${l}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":kf(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${s.output} = ${a};\n        }\n    `}}function Ii(n,t,e,s,r,a){!function yz(n,t){const e=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0)throw new Error(`Requested texture size [${n}x${t}] is invalid.`);if(n>e||t>e)throw new Error(`Requested texture size [${n}x${t}] greater than WebGL maximum on this browser / GPU [${e}x${e}].`)}(t,e);const o=function gz(n){return zs(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}(n),i=n.TEXTURE_2D;return pe(n,()=>n.bindTexture(i,o)),pe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),pe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),pe(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),pe(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),1===z().getNumber("WEBGL_VERSION")?pe(n,()=>n.texImage2D(i,0,s,t,e,0,r,a,null)):pe(n,()=>n.texStorage2D(i,1,s,t,e)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[e,t]}}function a1(n){return n.internalFormatFloat}function o1(n){return n.internalFormatHalfFloat}function i1(n){return n.downloadTextureFormat}function l1(n){return n.internalFormatPackedFloat}function u1(n){return n.internalFormatPackedHalfFloat}class $f{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=z().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,function JM(n,t){ur[n]=t}(e,t)):this.gl=ls(e),t=this.gl,2===z().getNumber("WEBGL_VERSION")){const a=t;this.createVertexArray=()=>pe(a,()=>a.createVertexArray()),this.bindVertexArray=o=>pe(a,()=>a.bindVertexArray(o)),this.deleteVertexArray=o=>pe(a,()=>a.deleteVertexArray(o)),this.getVertexArray=()=>pe(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(null!=t){const a=t.getExtension("OES_vertex_array_object");if(null==a)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pe(t,()=>a.createVertexArrayOES()),this.bindVertexArray=o=>pe(t,()=>a.bindVertexArrayOES(o)),this.deleteVertexArray=o=>pe(t,()=>a.deleteVertexArrayOES(o)),this.getVertexArray=()=>pe(t,()=>t.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===z().getNumber("WEBGL_VERSION")){const o="OES_texture_half_float";if(this.textureFloatExtension=ac(this.gl,"OES_texture_float"),Yn(this.gl,o))this.textureHalfFloatExtension=ac(this.gl,o);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Yn(this.gl,r))this.colorBufferHalfFloatExtension=ac(this.gl,r);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Yn(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else{if(!Yn(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function k3(n){return function fz(n,t){const e=zs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),pe(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}(n,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function T3(n){return function mz(n,t){const e=zs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),pe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}(n,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function xz(n){return zs(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=If(this.gl,this.textureHalfFloatExtension)}get debug(){return z().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;pe(t,()=>t.finish()),pe(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),pe(t,()=>t.deleteFramebuffer(this.framebuffer)),pe(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),pe(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function _3(n,t,e,s){const[r,a]=wi(t,e);return Ii(n,r,a,a1(s),s.textureFormatFloat,n.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function $3(n,t,e,s){const[r,a]=wi(t,e);return Ii(n,r,a,o1(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function E3(n,t,e,s){const[r,a]=wi(t,e);return Ii(n,r,a,i1(s),n.RGBA,n.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function F3(n,t,e){pe(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?2===z().getNumber("WEBGL_VERSION")?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):2===z().getNumber("WEBGL_VERSION")?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),function O3(n,t,e,s,r,a){let o,i,l;pe(n,()=>n.bindTexture(n.TEXTURE_2D,t)),r instanceof Uint8Array?(o=new Uint8Array(e*s*4),i=n.UNSIGNED_BYTE,l=n.RGBA):(o=new Float32Array(e*s*4),i=n.FLOAT,l=a.internalFormatPackedFloat),o.set(r),2===z().getNumber("WEBGL_VERSION")?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,i,o)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,e,s,0,n.RGBA,i,o)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function A3(n,t,e,s){const[r,a]=Ca(t,e);return Ii(n,r,a,u1(s),n.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function D3(n,t,e,s){const[r,a]=Ca(t,e);return Ii(n,r,a,l1(s),n.RGBA,n.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Xw(this.gl,this.framebuffer),this.outputTexture=null),pe(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>function V3(n,t,e,s){const[r,a]=wi(t,e),i=new Uint8Array(function nz(n,t){return n*t}(t*e,4));return pe(n,()=>n.readPixels(0,0,r,a,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,a,o){return function M3(n,t,e,s,r,a,o,i){const l=n,u=new Float32Array(function sz(n,t){const[e,s]=Ca(n,t);return e*s*4}(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,a,o)}downloadFloat32MatrixFromBuffer(t,e){return function L3(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=function P3(n,t,e,s){const r=n.createBuffer();pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=16*t*e;return pe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),pe(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}(this.gl,e,s);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(z().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const o=r.clientWaitSync(a,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},e=a}else z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>function z3(n,t,e){const s=new Float32Array(t*e*4);return pe(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function N3(n){const t=yn();return function uz(n,t){const e=zs(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pe(n,()=>n.shaderSource(e,t)),pe(n,()=>n.compileShader(e)),!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}(n,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const s=function dz(n){return zs(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}(e);let r;return pe(e,()=>e.attachShader(s,this.vertexShader)),pe(e,()=>e.attachShader(s,t)),function pz(n,t){if(pe(n,()=>n.linkProgram(t)),!z().get("ENGINE_COMPILE_ONLY")&&!1===n.getProgramParameter(t,n.LINK_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(e,s),r=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(r.vao),pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(function R3(n,t,e){return pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Kw(n,t,"clipSpacePos",e,3,20,0)&&Kw(n,t,"uv",e,2,20,12)}(e,r,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Sf(e,r),this.setProgram(r),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(pe(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&Sf(this.gl,this.program)),pe(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?function wz(n,t,e){return zs(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}(this.gl,t,e):function vz(n,t,e){return n.getUniformLocation(t,e)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),pe(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),Iz(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,a]=Ca(e,s);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Sf(this.gl,this.program),oc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pe(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=ac(this.gl,2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,a),a}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();return void e.endQuery(s.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){var e=this;return(0,T.Z)(function*(){return yield zt(()=>e.disposed||e.isQueryAvailable(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),e.getQueryTime(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(t,e){if(0===e)return null;if(2===e){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function B3(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in z().platform&&(s=z().platform.setTimeoutCustom.bind(z().platform)),zt(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Cf(this.gl,t,this.framebuffer),this.debug&&oc(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Cf(this.gl,this.outputTexture,this.framebuffer),this.debug&&oc(this.gl)):Xw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;Cf(r,t,this.framebuffer),this.debug&&oc(r),this.outputTexture=t,pe(r,()=>r.viewport(0,0,e,s)),pe(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),pe(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:W3,bincountImpl:c1,bincountReduceImpl:U3,castImpl:G3,ceilImpl:H3,concatImpl:j3,equalImpl:q3,expImpl:K3,expm1Impl:X3,floorImpl:Z3,gatherNdImpl:Y3,gatherV2Impl:Q3,greaterImpl:J3,greaterEqualImpl:eB,lessImpl:tB,lessEqualImpl:nB,linSpaceImpl:sB,logImpl:rB,maxImpl:aB,maximumImpl:oB,minimumImpl:iB,multiplyImpl:lB,negImpl:uB,notEqualImpl:cB,prodImpl:hB,raggedGatherImpl:dB,raggedRangeImpl:pB,raggedTensorToTensorImpl:fB,rangeImpl:mB,rsqrtImpl:gB,scatterImpl:yB,sigmoidImpl:xB,simpleAbsImpl:h1,sliceImpl:bB,sparseFillEmptyRowsImpl:wB,sparseReshapeImpl:vB,sparseSegmentReductionImpl:d1,sqrtImpl:IB,staticRegexReplaceImpl:SB,stridedSliceImpl:CB,stringNGramsImpl:NB,stringSplitImpl:kB,stringToHashBucketFastImpl:TB,subImpl:_B,tileImpl:$B,topKImpl:EB,transposeImpl:Ef,uniqueImpl:DB}=fe;function p1(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function xn(n,t){return 1===t?[n]:p1(n,t)}class RB{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=un(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=xn("rc",this.rank),s=ct(this.rank),r=this.getOutOfBoundsCondition(e),a=this.getSetup(e),o=this.getOutput(e);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let o=2;o<this.rank;o++)a=`${t[t.length-1-o]},`+a;e.push(a)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2);return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class f1{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);let s="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2==1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),s+=`\n        ${a}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function OB(n,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function Rz(n,t,e="index"){const r=function Az(n,t){const e=n.length,s=n.map(a=>`${t}[${a}]`),r=new Array(e-1);r[e-2]=s[e-1];for(let a=e-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}(n.map((a,o)=>o),t);return r.map((a,o)=>`int ${n[o]} = ${e} / ${r[o]}; ${o===r.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r[o]}`:`index -= ${n[o]} * ${r[o]}`};`).join("")}(["r","c","d"],"inputShape"):jr(["r","c","d"],n)}\n      return ivec3(r, c, d);\n    }\n  `}(e,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":kf(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class FB{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const r=g1(e,s),a=y1(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=m1(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[a].pop();return this.usedTextures[a].push(l),l}let i;return r===Jt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Jt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Jt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Jt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Jt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),i}releaseTexture(t,e,s,r){if(null==this.freeTextures)return;const a=g1(s,r),o=y1(e,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=m1(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=z().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[o],c=u&&u.indexOf(t);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function m1(n,t,e,s,r){const a=function LB(n,t){switch(n){case Jt.PACKED_2X2_FLOAT32:return l1(t);case Jt.PACKED_2X2_FLOAT16:return u1(t);case Jt.UNPACKED_FLOAT32:return a1(t);case Jt.UNPACKED_FLOAT16:return o1(t);case Jt.PACKED_4X1_UNSIGNED_BYTE:return i1(t);default:throw new Error(`Unknown physical texture type ${n}`)}}(t,s);let o;if(r){const[l,u]=Ca(n[0],n[1]);o=l*u}else{const[l,u]=wi(n[0],n[1]);o=l*u}const i=function PB(n,t){if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(e,a);return o*i}function g1(n,t){if(n===_n.UPLOAD)return Jt.PACKED_2X2_FLOAT32;if(n===_n.RENDER||null==n)return function VB(n){return z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Jt.PACKED_2X2_FLOAT32:Jt.UNPACKED_FLOAT32:n?Jt.PACKED_2X2_FLOAT16:Jt.UNPACKED_FLOAT16}(t);if(n===_n.DOWNLOAD||n===_n.PIXELS)return Jt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function y1(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}class ks{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const x1="return abs(x);",cr="return x;";class hr{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class XB{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);const e=t.length,s=xn("rc",e),r=ct(e),a=function AB(n,t){if(1===n)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}(e,s),o=s.slice(-2),i=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const ZB=wy,fc={},eW=z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");let sW=(()=>{class n extends L{nextDataId(){return n.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let s;if(null!=e){if(e instanceof $f)s=e;else{const r=ls(z().getNumber("WEBGL_VERSION"),e);s=new $f(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=ls(z().getNumber("WEBGL_VERSION"));s=new $f(r),this.binaryCache=function JB(n){return n in fc||(fc[n]={}),fc[n]}(z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=s,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new FB(this.gpgpu),this.numMBBeforeWarning=function nW(){return null==z().global.screen?1024:z().global.screen.height*z().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new M(this,ds())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,s,r,a,o,i){const l=this.makeTensorInfo(s,r),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[a,o]},u.texShape=[a,o];const c=ic(s),h=new r1(c,!1,i),d=this.runWebGLProgram(h,[l],r,[[a,o]]);return d.shape=s,u.texture=null,this.disposeIntermediateTensorInfo(l),d.dataId}write(e,s,r){if((z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||z().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===r&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:s,dtype:r,values:e,usage:_n.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,s,r,a,o){if(z().getBool("DEBUG")&&this.checkNumericalProblems(s),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:a,values:s,usage:_n.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const s=this.texData.get(e),{values:r,dtype:a,complexTensorInfos:o,slice:i,shape:l,isPacked:u}=s;if(null!=i){let p;p=u?new hr(l,cr):new ks(l,cr);const f=this.runWebGLProgram(p,[{dataId:e,shape:l,dtype:a}],a),g=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(null!=r)return this.convertAndCacheOnCPU(e);if("string"===a)return r;const c=null!=this.activeTimers;let h,d;return c&&(h=hn()),d="complex64"===a?Ls(this.readSync(o.real.dataId),this.readSync(o.imag.dataId)):this.getValuesFromTexture(e),c&&(this.downloadWaitMs+=hn()-h),this.convertAndCacheOnCPU(e,d)}read(e){var s=this;return(0,T.Z)(function*(){if(s.pendingRead.has(e)){const m=s.pendingRead.get(e);return new Promise(y=>m.push(y))}const r=s.texData.get(e),{values:a,shape:o,slice:i,dtype:l,complexTensorInfos:u,isPacked:c}=r;if(null!=i){let m;m=c?new hr(o,cr):new ks(o,cr);const y=s.runWebGLProgram(m,[{dataId:e,shape:o,dtype:l}],l),x=s.read(y.dataId);return s.disposeIntermediateTensorInfo(y),x}if(null!=a)return s.convertAndCacheOnCPU(e);if(z().getBool("DEBUG")&&!z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===z().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d,p,h=null;if("complex64"!==l&&z().get("WEBGL_BUFFER_SUPPORTED")){d=s.decode(e);const m=s.texData.get(d.dataId);h=s.gpgpu.createBufferFromTexture(m.texture.texture,...rc(o))}if(s.pendingRead.set(e,[]),"complex64"!==l&&(yield s.gpgpu.createAndWaitForFence()),"complex64"===l){const m=yield Promise.all([s.read(u.real.dataId),s.read(u.imag.dataId)]);p=Ls(m[0],m[1])}else if(null==h)p=s.getValuesFromTexture(e);else{const m=I(o);p=s.gpgpu.downloadFloat32MatrixFromBuffer(h,m)}if(null!=d&&s.disposeIntermediateTensorInfo(d),null!=h){const m=s.gpgpu.gl;pe(m,()=>m.deleteBuffer(h))}const f=s.convertAndCacheOnCPU(e,p),g=s.pendingRead.get(e);return s.pendingRead.delete(e),g.forEach(m=>m(f)),s.pendingDisposal.has(e)&&(s.pendingDisposal.delete(e),s.disposeData(e)&&ds().removeDataId(e,s),s.pendingDeletes--),f})()}readToGPU(e,s={}){const r=this.texData.get(e),{values:a,shape:o,slice:i,dtype:l,isPacked:u,texture:c}=r;if("complex64"===l)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let f;f=u?new hr(o,cr):new ks(o,cr);const g=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:l}],l),m=this.readToGPU(g,s);return this.disposeIntermediateTensorInfo(g),m}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const h=this.decode(e,s.customTexShape),d=ds().makeTensorFromTensorInfo(h),p=this.texData.get(h.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const s=this.readSync(e.dataId);if("string"===e.dtype)try{const r=s.map(a=>$s(a));return Ge(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ge(e.shape,e.dtype,s)}checkNumericalProblems(e){if(null!=e)for(let s=0;s<e.length;s++){const r=e[s];if(!iz(r))throw z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:s,dtype:r,isPacked:a}=this.texData.get(e),o=I(s);if(z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(e),f=this.texData.get(p.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...rc(s)).subarray(0,o);return this.disposeIntermediateTensorInfo(p),g}const i=z().getBool("WEBGL_PACK")&&!0===a,l=i?ic(s):s,u=i?new I3(l):new v3(l),c=this.runWebGLProgram(u,[{shape:l,dtype:r,dataId:e}],"float32"),h=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture.texture,h.texShape[0],h.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){var s=this;const r=this.activeTimers,a=[];let o=!1;null==this.programTimersStack?(this.programTimersStack=a,o=!0):this.activeTimers.push(a),this.activeTimers=a,e();const i=Hs(this.activeTimers.map(c=>c.query)).filter(c=>null!=c),l=Hs(this.activeTimers.map(c=>c.name)).filter(c=>null!=c);this.activeTimers=r,o&&(this.programTimersStack=null);const u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(0,T.Z)(function*(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=yield Promise.all(i);u.kernelMs=en(c),u.getExtraProfileInfo=()=>c.map((h,d)=>({name:l[d],ms:h})).map(h=>`${h.name}: ${h.ms}`).join(", ")}else u.kernelMs={error:"WebGL query timers are not supported in this environment."};return s.uploadWaitMs=0,s.downloadWaitMs=0,u})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:hn(),endMs:null}}endTimer(e){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=hn(),e)}getQueryTime(e){var s=this;return(0,T.Z)(function*(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?s.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs})()}disposeData(e,s=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(s?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!s&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return null!=r&&(this.disposeData(r.real.dataId,s),this.disposeData(r.imag.dataId,s)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:s,dtype:r,texShape:a,usage:o,isPacked:i,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),null!=s&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(s,a,o,i)));const h=this.texData.get(e);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,s=eW){return z().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>null==this.texData.get(r.dataId).texture&&I(r.shape)<s)}getGPGPUContext(){return this.gpgpu}where(e){En("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const s=e.dataSync();return ZB(e.shape,s)}packedUnaryOp(e,s,r){const a=new hr(e.shape,s),o=this.compileAndRun(a,[e],r);return ds().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const a=h1(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,x1,e.dtype);const s=new ks(e.shape,x1),r=this.compileAndRun(s,[e]);return ds().makeTensorFromTensorInfo(r)}makeTensorInfo(e,s,r){let a;if("string"===s&&null!=r&&r.length>0&&Qr(r[0])){const o=r.map(i=>_s(i));a=this.write(o,e,s)}else a=this.write(r,e,s);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:s}}makeOutput(e,s,r){return ds().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,r),this)}unpackTensor(e){const s=new XB(e.shape);return this.runWebGLProgram(s,[e],e.dtype)}packTensor(e){const s=new RB(e.shape);return this.runWebGLProgram(s,[e],e.dtype,null,!0)}packedReshape(e,s){const r=[Na(e.shape),...ka(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},o=[Na(s),...ka(s)],i=new f1(o,r),c=this.runWebGLProgram(i,[a],e.dtype,[r],!0);return{dataId:c.dataId,shape:s,dtype:c.dtype}}decode(e,s){const r=this.texData.get(e),{isPacked:a,shape:o,dtype:i}=r;null!=s&&S(I(o)<=s[0]*s[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const l=ic(o);let u;u=a?new w3(l):new b3(l);const h=[null!=s?s:rc(l)];return{dtype:i,shape:o,dataId:this.runWebGLProgram(u,[{shape:l,dtype:i,dataId:e}],i,h,!0,s).dataId}}runWebGLProgram(e,s,r,a,o=!1,i){const l=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Sa.DENSE){const x=null!=i?i:rc(e.outputShape);u.texShape=x.map(b=>2*b)}if(null!=e.outTexUsage&&(u.usage=e.outTexUsage),0===I(l.shape))return u.values=rt(l.dtype,0),l;const c=[],h=s.map(x=>{if("complex64"===x.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(null==b.texture){if(!e.packedInputs&&I(x.shape)<=z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!e.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!uc(b.shape,x.shape)){const w=x,v=x.shape;x.shape=b.shape,x=this.packedReshape(x,v),c.push(x),b=this.texData.get(x.dataId),w.shape=v}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(l.dataId);const d={shape:l.shape,texData:u,isUniform:!1},p=function x3(n,t,e){let s="";t.concat(e).forEach(o=>{const i=null!=o.texData&&null!=o.texData.slice&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=_f(n.packedInputs,o.shape,l);let d="",p="",f="";if(1===c.length&&n.packedInputs){const v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(2!==c.length||n.packedInputs){if(c.length>2&&!n.packedInputs){const v=ke(c);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}}else p=`${c[0]>1}_${c[1]>1}`;const g=o.shape.length,m=2===c.length&&de(o.shape,l),y=1===I(o.shape),x=la(o.shape,e.shape),b=!n.packedInputs&&g===e.shape.length&&de(l,e.texData.texShape);s+=`${g}_${b}_${u?h:""}_${c.length}_${y}_${x}_${m}_${d}_${p}_${f}_${n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`}_${i}`}else s+=`${o.shape}_${o.isUniform?"uniform":o.texData.texShape}_${i}`});let a=n.constructor.name;return a+="_"+s+"_"+n.userCode+`${z().getNumber("WEBGL_VERSION")}`,a}(e,h,d),f=this.getAndSaveBinary(p,()=>function g3(n,t,e,s){const r=e.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:!c.isUniform&&c.texData.isPacked,flatOffset:null};return null!=c.texData&&null!=c.texData.slice&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=Oz(r,o,t),l=function cz(n,t){const e=zs(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pe(n,()=>n.shaderSource(e,t)),pe(n,()=>n.compileShader(e)),z().get("ENGINE_COMPILE_ONLY"))return e;if(!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw qw(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}(n.gl,i),u=n.createProgram(l);return z().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o},n1(n,t,u))}(this.gpgpu,e,h,d)),g=null!=this.activeTimers;let m;g&&(m=this.startTimer()),z().get("ENGINE_COMPILE_ONLY")||function y3(n,t,e,s,r){t.program.enableShapeUniforms||(s1(t.inShapeInfos,e),s1([t.outShapeInfo],[s]));const a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):n.setOutputMatrixTexture(a.texture,o[0],o[1]),n.setProgram(t.webGLProgram),1===z().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&n.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&n.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){const u=e[l],{uniform:c,offset:h,shape:d,texShape:p}=t.variablesLocations[l];if(d){const{uniformShape:f}=_f(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f))}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),null!=c){if(u.isUniform){if(I(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}null!=u.texData.slice&&null!=h&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const l=ke(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l))}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){const u=t.program.customUniforms[l],c=t.customUniformLocations[l],h=r[l];if("float"===u.type)n.gl.uniform1fv(c,h);else if("vec2"===u.type)n.gl.uniform2fv(c,h);else if("vec3"===u.type)n.gl.uniform3fv(c,h);else if("vec4"===u.type)n.gl.uniform4fv(c,h);else if("int"===u.type)n.gl.uniform1iv(c,h);else if("ivec2"===u.type)n.gl.uniform2iv(c,h);else if("ivec3"===u.type)n.gl.uniform3iv(c,h);else{if("ivec4"!==u.type)throw Error(`uniform type ${u.type} is not supported yet.`);n.gl.uniform4iv(c,h)}}n.executeProgram()}(this.gpgpu,f,h,d,a),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),g&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const y=z().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const x=hn();x-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!z().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===o){const x=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),x}return l}compileAndRun(e,s,r,a,o=!1){return this.runWebGLProgram(e,s,r=r||s[0].dtype,a,o)}getAndSaveBinary(e,s){return e in this.binaryCache||(this.binaryCache[e]=s()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(s=>{this.gpgpu.deleteProgram(this.binaryCache[s].webGLProgram),delete this.binaryCache[s]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=V(()=>{if(!z().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=z().getBool("DEBUG");z().set("DEBUG",!1);const s=this.abs(Ve(1e-8)).dataSync()[0];if(z().set("DEBUG",e),s>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const s=this.texData.get(e),{shape:r,dtype:a,values:o,texture:i,usage:l,isPacked:u}=s;if(null!=i)return;const c=null!=this.activeTimers;let h;c&&(h=hn());let d=s.texShape;if(null==d&&(d=function Cz(n,t=!1){let e=z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e*=2,s*=2,1===(n=n.map((i,l)=>l>=n.length-2?Le(n[l]):n[l])).length&&(n=[2,n[0]])),2!==n.length&&(n=dt(n).newShape);let r=I(n),a=null;n.length<=1&&r<=e?a=[1,r]:2===n.length&&n[0]<=e&&n[1]<=e?a=n:3===n.length&&n[0]*n[1]<=e&&n[2]<=e?a=[n[0]*n[1],n[2]]:3===n.length&&n[0]<=e&&n[1]*n[2]<=e?a=[n[0],n[1]*n[2]]:4===n.length&&n[0]*n[1]*n[2]<=e&&n[3]<=e?a=[n[0]*n[1]*n[2],n[3]]:4===n.length&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(a=[n[0],n[1]*n[2]*n[3]]);const o=null!=a&&Math.max(...a)>s&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||o)if(t){const i=Na(n);let l=2,u=2;n.length&&([l,u]=ka(n)),r=i*(l/2)*(u/2),a=st(r).map(c=>2*c)}else a=st(r);return a}(r,u),s.texShape=d),null!=o){const p=ic(r);let f,g=d[1],m=d[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!y)&&([g,m]=Ca(d[0],d[1])),f=u?new C3(p,y):new r1(p,y);const x=y?[m,g]:d,b=this.makeTensorInfo(x,a),w=this.texData.get(b.dataId);w.usage=y?_n.PIXELS:_n.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),g,m,o);const k=this.runWebGLProgram(f,[b],a,[[m,g]],!0),_=this.texData.get(k.dataId);s.texShape=_.texShape,s.isPacked=_.isPacked,s.usage=_.usage,z().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(s.texture=_.texture,s.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=hn()-h)}else{const p=this.acquireTexture(d,l,a,u);s.texture=p}}convertAndCacheOnCPU(e,s){const r=this.texData.get(e),{dtype:a}=r;return null!=s&&(r.values=function rW(n,t){if("float32"===t||"complex64"===t)return n;if("int32"===t||"bool"===t){const e="int32"===t?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}throw new Error(`Unknown dtype ${t}`)}(s,a)),r.values}acquireTexture(e,s,r,a){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,s,a)}computeBytes(e,s){return e[0]*e[1]*Pa(s)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){var e=this;return(0,T.Z)(function*(){const s=[];if(e.gpgpu.parallelCompilationExtension){for(const[,r]of Object.entries(e.binaryCache))s.push(e.checkCompletionAsync_(r));return Promise.all(s)}for(const[,r]of Object.entries(e.binaryCache)){const a=new Promise(o=>{try{e.checkCompletion_(r),o(!0)}catch(i){throw i}});s.push(a)}return Promise.all(s)})()}checkCompletionAsync_(e){var s=this;return(0,T.Z)(function*(){return s.gpgpu.gl.getProgramParameter(e.webGLProgram,s.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?s.checkCompletion_(e):(yield jg(),s.checkCompletionAsync_(e))})()}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(qw(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){const{variablesLocations:s,customUniformLocations:r,infLoc:a,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=n1(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=s,e.customUniformLocations=r,e.infLoc=a,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,s,r){e.channels=e.channels||"RGBA";const{texture:a,height:o,width:i,channels:l}=e,u=ds().backend;if(!u.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(a,s,r,o,i,l);return ds().makeTensorFromDataId(c,s,r,u)}}return n.nextDataId=0,n})();Tm()&&Gm("webgl",()=>new sW,2);class Da{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Me(e,s),this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Kr="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Si{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Me(e,s);const a=this.outputShape.length;this.enableShapeUniforms=un(a);let o="";if(r)if(0===a||1===I(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(o=`\n          ${ct(a)} coords = getOutputCoords();\n        `,1===a)o+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const l=xn("coords",a);o+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${l[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${l[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${l[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${l[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function $n(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const iW={kernelName:so,backendName:"webgl",kernelFunc:$n};function dr(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,a=e.makeTensorInfo(s.shape,"complex64"),o=e.texData.get(a.dataId),i=$n({inputs:{x:s},backend:e}),l=$n({inputs:{x:r},backend:e});return o.complexTensorInfos={real:i,imag:l},a}const lW={kernelName:Oc,backendName:"webgl",kernelFunc:dr},b1="return (a < 0.) ? b * a : a;",w1="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",cW={kernelName:tl,backendName:"webgl",kernelFunc:function uW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:a}=s,o=e.makeTensorInfo([],"float32",Ts(a,"float32")),i=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Si(w1,r.shape,o.shape):new Da(b1,r.shape,o.shape),l=e.runWebGLProgram(i,[r,o],"float32");return e.disposeIntermediateTensorInfo(o),l}},v1="return (a < 0.) ? b * a : a;",I1="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",dW={kernelName:wl,backendName:"webgl",kernelFunc:function hW(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,a=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Si(I1,s.shape,r.shape):new Da(v1,s.shape,r.shape);return e.runWebGLProgram(a,[s,r],"float32")}};function et({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:a})=>{const{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=e){const h=i.texData.get(o.dataId),d=e(h.values,l);return i.makeTensorInfo(o.shape,l,d)}let c;return c=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new hr(o.shape,t):new ks(o.shape,n),i.runWebGLProgram(c,[o],l)}}function an({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{const{a:l,b:u}=o,c=i;if(s&&"complex64"===l.dtype){const f=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[m,y]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(b=>{const[w,v]=b,C={dataId:w.dataId,dtype:w.dtype,shape:l.shape},k={dataId:v.dataId,dtype:v.dtype,shape:u.shape},_=new Da(n,l.shape,u.shape);return c.runWebGLProgram(_,[C,k],Cn(w.dtype,v.dtype))}),x=dr({inputs:{real:m,imag:y},backend:c});return c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(y),x}const h=a||Cn(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const f=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,m="string"===l.dtype?Vs(f):f,y="string"===l.dtype?Vs(g):g,[x,b]=r(l.shape,u.shape,m,y,h),w=c.makeTensorInfo(b,h);return c.texData.get(w.dataId).values=x,w}let p;return p=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Si(t,l.shape,u.shape,e):new Da(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function Ci(n,t=!1){if("linear"===n)return"return x;";if("relu"===n)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===n)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===n)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===n)return t?I1:v1;if("leakyrelu"===n)return t?w1:b1;if("sigmoid"===n)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}class S1{constructor(t,e,s,r=!1,a=!1,o=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=un(this.outputShape.length);const h=Math.ceil((r?t[1]:t[2])/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",y="";i&&(m=l?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,y="result = activation(result);");const x=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",w="rc.x";t[0]<e[0]?b=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(w=`imod(rc.x, ${e[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${w};\n        for (int i = 0; i < ${h}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${g[0]});\n          result += (${f[1]} * ${g[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${x}\n\n        ${y}\n\n        setOutput(result);\n      }\n    `}}class N1{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Me(e,s),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const k1="return a * b;";function Af(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,a=Cn(s.dtype,r.dtype);if("complex64"===s.dtype){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),u=new N1("return areal * breal - aimag * bimag;",s.shape,r.shape),c=new N1("return areal * bimag + aimag * breal;",s.shape,r.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=e.runWebGLProgram(u,h,"float32"),p=e.runWebGLProgram(c,h,"float32"),f=dr({inputs:{real:d,imag:p},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,r])){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),[u,c]=lB(s.shape,r.shape,i.values,l.values,a),h=e.makeTensorInfo(c,a);return e.texData.get(h.dataId).values=u,h}let o;return o=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Si(k1,s.shape,r.shape):new Da(k1,s.shape,r.shape),e.runWebGLProgram(o,[s,r],a)}const pW={kernelName:fo,backendName:"webgl",kernelFunc:Af};function he(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:a}=s,o=e,i=I(r.shape),l=kt(a,i),u=I(l);S(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(r.dataId);return!c.isPacked||uc(r.shape,l)||null!==c.texture&&uc(c.shape,l)?(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function fW(n,t,e){const s=[Na(n.shape),...ka(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},a=[Na(t),...ka(t)],o=new f1(a,s),u=e.runWebGLProgram(o,[r],n.dtype,[s],!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,l,o)}const mW={kernelName:Il,backendName:"webgl",kernelFunc:he};class T1{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:a,outSize:o}=t;this.outputShape=[r,o];const i=4*Math.floor(s/4),l=s%4;let u="sumValue += dot(values, ones);";if(null!=e){const h=1/e;u=`sumValue += dot(values * ${qe(h)?h.toPrecision(2):h}, ones);`}let c="";a%s>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class gW{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:a,outSize:o}=t;this.outputShape=[r,o];let i="0.0",l="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",l="min"):"max"===e&&(i="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(s/4),h=s%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${l}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${l}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===e?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let f="";a%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Xr(n,t,e,s){const r=function yW(n){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const e=t.length?t[t.length-1].outSize:n[1],s=pu(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}(n.shape);let a=n;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:l,outSize:u}=r[o];let c,h;c="mean"===e?0===o?new T1({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u},i):new T1({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u}):new gW({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u},e),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class xW{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[e[o]];this.outputShape=s,this.rank=s.length;const r=ct(this.rank),a=function bW(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class wW{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let c=0;c<s.length;c++)s[c]=t[e[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ct(this.rank),a=p1("rc",this.rank),o=new Array(this.rank);for(let c=0;c<e.length;c++)o[e[c]]=a[c];const i=`vec2(${o.slice(-2).join()})`,l=`++${a[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${l}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${s[this.rank-2]}) {\n        result[2] = ${u};\n        if(${l}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function mc(n,t,e){const s=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wW(n.shape,t):new xW(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}function gc(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;return function vW(n,t,e,s){const a=n.shape.length,o=$e(t,n.shape);let i=o;const l=_t(i,a),u=null!=l;let c=n;u&&(c=mc(n,l,s),i=Pt(i.length,a)),rn("sum",i,a);const[h,d]=Zt(c.shape,i);let p=h;e&&(p=Ft(h,o));const f=I(d),y=he({inputs:{x:c},attrs:{shape:[I(n.shape)/f,f]},backend:s}),b=Xr(y,_h(n.dtype),"sum",s),w=he({inputs:{x:b},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(b),u&&s.disposeIntermediateTensorInfo(c),w}(r,a,o,e)}const IW={kernelName:_l,backendName:"webgl",kernelFunc:gc};function bn(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:a}=s,o=e,l=new Array(r.shape.length);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];let u;if(o.shouldExecuteOnCPU([r])){const h=o.texData.get(r.dataId).values,d=Ef(h,r.shape,r.dtype,a,l);u=o.makeTensorInfo(l,r.dtype),o.texData.get(u.dataId).values=d}else u=mc(r,a,o);return u}const SW={kernelName:ea,backendName:"webgl",kernelFunc:bn};function yc({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){const u=n.shape.length,c=t.shape.length,h=e?n.shape[u-2]:n.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=e?n.shape[u-1]:n.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],g=n.shape.slice(0,-2),m=t.shape.slice(0,-2),y=I(g),x=I(m),w=Me(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);S(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const v=e?[y,h,p]:[y,p,h],C=s?[x,f,d]:[x,d,f],k=he({inputs:{x:n},backend:r,attrs:{shape:v}}),_=he({inputs:{x:t},backend:r,attrs:{shape:C}}),$=[k,_],E=Math.max(y,x),P=e?k.shape[1]:k.shape[2],B=null!=a,U=null!=o,G="leakyrelu"===l,H=null!=l?Ci(l,!0):null;let X;if((1===p||1===f)&&P>1e3&&!1===(B||U||G||null!=H)){let Z=k,ae=_;e&&(Z=bn({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),$.push(Z)),s&&(ae=bn({inputs:{x:_},backend:r,attrs:{perm:[0,2,1]}}),$.push(ae));const ue=1===f;let le=Z;1!==f&&(le=he({inputs:{x:Z},backend:r,attrs:{shape:[E,P,1]}}),$.push(le));const ye=1===f?2:1;let ce=ae;ue&&(ce=he({inputs:{x:ae},backend:r,attrs:{shape:[E,1,P]}}),$.push(ce));const xe=Af({inputs:{a:le,b:ce},backend:r});X=gc({inputs:{x:xe},backend:r,attrs:{axis:ye,keepDims:!0}}),$.push(xe)}else{const Z=Cn(n.dtype,t.dtype),ae=new S1(v,C,[E,p,f],e,s,B,H,U,G),ie=[k,_];if(null!=a&&ie.push(a),U&&ie.push(o),G){const ue=r.makeTensorInfo([],"float32",Ts(i,"float32"));ie.push(ue),$.push(ue)}X=r.runWebGLProgram(ae,ie,Z)}const j=he({inputs:{x:X},backend:r,attrs:{shape:w}});$.push(X);for(const Z of $)r.disposeIntermediateTensorInfo(Z);return j}const NW={kernelName:Pl,backendName:"webgl",kernelFunc:function CW(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return yc({a:r,b:a,transposeA:l,transposeB:u,backend:e,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}},$1="return abs(x);",TW={kernelName:Fi,backendName:"webgl",kernelFunc:function kW(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const a=e.texData.get(s.dataId),o=h1(a.values);return e.makeTensorInfo(s.shape,s.dtype,o)}let r;return r=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hr(s.shape,$1):new ks(s.shape,$1),e.runWebGLProgram(r,[s],s.dtype)}},$W=et({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),EW={kernelName:La,backendName:"webgl",kernelFunc:$W},AW=et({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),RW={kernelName:Va,backendName:"webgl",kernelFunc:AW},E1="return a + b;",OW=an({opSnippet:E1,packedOpSnippet:E1,supportsComplex:!0,cpuKernelImpl:W3}),FW={kernelName:Jr,backendName:"webgl",kernelFunc:OW};class PW{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((a,o)=>`T${o}`);const s=[];this.variableNames.forEach(a=>{s.push(`float v${a} = get${a}AtOutCoords();`)});const r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class LW{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((a,o)=>`T${o}`);const s=[];this.variableNames.forEach(a=>{s.push(`vec4 v${a} = get${a}AtOutCoords();`)});const r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const VW={kernelName:_c,backendName:"webgl",kernelFunc:function xc(n){const{inputs:t,backend:e}=n,s=t;if(1===s.length)return $n({inputs:{x:s[0]},backend:e});if(s.length>z().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=xc({inputs:s.slice(0,l),backend:e}),c=xc({inputs:s.slice(l),backend:e});return xc({inputs:[u,c],backend:e})}const r=s.map(l=>l.dtype).reduce((l,u)=>Cn(l,u)),a=s.map(l=>l.shape),i=z().getBool("WEBGL_PACK")?new LW(s[0].shape,a):new PW(s[0].shape,a);return e.runWebGLProgram(i,s,r)}},zW={kernelName:"All",backendName:"webgl",kernelFunc:function MW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=$e(a,r.shape);let u=l;const c=_t(u,i);let h=r;null!=c&&(h=bn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Pt(u.length,i)),rn("all",u,i);const[d,p]=Zt(h.shape,u),g=he({inputs:{x:h},backend:e,attrs:{shape:[-1,I(p)]}}),m=Xr(g,g.dtype,"all",e);let y;return y=he(o?{inputs:{x:m},backend:e,attrs:{shape:Ft(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}},WW={kernelName:"Any",backendName:"webgl",kernelFunc:function BW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=$e(a,r.shape);let u=l;const c=_t(u,i);let h=r;null!=c&&(h=bn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Pt(u.length,i)),rn("any",u,i);const[d,p]=Zt(h.shape,u),g=he({inputs:{x:h},backend:e,attrs:{shape:[-1,I(p)]}}),m=Xr(g,g.dtype,"any",e);let y;return y=he(o?{inputs:{x:m},backend:e,attrs:{shape:Ft(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}};class UW{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class GW{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=Math.ceil(t[t.length-1]/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,u=ct(l),c=xn("coords",l);let h,d;if(1===o){d=l+1;const _=ct(d);h=`\n        ${_} sourceLocR = ${_}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${_} sourceLocG = ${_}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${_} sourceLocA = ${_}(${c.join()}, 0);\n        --${c[l-1]};\n        ${_} sourceLocB = ${_}(${c.join()}, 0);\n        --${c[l-2]};`}else d=l,h=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],g=p.map(_=>"int "+_),m=xn("sourceLocR",d-1).concat("inIdx.r"),y=xn("sourceLocG",d-1).concat("inIdx.g"),x=xn("sourceLocB",d-1).concat("inIdx.b"),b=xn("sourceLocA",d-1).concat("inIdx.a"),w="max"===s?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,C=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${C};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${C};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function D1(n,t,e,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const o=pu(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new UW(i,e,null==s),u=[t];null!=s&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=D1(n,t,e,c);return n.disposeIntermediateTensorInfo(c),h}function A1(n,t,e,s=null){const r=null!=s?s.shape:t.shape,o=pu(r[r.length-1]),i=new GW(r,o,e,null==s),u=n.runWebGLProgram(i,null==s?[t]:[t,s],"int32");if(u.shape.length===t.shape.length){const c=A1(n,t,e,u);return n.disposeIntermediateTensorInfo(u),c}return u}function R1(n,t,e,s){const r=[e];if(rn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!z().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const a=[],o=n.texData.get(t.dataId);let l=t;null!==o&&o.isPacked&&(l=n.unpackTensor(t),a.push(l));const[u,c]=Zt(l.shape,r),h=I(c),d=he({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});a.push(d);const p=D1(n,d,s);a.push(p);const f=he({inputs:{x:p},backend:n,attrs:{shape:u}});return a.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}return A1(n,t,s)}const jW={kernelName:Pi,backendName:"webgl",kernelFunc:function HW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a}=s;let o=$e(a,r.shape);const i=_t(o,r.shape.length);let l=r;const u=[];null!=i&&(l=bn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),o=Pt(o.length,l.shape.length)),rn("argMax",[o[0]],l.shape.length);const c=R1(e,l,o[0],"max");return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),c}},KW={kernelName:Li,backendName:"webgl",kernelFunc:function qW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a}=s;let o=$e(a,r.shape);const i=_t(o,r.shape.length);let l=r;const u=[];null!=i&&(l=bn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),o=Pt(o.length,l.shape.length)),rn("argMin",[o[0]],l.shape.length);const c=R1(e,l,o[0],"min");return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),c}},ZW=et({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),YW={kernelName:Ma,backendName:"webgl",kernelFunc:ZW},JW=et({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),e4={kernelName:za,backendName:"webgl",kernelFunc:JW},n4=et({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),s4={kernelName:Ba,backendName:"webgl",kernelFunc:n4},o4=an({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),i4={kernelName:Ua,backendName:"webgl",kernelFunc:o4},u4=et({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),c4={kernelName:Wa,backendName:"webgl",kernelFunc:u4};class Ni{constructor(t,e,s,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,i=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const g="avg"===e;let x="0.0";if(g||(x="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${l});\n        const ivec2 pads = ivec2(${p}, ${f});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`:`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(o/4),C=o%4,k=`\n      if (${g}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${l});\n      const ivec2 pads = ivec2(${p}, ${f});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===C}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===C}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===C}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${w});\n      }\n    `}}class Rf{constructor(t,e,s,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,i=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,g=t.effectiveFilterWidth,m=t.padInfo.front,y=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let w="0.0";if(b||(w="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${l}, ${u});\n        const ivec3 pads = ivec3(${m}, ${y}, ${x});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${f};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${g};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${g} +\n                      wR * ${g} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(C="avgValue / max(count, 1.0)");const k=4*Math.floor(o/4),_=o%4,$=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${l}, ${u});\n      const ivec3 pads = ivec3(${m}, ${y}, ${x});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${f};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${$}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${$}\n            }\n          }\n        }\n        setOutput(${C});\n      }\n    `}}const d4={kernelName:Vi,backendName:"webgl",kernelFunc:function h4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;vi(r,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s;S(sn(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=Wn(r.shape,a,o,1,i,l);if(1===c.filterWidth&&1===c.filterHeight&&de(c.inShape,c.outShape))return $n({inputs:{x:r},backend:e});const h=new Ni(c,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}},f4={kernelName:Mi,backendName:"webgl",kernelFunc:function p4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s,h=Ds(r.shape,a,o,[1,1,1],i,l,u),d=new Rf(h,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}};class m4{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const l=t.effectiveFilterHeight,u=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${l-1-t.padInfo.top}, ${u-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l};\n            wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${t.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class g4{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${h-1-t.padInfo.front}, ${d-1-t.padInfo.top}, ${p-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterDepth*t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const x4={kernelName:Ac,backendName:"webgl",kernelFunc:function y4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,d=Ds(o.shape,i,l,[1,1,1],u,c),p=new g4(d);return e.runWebGLProgram(p,[r],o.dtype)}},w4={kernelName:Dc,backendName:"webgl",kernelFunc:function b4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,o=a;vi([r,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=s,c=Wn(o.shape,i,l,1,u),h=new m4(c);return e.runWebGLProgram(h,[r],o.dtype)}},I4={kernelName:zi,backendName:"webgl",kernelFunc:function v4(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return yc({a:r,b:a,transposeA:o,transposeB:i,backend:e})}};class S4{constructor(t,e,s,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],Me(t,e),Me(t,s);let i="0.0";null!=r&&(Me(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";null!=a&&(Me(t,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class C4{constructor(t,e,s,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Me(t,e),Me(t,s);let i="vec4(0.0)";null!=r&&(Me(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=a&&(Me(t,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const N4={kernelName:Qi,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:a,offset:o,scale:i}=n;S(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(null==o||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(null==i||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=o&&(c=o.shape,u.push(o));let h=null;null!=i&&(h=i.shape,u.push(i));const d=z().getBool("WEBGL_PACK_NORMALIZATION")?new C4(s.shape,r.shape,a.shape,c,h,l):new S4(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class k4{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ct(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=function T4(n){if(1===n)return"sourceLoc";if(n<=6)return Of.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((o,i)=>`sourceLoc.${Of[i]} = start[${i}] + coords.${Of[i]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}}const Of=["x","y","z","w","u","v"];class _4{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=ct(this.rank),s=xn("coords",this.rank),r=xn("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${o};\n      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${o};\n        --${r[this.rank-1]};\n      }\n    `,l=1===this.rank?"":`\n      --${s[this.rank-1]};\n      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${o};\n        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((c,h)=>`start[${h}]`).join()});`:t.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${l}\n        setOutput(result);\n      }\n    `}}function Ra(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:a,size:o}=s,[i,l]=Yl(r,a,o);if(ed(r,i,l),0===I(l))return e.makeTensorInfo(l,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||"string"===r.dtype){const h=e.texData.get(r.dataId),d=bB(h.values,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=e.texData.get(r.dataId),c=nd(r.shape,i,l);if(u||!c){const h=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _4(l):new k4(l);return e.runWebGLProgram(h,[r],r.dtype,[i])}return e.uploadToGPU(r.dataId),function $4(n,t,e,s){const r=s.texData.get(n.dataId),a=s.makeTensorInfo(e,n.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=e,o.dtype=n.dtype;let i=sd(t,ke(n.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}(r,i,l,e)}const E4={kernelName:Tl,backendName:"webgl",kernelFunc:Ra},D4={kernelName:Bi,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:a,crops:o}=s;S(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=a.reduce((x,b)=>x*b),l=Jo(r.shape,a,i),u=ei(l.length,a.length),c=ti(r.shape,a,i),h=Md(o,a.length),d=zd(c,o,a.length),p=[],f=he({inputs:{x:r},backend:e,attrs:{shape:l}}),g=bn({inputs:{x:f},backend:e,attrs:{perm:u}}),m=he({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Ra({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach(x=>e.disposeIntermediateTensorInfo(x)),y}},R4={kernelName:Rc,backendName:"webgl",kernelFunc:function A4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:a}=t,{size:o}=s,i=e.readSync(r.dataId),l=e.readSync(a.dataId),u=c1(i,l,a.dtype,a.shape,o);return e.makeTensorInfo([o],a.dtype,u)}},F4={kernelName:Zf,backendName:"webgl",kernelFunc:function O4(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,a=e.readSync(s.dataId),o=e.readSync(r.dataId),i=Me(Array.from(a),Array.from(o));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},O1=an({opSnippet:"return float(a != b);",cpuKernelImpl:cB,dtype:"bool"}),P4={kernelName:ml,backendName:"webgl",kernelFunc:O1};function ki(n){const{inputs:t,backend:e}=n,{input:s}=t;return $n({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.real},backend:e})}const L4={kernelName:ah,backendName:"webgl",kernelFunc:ki},z4={kernelName:Ga,backendName:"webgl",kernelFunc:function Ff(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return $n({inputs:{x:r},backend:e});const o=Wt(r.shape),i=Ff({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=dr({inputs:{real:i,imag:o},backend:e});return o.dispose(),e.disposeIntermediateTensorInfo(i),l}if("complex64"===r.dtype){const o=ki({inputs:{input:r},backend:e}),i=Ff({inputs:{x:o},backend:e,attrs:{dtype:a}});return e.disposeIntermediateTensorInfo(o),i}if(!Cc(r.dtype,a)){const o=$n({inputs:{x:r},backend:e});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(e.shouldExecuteOnCPU([r])){const o=e.texData.get(r.dataId).values,[i,l,u]=G3(o,r.shape,r.dtype,a);return e.makeTensorInfo(i,l,u)}if("int32"===a)return function M4(n,t){const e=new ks(n.shape,"return float(int(x));"),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(r,e);if("bool"===a){const o=e.makeTensorInfo([],"bool",rt("bool",1)),l=O1({inputs:{a:r,b:o},backend:e});return e.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}},F1="return ceil(x);",B4=et({opSnippet:F1,packedOpSnippet:F1,cpuKernelImpl:H3}),W4={kernelName:Ha,backendName:"webgl",kernelFunc:B4};class U4{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class G4{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const j4={kernelName:ja,backendName:"webgl",kernelFunc:function H4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s;let i;return i=z().getBool("WEBGL_PACK_CLIP")?new G4(r.shape):new U4(r.shape),e.runWebGLProgram(i,[r],r.dtype,[[a],[o]])}};class q4{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function P1(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}const X4={kernelName:Wi,backendName:"webgl",kernelFunc:function K4(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),a=new q4(s.shape),o=[P1(s,r.complexTensorInfos.real),P1(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(a,o,o[0].dtype)}};class Z4{constructor(t){this.outputShape=[],this.outputShape=gs(t,1),this.variableNames=t.map((o,i)=>`T${i}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++)s.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${e[o-1]}));`);s.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${s.join("\n        ")}\n      }\n    `}}class Y4{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=gs(t,e);const s=this.outputShape,r=s.length,a=ct(r),o=xn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((g,m)=>`T${m}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];const u=i[e],c=i.slice(-2),h=i.join();let d=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`\n        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {\n          return getChannel(\n            getT${g}(${bc(i,u,m)}),\n            vec2(${bc(c,u,m)}));\n        }`}const f=l[l.length-1];d+=`\n        return getChannel(\n          getT${l.length}(${bc(i,u,f)}),\n          vec2(${bc(c,u,f)}));`,this.userCode=`\n      float getValue(${i.map(g=>"int "+g)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${s[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${s[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${s[r-2]} &&\n            ${o[r-1]} < ${s[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function bc(n,t,e){const s=n.indexOf(t);return n.map((a,o)=>o===s?`${a} - ${e}`:a).join()}function wc(n){const{inputs:t,backend:e}=n,{input:s}=t;return $n({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.imag},backend:e})}const Q4={kernelName:Yc,backendName:"webgl",kernelFunc:wc};function Ti(n,t,e){const s=n[0].dtype;if("complex64"===s){const p=n.map(x=>ki({inputs:{input:x},backend:e})),f=n.map(x=>wc({inputs:{input:x},backend:e})),g=Ti(p,t,e),m=Ti(f,t,e),y=dr({inputs:{real:g,imag:m},backend:e});return p.forEach(x=>e.disposeIntermediateTensorInfo(x)),f.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),y}let r=e.shouldExecuteOnCPU(n);if("string"===s&&(r=!0),r){const p=n.map(w=>{const v=I(w.shape.slice(t));return he({inputs:{x:w},backend:e,attrs:{shape:[-1,v]}})}),f=p.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),g=gs(p.map(w=>w.shape),1),y=j3(f,g,s,1===p[0].shape[0]),x=gs(n.map(w=>w.shape),t),b=e.makeTensorInfo(x,s,y);return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),b}const a=n.filter(p=>I(p.shape)>0),o=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const p=o?new ks(n[0].shape,cr):new hr(n[0].shape,cr);return e.runWebGLProgram(p,n,s)}const i=z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>i){const p=[];for(let g=0;g<a.length;g+=i){const m=a.slice(g,g+i);p.push(Ti(m,t,e))}const f=Ti(p,t,e);for(const g of p)e.disposeIntermediateTensorInfo(g);return f}if(o){const p=new Y4(a.map(f=>f.shape),t);return e.runWebGLProgram(p,a,s)}const{tensors2D:l,outShape:u}=function J4(n,t,e){const s=gs(n.map(a=>a.shape),t);return{tensors2D:n.map(a=>he({inputs:{x:a},attrs:{shape:[-1,I(a.shape.slice(t))]},backend:e})),outShape:s}}(a,t,e),c=new Z4(l.map(p=>p.shape)),h=e.runWebGLProgram(c,l,s);l.forEach(p=>e.disposeIntermediateTensorInfo(p));const d=he({inputs:{x:h},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(h),d}function L1(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,a=$e(r,t[0].shape)[0];Pd(t.map(u=>u.shape),a);const i=gs(t.map(u=>u.shape),a);if(0===I(i))return e.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(u=>I(u.shape)>0);return 1===l.length?$n({inputs:{x:l[0]},backend:e}):Ti(l,a,e)}const eU={kernelName:Ui,backendName:"webgl",kernelFunc:L1};class V1{constructor(t,e=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,i=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),g=t.inChannels%4,m="channelsLast"===t.dataFormat,y=m?1:2,x=m?2:3,b=m?3:1;let w="",v="";s&&(w=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,v="result = activation(result);");const C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${y}], coords[${x}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${f}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===g}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${f}) *\n                    getW(wR, wC, ${f}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${f}, xR, xC) *\n                    getW(wR, wC, ${f}, d2);\n              }\n\n            } else if (${2===g}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===g}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2),\n                getW(wR, wC, ${f} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1),\n                  getX(batch, xR, xC, ${f} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC),\n                  getX(batch, ${f} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${C}\n        ${v}\n        setOutput(result);\n      }\n    `}}class tU{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,o=t.strideHeight,i=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),g=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${o}, ${i});\n      const ivec3 pads = ivec3(${e}, ${s}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${l};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${f}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===g}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${f}) *\n                  getW(wF, wR, wC, ${f}, d2);\n              } else if (${2===g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1),\n                  getX(batch, xF, xR, xC, ${f} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2),\n                  getW(wF, wR, wC, ${f} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class M1{constructor(t,e=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=un(this.outputShape.length);const o=t.padInfo.left,i=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,h=c;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<c;m++)d+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;d+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let m=0;m<c;m++)d+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(h+1)/2;m++){const y=2*m;if(d+=`\n           xC = xCCorner + ${y*l};\n           `,1===i){if(y<c&&(o%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n               `,d+=1===l&&y>0?`\n                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);\n                   } else {\n                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 xC${y} = xTexelC${y};\n                 `,y+1<c)){const x=o%2==0?Le(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${x};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${y+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${y+1}Ready = 1;\n                   }\n                   `,d+=l>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);\n                     } else {\n                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);\n                     }\n                     `:`\n                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);\n                     `):d+=1===x?`\n                     xC${y+1} = xTexelC${y};\n                     `:`\n                     xCOffset = xC + ${x};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${y+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${y+1}Ready = 1;\n                     }\n\n                     xC${y+1} = xTexelC${y+1};\n                     `}}else y<c&&(o%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {\n                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${y+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${y+1}Ready = 1;\n                 }\n\n                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n               `,y+1<c&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y+1}.zw = vec2(0.);\n                   }\n                   xTexelC${y+1}Ready = 1;\n                 }\n\n                 xC${y} = vec4(\n                   xTexelC${y}.xy, xTexelC${y+1}.xy);\n               `,y+1<c&&(d+=`\n                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n                 `)));y<c&&(d+=`\n             wTexel = getW(r, ${y}, d1, d2);\n             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,y+1<c&&(d+=`\n               wTexel = getW(r, ${y+1}, d1, d2);\n               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";s&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${s}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${s}\n         }`:`vec4 activation(vec4 x) {\n           ${s}\n         }`,f="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${f}\n         setOutput(result);\n       }\n     `}}class nU{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);const{dataFormat:s}=e,r=yn(),a="channelsLast"===s,o=a?1:2,i=a?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`\n          blockIndex = rc.z + ${h};\n          pos = rc.y + ${c};\n\n          ${l}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${o}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*c+h}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*c+h}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function vc(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&1===e&&n[0]>1?[n[0],1]:null}function z1({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const l=n.shape,u=s.texData.get(n.dataId),c=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,p="channelsLast"===e.dataFormat;let m;const y=[];if(null!=a){const w=vc(a.shape,p);null!=w&&(a=he({inputs:{x:a},backend:s,attrs:{shape:w}}),y.push(a))}if(null!=r){const w=vc(r.shape,p);null!=w&&(r=he({inputs:{x:r},backend:s,attrs:{shape:w}}),y.push(r))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&de(u.shape.slice(-3),l.slice(-3))){const v={dataId:n.dataId,shape:[1,l[0]*l[1]*(l[2]+1),e.inChannels],dtype:n.dtype},C=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,S(uc(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);const k=he({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(k);const _=yc({a:v,b:k,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),$=s.texData.get(_.dataId);S($.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=C,$.shape=e.outShape,m=$n({inputs:{x:_},backend:s}),m.shape=e.outShape,y.push(_)}else{const w=e.outHeight*e.outWidth,v=he({inputs:{x:n},backend:s,attrs:{shape:p?[e.batchSize,w,e.inChannels]:[e.batchSize,e.inChannels,w]}}),C=he({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),k=yc({a:p?v:C,b:p?C:v,transposeA:!p,transposeB:!1,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});m=he({inputs:{x:k},backend:s,attrs:{shape:e.outShape}}),y.push(v),y.push(C),y.push(k)}for(const w of y)s.disposeIntermediateTensorInfo(w);return m}function B1({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=e,f="channelsLast"===p,g=l*u*c,m=d*h,y=[e.batchSize,g,m],w=[];if(null!=a){const j=vc(a.shape,f);null!=j&&(a=he({inputs:{x:a},backend:s,attrs:{shape:j}}),w.push(a))}if(null!=r){const j=vc(r.shape,f);null!=j&&(r=he({inputs:{x:r},backend:s,attrs:{shape:j}}),w.push(r))}const v=he({inputs:{x:t},backend:s,attrs:{shape:[1,g,I(t.shape)/g]}});w.push(v);const C=new nU(y,e),_=s.runWebGLProgram(C,[n],"float32",[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]]),$=he({inputs:{x:_},backend:s,attrs:{shape:y}});w.push(_),w.push($);const E=null!=r,P=null!=a,B="leakyrelu"===i,U=i?Ci(i,!0):null,G=new S1(f?$.shape:v.shape,f?v.shape:$.shape,f?[e.batchSize,m,e.outChannels]:[e.batchSize,e.outChannels,m],!0,!1,E,U,P,B),H=f?[$,v]:[v,$];if(r&&H.push(r),P&&H.push(a),B){const j=s.makeTensorInfo([],"float32",Ts(o,"float32"));H.push(j),w.push(j)}const K=s.runWebGLProgram(G,H,"float32"),X=he({inputs:{x:K},backend:s,attrs:{shape:e.outShape}});w.push(K);for(const j of w)s.disposeIntermediateTensorInfo(j);return X}const rU={kernelName:Gi,backendName:"webgl",kernelFunc:function sU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=As(l),d=Xt(r.shape,a.shape,o,u,i,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&z().getBool("WEBGL_EXP_CONV")){const g=new M1(d);p=e.runWebGLProgram(g,[r,a],"float32",[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]])}else if(z().getBool("WEBGL_CONV_IM2COL"))p=B1({x:r,filter:a,convInfo:d,backend:e});else{const g=new V1(d);p=e.runWebGLProgram(g,[r,a],"float32")}else p=z1({x:r,filter:a,convInfo:d,backend:e});const f=he({inputs:{x:p},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(p),f}};class aU{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              ${"channelsLast"===t.dataFormat?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oU{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,o="channelsLast"===t.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${o?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${o?1:2}], coords[${o?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${o}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iU{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${t.strideDepth} - ${t.padInfo.front};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lU{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${s-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${t.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${s}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${s} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const cU={kernelName:Fc,backendName:"webgl",kernelFunc:function uU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=As(l),d=Xt(r.shape,c,o,1,i,u,!1,h),p=new aU(d);return e.runWebGLProgram(p,[r,a],"float32")}};class hU{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=un(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int wCPerm = ${s} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const pU={kernelName:Hi,backendName:"webgl",kernelFunc:function dU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=As(u),d=Xt(o,a.shape,i,1,l,c,!1,h);if(z().getBool("WEBGL_PACK")&&"channelsLast"===h){const p=[[d.strideHeight,d.strideWidth]],f=new hU(d);return e.runWebGLProgram(f,[r,a],"float32",p)}{const p=new oU(d);return e.runWebGLProgram(p,[r,a],"float32")}}},mU={kernelName:ji,backendName:"webgl",kernelFunc:function fU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=Xs(r.shape,a.shape,o,l,i),c=new tU(u);return e.runWebGLProgram(c,[r,a],"float32")}},yU={kernelName:Pc,backendName:"webgl",kernelFunc:function gU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,u=Xs(r.shape,l,o,1,i),c=new iU(u);return e.runWebGLProgram(c,[r,a],"float32")}},bU={kernelName:Lc,backendName:"webgl",kernelFunc:function xU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,u=Xs(l,a.shape,i,1,o),c=new lU(u);return e.runWebGLProgram(c,[r,a],"float32")}},IU=et({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Kr}\n  return result;\n`}),SU={kernelName:qa,backendName:"webgl",kernelFunc:IU},CU=et({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),NU={kernelName:Ka,backendName:"webgl",kernelFunc:CU};class kU{constructor(t,e,s,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,i,l,u]=t,[c]=e,[h,d]=s;this.outputShape=[c,h,d,u];const p="bilinear"===r?1:0,[f,g]=[i-1+".0",l-1+".0"],[m,y,x]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[b,w,v]=d>1?[""+(l-1)/(d-1),"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${o}) {\n          return;\n        }\n\n        float height_scale = ${y};\n        float width_scale = ${w};\n\n        float in_y = ${x};\n        if( in_y < 0.0 || in_y > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${g} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const TU={kernelName:Mc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new kU(r.shape,a.shape,i,l,u);return e.runWebGLProgram(c,[r,a,o],"float32")}};var Oa=(()=>{return(n=Oa||(Oa={})).Prod="*",n.Sum="+",Oa;var n})();class W1{constructor(t,e,s,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,i=s?this.op===Oa.Prod?"1.0":"0.0":`getX(${U1(a,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?"end != "+(l-1):"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ct(a)} coords = getOutputCoords();\n        int end = ${G1(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${c};\n          ${G1(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${U1(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function U1(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.x, ${t}.y`;if(3===n)return`${t}.x, ${t}.y, ${t}.z`;if(4===n)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function G1(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.y`;if(3===n)return`${t}.z`;if(4===n)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function H1(n,t,e,s,r,a){const o=t.shape.length,i=_t([s],o);let l=t;null!=i&&(l=bn({inputs:{x:t},backend:e,attrs:{perm:i}}));const u=Pt(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=$n({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new W1(n,l.shape,!1,a),g=h;h=e.runWebGLProgram(p,[h],h.dtype,[[d]]),e.disposeIntermediateTensorInfo(g)}if(r){const d=new W1(n,l.shape,r,a),p=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(p)}if(null!=i){const p=bn({inputs:{x:h},backend:e,attrs:{perm:Ys(i)}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),p}return h}const $U={kernelName:Vc,backendName:"webgl",kernelFunc:function _U(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return H1(Oa.Prod,r,e,a,o,i)}},DU={kernelName:qi,backendName:"webgl",kernelFunc:function EU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return H1(Oa.Sum,r,e,a,o,i)}},RU={kernelName:zc,backendName:"webgl",kernelFunc:function AU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(1===r.shape.length){const l=e.readSync(r.dataId),u=e.readSync(a.dataId),c=c1(l,u,a.dtype,a.shape,o);return e.makeTensorInfo([o],a.dtype,c)}if(2===r.shape.length){const l=e.bufferSync(r),u=e.bufferSync(a),c=U3(l,u,o,i);return e.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class OU{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const PU={kernelName:Bc,backendName:"webgl",kernelFunc:function FU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],h=("NHWC"===o?r.shape[1]:r.shape[2])*a,d=("NHWC"===o?r.shape[2]:r.shape[3])*a,p=("NHWC"===o?r.shape[3]:r.shape[1])/(a*a),g=new OU("NHWC"===o?[i,h,d,p]:[i,p,h,d],a,o);return e.runWebGLProgram(g,[r],r.dtype)}};class j1{constructor(t,e=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=un(this.outputShape.length);const o=t.filterHeight,i=t.filterWidth,l=t.outChannels/t.inChannels;let u="",c="";s&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,c="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${l};\n        int q = d2 - d1 * ${l};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${o}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${c}\n        setOutput(result);\n      }\n    `}}class q1{constructor(t,e=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=un(this.outputShape.length);const o=t.outChannels/t.inChannels,i=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let y=0;y<h;y++)p+=`\n          vec4 xTexelC${2*y};\n          int xTexelC${2*y}Ready;\n          vec4 xTexelC${2*y+1};\n          int xTexelC${2*y+1}Ready;\n          vec4 xC${y};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let y=0;y<h;y++)p+=`\n          xTexelC${2*y} = vec4(0.0);\n          xTexelC${2*y}Ready = 0;\n          xTexelC${2*y+1} = vec4(0.0);\n          xTexelC${2*y+1}Ready = 0;\n          xC${y} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(d+1)/2;y++){const x=2*y;if(p+=`\n          xC = xCCorner + ${x*u};\n          `,1===l){if(x<h&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {\n                  xTexelC${x} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${x}.zw = vec2(0.0);\n                  }\n                  xTexelC${x}Ready = 1;\n                }\n              `,p+=1===u&&x>0?`\n                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);\n                  } else {\n                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {\n                  xTexelC${x} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${x}.zw = vec2(0.0);\n                  }\n                  xTexelC${x}Ready = 1;\n                }\n\n                xC${x} = xTexelC${x};\n                `,x+1<h)){const b=i%2==0?Le(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${b};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {\n                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${x+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${x+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);\n                    } else {\n                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);\n                    }\n                    `:`\n                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);\n                    `):p+=1===b?`\n                    xC${x+1} = xTexelC${x};\n                    `:`\n                    xCOffset = xC + ${b};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {\n                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${x+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${x+1}Ready = 1;\n                    }\n\n                    xC${x+1} = xTexelC${x+1};\n                    `}}else x<h&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {\n                  xTexelC${x} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${x}.zw = vec2(0.0);\n                  }\n                  xTexelC${x}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {\n                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${x+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${x+1}Ready = 1;\n                }\n\n                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);\n              `,x+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {\n                  xTexelC${x} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${x}.zw = vec2(0.0);\n                  }\n                  xTexelC${x}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {\n                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${x+1}.zw = vec2(0.);\n                  }\n                  xTexelC${x+1}Ready = 1;\n                }\n\n                xC${x} = vec4(\n                  xTexelC${x}.xy, xTexelC${x+1}.xy);\n              `,x+1<h&&(p+=`\n                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);\n                `)));x<h&&(p+=`\n            wTexel = getW(r, ${x}, d1, q);\n            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);\n          `,x+1<h&&(p+=`\n              wTexel = getW(r, ${x+1}, d1, q);\n              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",g="";s&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${g}\n        setOutput(result);\n      }\n    `}}const VU={kernelName:Ki,backendName:"webgl",kernelFunc:function LU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),S(sn(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=Xt(r.shape,a.shape,o,c,i,u,!0);let d;return d=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new q1(h):new j1(h),e.runWebGLProgram(d,[r,a],"float32",[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]])}};class MU{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${t.outChannels/t.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zU{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,l=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${l}; dm++) {\n              int d2 = d1 * ${l} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const WU={kernelName:Wc,backendName:"webgl",kernelFunc:function BU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Xt(r.shape,c,o,i,l,u,!0),d=new MU(h);return e.runWebGLProgram(d,[r,a],"float32")}},GU={kernelName:Uc,backendName:"webgl",kernelFunc:function UU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Xt(c,a.shape,o,i,l,u,!0),d=new zU(h);return e.runWebGLProgram(d,[r,a],"float32")}};class HU{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const qU={kernelName:"Diag",backendName:"webgl",kernelFunc:function jU(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],a=I(s.shape),o=he({inputs:{x:s},backend:e,attrs:{shape:[a]}}),i=new HU(a),l=e.runWebGLProgram(i,[o],o.dtype),u=he({inputs:{x:l},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(l),u}};class KU{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:i,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:h,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${h}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${l}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${s}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const ZU={kernelName:Xi,backendName:"webgl",kernelFunc:function XU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=Go(r.shape,a.shape,o,i,"NHWC",l);let c;const h=new KU(u);c=e.runWebGLProgram(h,[r,a],"float32");const d=he({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),d}},QU={kernelName:"Einsum",backendName:"webgl",kernelFunc:function YU(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=Zd(r,a.length);Qd(o.length,l,a);const{path:u,steps:c}=Jd(i,l),h=c.length;let d=null,p=o.length;const f=[];for(let g=0;g<h;++g){for(const m of c[g]){const{permutationIndices:y,expandDims:x}=Yd(p,l[m]);let b;ep(y)?b=a[m]:(b=bn({inputs:{x:a[m]},backend:e,attrs:{perm:y}}),f.push(b));const w=b.shape.slice();for(let v=0;v<x.length;++v)w.splice(x[v],0,1);de(b.shape,w)||(b=he({inputs:{x:b},backend:e,attrs:{shape:w}}),f.push(b)),null===d?d=b:(d=Af({inputs:{a:b,b:d},backend:e}),f.push(d))}g<h-1&&(u[g]>=0&&(d=gc({inputs:{x:d},backend:e,attrs:{axis:u[g]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}},JU=et({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),eG={kernelName:Za,backendName:"webgl",kernelFunc:JU},sG={kernelName:jc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,a=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Si("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new Da("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,r.shape);return e.runWebGLProgram(a,[s,r],s.dtype)}},rG=an({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:q3}),aG={kernelName:Zi,backendName:"webgl",kernelFunc:rG},iG=et({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Wd};\n  float a1 = ${Ud};\n  float a2 = ${Gd};\n  float a3 = ${Hd};\n  float a4 = ${jd};\n  float a5 = ${qd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),lG={kernelName:Ya,backendName:"webgl",kernelFunc:iG},K1=et({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:K3,dtype:"float32"}),cG={kernelName:Qa,backendName:"webgl",kernelFunc:K1};function Pf(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:a}=t,o=a.shape.length,i=a.shape.slice();let l=r;return r<0&&(S(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),he({inputs:{x:a},backend:s,attrs:{shape:i}})}const hG={kernelName:Yi,backendName:"webgl",kernelFunc:Pf},X1="return exp(x) - 1.0;",dG=et({opSnippet:X1,packedOpSnippet:X1,cpuKernelImpl:X3}),pG={kernelName:Ja,backendName:"webgl",kernelFunc:dG};class Z1{constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Y1(n,t,e){const s=e.texData.get(n.dataId),r=I(n.shape),a=n.shape[n.shape.length-1],i=he({inputs:{x:n},backend:e,attrs:{shape:[r/a,a]}}),l=i.shape,u=new Z1("real",l,t),c=new Z1("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(u,h,"float32"),p=e.runWebGLProgram(c,h,"float32"),f=dr({inputs:{real:d,imag:p},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p);const g=he({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),g}const mG={kernelName:"FFT",backendName:"webgl",kernelFunc:function fG(n){const{inputs:t,backend:e}=n,{input:s}=t;return Y1(s,!1,e)}};class gG{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function _i(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:a}=e;if(a=a||yr(r),"string"===a){const o=pt(a,I(s));return o.fill(r),t.makeTensorInfo(s,a,o)}{const o=new gG(s,r);return t.runWebGLProgram(o,[],a,[[r]])}}const yG={kernelName:Kc,backendName:"webgl",kernelFunc:_i};class xG{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bG={kernelName:Xc,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new xG(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}},Q1="return floor(x);",wG=et({opSnippet:Q1,packedOpSnippet:Q1,cpuKernelImpl:Z3}),vG={kernelName:eo,backendName:"webgl",kernelFunc:wG},IG=an({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),SG={kernelName:to,backendName:"webgl",kernelFunc:IG};class CG{constructor(t){this.variableNames=["A"];const e=yn(),[s,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class NG{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=yn(),[s,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${s}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const kG={kernelName:wh,backendName:"webgl",kernelFunc:function TG(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:a}=s,o="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];if(i||o){const g=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Fa||g!==Lf)&&(Lf=g,Fa=document.createElement("canvas").getContext("2d",{willReadFrequently:Lf})),Fa.canvas.width=l,Fa.canvas.height=u,Fa.drawImage(r,0,0,l,u),r=Fa.canvas}const d=e.makeTensorInfo(c,"int32");e.texData.get(d.dataId).usage=_n.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),r);const p=z().getBool("WEBGL_PACK")?new NG(h):new CG(h),f=e.runWebGLProgram(p,[d],"int32");return e.disposeData(d.dataId),f}};let Fa,Lf=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const $G={kernelName:Ll,backendName:"webgl",kernelFunc:function _G(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=As(c),m=Xt(r.shape,a.shape,l,h,u,d,!1,g);let y;const x=[],b=null!=o,w=null!=i,v="leakyrelu"===p,C=()=>{const _=[r,a],$=(E,P)=>{if("NCHW"===P&&1===E.shape.length&&1!==E.shape[0]){const B=he({inputs:{x:E},backend:e,attrs:{shape:[E.shape[0],1,1]}});return x.push(B),B}return E};if(b&&_.push($(o,c)),w&&_.push($(i,c)),v){const E=e.makeTensorInfo([],"float32",Ts(f,"float32"));_.push(E),x.push(E)}return _};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&z().getBool("WEBGL_EXP_CONV")){const _=p?Ci(p,!0):null,$=new M1(m,b,_,w,v),E=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],P=C();y=e.runWebGLProgram($,P,"float32",E)}else if(z().getBool("WEBGL_CONV_IM2COL"))y=B1({x:r,filter:a,convInfo:m,backend:e,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const _=p?Ci(p,!1):null,$=new V1(m,b,_,w,v),E=C();y=e.runWebGLProgram($,E,"float32")}else y=z1({x:r,filter:a,convInfo:m,backend:e,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const k=he({inputs:{x:y},backend:e,attrs:{shape:m.outShape}});return x.push(y),x.forEach(_=>e.disposeIntermediateTensorInfo(_)),k}},DG={kernelName:Vl,backendName:"webgl",kernelFunc:function EG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;null==g&&(g=[1,1]),S(sn(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=Xt(r.shape,a.shape,l,g,u,h,!0),y=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,x=d?Ci(d,y):null,b=[r,a],w=null!=o,v=null!=i,C="leakyrelu"===d;if(w&&b.push(o),v&&b.push(i),C){const E=e.makeTensorInfo([],"float32",Ts(p,"float32"));b.push(E),f.push(E)}let k;k=y?new q1(m,w,x,v,C):new j1(m,w,x,v,C);const $=e.runWebGLProgram(k,b,"float32",[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]]);return f.forEach(E=>e.disposeIntermediateTensorInfo(E)),$}};class AG{constructor(t,e,s,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const a=ct(s.length);let o="\n    int index;";for(let i=0;i<this.sliceDim;i++)o+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${o}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const OG={kernelName:Jf,backendName:"webgl",kernelFunc:function RG(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=I(s.shape),[l,u,c,h]=Bd(s,r),d=he({inputs:{x:r},backend:e,attrs:{shape:[u,o]}}),p=he({inputs:{x:s},backend:e,attrs:{shape:[I(s.shape)/c,c]}});if(e.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const y=e.readSync(r.dataId),x=e.bufferSync(s),b=Y3(y,x,s.dtype,u,o,c,h,s.shape,i);return e.makeTensorInfo(l,s.dtype,b.values)}const f=new AG(o,h,[u,c],s.shape),g=e.runWebGLProgram(f,[p,d],p.dtype),m=he({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}};class FG{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ct(this.rank),r=function PG(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)s.push(2===r?"index":`${e[r]}`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function J1(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=$e(o,r.shape)[0];if(z().get("DEBUG")){const x=e.readSync(a.dataId),b=r.shape[l];for(let w=0;w<x.length;++w){const v=x[w];S(v<=b-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${b-1}]`)}}const u=sp(r,a,l,i),c=I(a.shape),h=[],d=he({inputs:{x:r},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=he({inputs:{x:a},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const x=e.bufferSync(p),b=e.bufferSync(d),w=Q3(b,x,f);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(u.outputShape,w.dtype,w.values)}const g=new FG(d.shape,f),m=e.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const y=he({inputs:{x:m},backend:e,attrs:{shape:u.outputShape}});return h.forEach(x=>e.disposeIntermediateTensorInfo(x)),y}const LG={kernelName:Ji,backendName:"webgl",kernelFunc:J1},VG=an({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:J3,dtype:"bool"}),MG={kernelName:el,backendName:"webgl",kernelFunc:VG},zG=an({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:eB}),BG={kernelName:no,backendName:"webgl",kernelFunc:zG},UG={kernelName:Zc,backendName:"webgl",kernelFunc:function WG(n){const{inputs:t,backend:e}=n,{input:s}=t;return Y1(s,!0,e)}},GG=et({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),HG={kernelName:ro,backendName:"webgl",kernelFunc:GG},jG=et({opSnippet:"return float(isinf(x));",dtype:"bool"}),qG={kernelName:ao,backendName:"webgl",kernelFunc:jG},KG=et({opSnippet:"return float(isnan(x));",dtype:"bool"}),XG={kernelName:oo,backendName:"webgl",kernelFunc:KG},ZG=an({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:tB,dtype:"bool"}),YG={kernelName:nl,backendName:"webgl",kernelFunc:ZG},QG=an({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:nB,dtype:"bool"}),JG={kernelName:sl,backendName:"webgl",kernelFunc:QG},tH={kernelName:em,backendName:"webgl",kernelFunc:function eH(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:a}=e,o=sB(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}},sH=et({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:rB}),rH={kernelName:lo,backendName:"webgl",kernelFunc:sH},oH=et({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),iH={kernelName:uo,backendName:"webgl",kernelFunc:oH},lH=an({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),uH={kernelName:rl,backendName:"webgl",kernelFunc:lH},cH=et({opSnippet:"return float(!(x >= 1.0));"}),hH={kernelName:al,backendName:"webgl",kernelFunc:cH},dH=an({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),pH={kernelName:ol,backendName:"webgl",kernelFunc:dH};class fH{constructor(t,e,s,r,a){this.variableNames=["x"],this.outputShape=[];const o=e,i=t[3]-1;let l;this.outputShape=t;const u=`float(${s}) + float(${r}) * sum`;l=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${o}; j <= ${o}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${l};\n        setOutput(val);\n      }\n    `}}class mH{constructor(t,e,s,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,i=t[3]-1;let l;this.outputShape=t;const u=`float(${s}) + float(${r}) * sum`;l=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${o};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${o}; j <= ${o}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${l};\n        setOutput(result);\n      }\n    `}}const gH={kernelName:il,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,u=z().getBool("WEBGL_PACK_NORMALIZATION")?new mH(r.shape,a,o,i,l):new fH(r.shape,a,o,i,l);return e.runWebGLProgram(u,[r],r.dtype)}};class yH{constructor(t,e,s,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${s});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const xH={kernelName:Qc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s,h=new yH(r.shape,i,l,u,c);return e.runWebGLProgram(h,[r,a,o],r.dtype)}};function ev(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=$e(a,r.shape);let u=l;const c=_t(u,i),h=null!=c,d=e.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const b=e.texData.get(p.dataId).values,w=new Array(i);for(let k=0;k<w.length;k++)w[k]=r.shape[c[k]];const v=Ef(b,r.shape,r.dtype,c,w);p=e.makeTensorInfo(w,r.dtype),e.texData.get(p.dataId).values=v}else p=mc(r,c,e);u=Pt(u.length,i)}rn("max",u,i);const[f,g]=Zt(p.shape,u);let y,m=f;if(o&&(m=Ft(f,l)),d){const b=e.texData.get(p.dataId).values,w=aB(b,I(g),m,r.dtype);y=e.makeTensorInfo(m,r.dtype),e.texData.get(y.dataId).values=w}else y=function bH(n,t,e,s){const r=I(t),i=he({inputs:{x:n},attrs:{shape:[I(n.shape)/r,r]},backend:s}),l=Xr(i,n.dtype,"max",s),u=he({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}(p,g,m,e);return h&&e.disposeIntermediateTensorInfo(p),y}const wH={kernelName:ll,backendName:"webgl",kernelFunc:ev},SH=an({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:oB}),CH={kernelName:co,backendName:"webgl",kernelFunc:SH},kH={kernelName:ul,backendName:"webgl",kernelFunc:function NH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;vi(r,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s;S(sn(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=Wn(r.shape,a,o,1,i,l);if(1===c.filterWidth&&1===c.filterHeight&&de(c.inShape,c.outShape))return $n({inputs:{x:r},backend:e});const h=new Ni(c,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}},_H={kernelName:cl,backendName:"webgl",kernelFunc:function TH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=s,h=Ds(r.shape,a,o,[1,1,1],i,u,l),d=new Rf(h,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}};class $H{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const a=t.effectiveFilterHeight,o=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${a-1-t.padInfo.top}, ${o-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${a*o-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${o} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class EH{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${l-1-t.padInfo.front}, ${u-1-t.padInfo.top}, ${c-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n           wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${l*u*c-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const AH={kernelName:eh,backendName:"webgl",kernelFunc:function DH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,d=Ds(o.shape,i,l,[1,1,1],u,c),p=new Rf(d,"max",!0),f=e.runWebGLProgram(p,[o],o.dtype),g=new EH(d),m=e.runWebGLProgram(g,[r,f],o.dtype);return e.disposeIntermediateTensorInfo(f),m}},OH={kernelName:Jc,backendName:"webgl",kernelFunc:function RH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a,output:o}=t,i=a;vi([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Wn(i.shape,l,u,1,c,h),f=new Ni(d,"max",!0),g=e.runWebGLProgram(f,[i],i.dtype),m=new $H(d),y=e.runWebGLProgram(m,[r,g],i.dtype);return e.disposeIntermediateTensorInfo(g),y}},PH={kernelName:tm,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=e;S(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];S(sn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=Wn(s.shape,r,a,u,o),[h,d]=function FH(n,t,e,s){let r=new Ni(e,"max",!1);const a=s.runWebGLProgram(r,[n],"float32");return r=new Ni(e,"max",!0,!0,t),[a,s.runWebGLProgram(r,[n],"float32")]}(s,i,c,l);return[h,d]}},VH={kernelName:hl,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:a}=t,o=e,i=s.shape.length,l=$e(a,s.shape);let u=l;const c=_t(u,i),h=null!=c,d=o.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const w=o.texData.get(f.dataId).values,v=new Array(i);for(let _=0;_<v.length;_++)v[_]=s.shape[c[_]];const C=Ef(w,s.shape,s.dtype,c,v);f=o.makeTensorInfo(v,s.dtype),o.texData.get(f.dataId).values=C}else f=mc(s,c,o);p.push(f),u=Pt(u.length,i)}rn("sum",u,i);const[g,m]=Zt(f.shape,u);let y=g;r&&(y=Ft(g,l));const x=function LH(n,t,e,s){const r=I(t),i=he({inputs:{x:n},attrs:{shape:[I(n.shape)/r,r]},backend:s}),l=Xr(i,"float32","mean",s),u=he({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}(f,m,y,o);for(const b of p)o.disposeIntermediateTensorInfo(b);return x}},zH={kernelName:dl,backendName:"webgl",kernelFunc:function MH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=$e(a,r.shape);let u=l;const c=_t(u,i);let h=r;null!=c&&(h=bn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Pt(u.length,r.shape.length)),rn("min",u,i);const[d,p]=Zt(h.shape,u),g=he({inputs:{x:h},backend:e,attrs:{shape:[-1,I(p)]}}),m=Xr(g,g.dtype,"min",e);let y;return y=he(o?{inputs:{x:m},backend:e,attrs:{shape:Ft(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}},UH=an({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:iB}),GH={kernelName:ho,backendName:"webgl",kernelFunc:UH};class HH{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((c,h)=>c[0]+t[h]+c[1]);const r=t.length,a=ct(r),o=e.map(c=>c[0]).join(","),i=e.map((c,h)=>c[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===s?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${l}));\n      }\n    `:`\n        int start = ${o};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class jH{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,g)=>f[0]+t[g]+f[1]);const r=t.length,a=ct(r),o=e.map(f=>f[0]).join(","),i=e.map((f,g)=>f[0]+t[g]).join(","),l=xn("rc",r),u=xn("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===s?0:1;let p="";if(1===r){const f=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${u.join()}), ${h});\n        ${l[r-1]} += 1;\n        if(${c}) {\n          ${f}\n          result[1] = getChannel(getX(${u.join()}), ${h});\n        }\n      `}else{const f=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${u.join()}), ${h});\n        ${l[r-1]} += 1;\n        if(${c}) {\n          ${f}\n          result[1] = getChannel(getX(${u.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${l[r-2]} += 1;\n        if(${l[r-2]} < ${this.outputShape[r-2]}) {\n          ${f}\n          result[2] = getChannel(getX(${u.join()}), ${h});\n          ${l[r-1]} += 1;\n          if(${c}) {\n            ${f}\n            result[3] = getChannel(getX(${u.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const qH={kernelName:pl,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:a}=e,o=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jH(s.shape,r,a):new HH(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)}},ZH=an({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),YH={kernelName:po,backendName:"webgl",kernelFunc:ZH};class QH{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const tv=an({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),JH={kernelName:Xa,backendName:"webgl",kernelFunc:tv},nv="return a - b;",sv=an({opSnippet:nv,packedOpSnippet:nv,supportsComplex:!0,cpuKernelImpl:_B}),ej={kernelName:$o,backendName:"webgl",kernelFunc:sv};function rv(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:a}=s,o=$e([a],r.shape),i=ev({inputs:{x:r},backend:e,attrs:{reductionIndices:o,keepDims:!1}}),l=Ft(i.shape,o),u=he({inputs:{x:i},backend:e,attrs:{shape:l}}),c=sv({inputs:{a:r,b:u},backend:e}),h=K1({inputs:{x:c},backend:e}),d=gc({inputs:{x:h},backend:e,attrs:{axis:o,keepDims:!1}}),p=he({inputs:{x:d},backend:e,attrs:{shape:l}}),f=tv({inputs:{a:h,b:p},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}const tj={kernelName:Dl,backendName:"webgl",kernelFunc:rv},sj={kernelName:nm,backendName:"webgl",kernelFunc:function nj(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:rv({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),h=new QH(l.shape[0],l.shape[1],a),p=e.runWebGLProgram(h,[l],"int32",[[o]]);return i||e.disposeIntermediateTensorInfo(l),p}},ij={kernelName:fl,backendName:"webgl",kernelFunc:function oj(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const a=e.texData.get(s.dataId),[o,i]=uB(a.values,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,o)}let r;return r=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hr(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new ks(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),e.runWebGLProgram(r,[s],s.dtype)}},lj=$d,cj={kernelName:th,backendName:"webgl",kernelFunc:function uj(n){En("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=e.readSync(r.dataId),c=e.readSync(a.dataId),{selectedIndices:h}=lj(u,c,o,i,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},hj=Ed,pj={kernelName:nh,backendName:"webgl",kernelFunc:function dj(n){En("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s,c=e.readSync(r.dataId),h=e.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=hj(c,h,o,i,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}},fj=Dd,gj={kernelName:sh,backendName:"webgl",kernelFunc:function mj(n){En("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=e.readSync(r.dataId),h=e.readSync(a.dataId),d=o,p=i,f=l,g=u,{selectedIndices:m,selectedScores:y}=fj(c,h,d,p,f,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class yj{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${s}),\n                      float(index == coords.y)));\n      }\n    `}}const xj={kernelName:yl,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:a,depth:o,onValue:i,offValue:l}=s,u=I(r.shape),c=new yj(u,o,i,l),h=he({inputs:{x:r},backend:e,attrs:{shape:[u]}}),d=e.runWebGLProgram(c,[h],a);e.disposeIntermediateTensorInfo(h);const f=he({inputs:{x:d},backend:e,attrs:{shape:[...r.shape,o]}});return e.disposeIntermediateTensorInfo(d),f}};function Ic(n){const{inputs:t,backend:e}=n,{x:s}=t;if("complex64"===s.dtype){const r=ki({inputs:{input:s},backend:e}),a=Ic({inputs:{x:r},backend:e}),o=wc({inputs:{input:s},backend:e}),i=Ic({inputs:{x:o},backend:e}),l=dr({inputs:{real:a,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),l}return _i({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:e})}const bj={kernelName:Fl,backendName:"webgl",kernelFunc:Ic},wj={kernelName:gl,backendName:"webgl",kernelFunc:function av(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const r=ki({inputs:{input:s},backend:e}),a=av({inputs:{x:r},backend:e}),o=wc({inputs:{input:s},backend:e}),i=Ic({inputs:{x:o},backend:e}),l=dr({inputs:{real:a,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),l}return _i({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}},Ij={kernelName:xl,backendName:"webgl",kernelFunc:function vj(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(1===t.length)return Pf({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const a=t[0].shape,o=t[0].dtype;t.forEach(c=>{ee(a,c.shape,"All tensors passed to stack must have matching shapes"),S(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=L1({inputs:t.map(c=>{const h=Pf({inputs:{input:c},backend:e,attrs:{dim:r}});return i.push(h),h}),backend:e,attrs:{axis:r}});return i.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}};class Sj{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);const r=t.length,a=ct(r),o=e.map(u=>u[0]).join(","),i=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${l}));\n        }\n      }\n    `:`\n        int start = ${o};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Cj{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,m)=>g[0]+t[m]+g[1]);const r=t.length,a=ct(r),o=e.map(g=>g[0]).join(","),i=e.map((g,m)=>g[0]+t[m]).join(","),l=xn("rc",r),u=xn("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${l[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${l[r-2]} += 1;\n       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${l[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let g=0,m=1===r?2:4;g<m;g++)f+=`\n        ${d[g]}\n        if (${p}) {\n          result[${g}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${g}] = getChannel(getX(${u.join()}), ${h});\n        }\n      `;f+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}const ov=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:a,constantValue:o}=s;if(0===I(r.shape))return _i({backend:e,attrs:{shape:a.map((c,h)=>c[0]+r.shape[h]+c[1]),value:o,dtype:r.dtype}});const i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cj(r.shape,a,o):new Sj(r.shape,a,o);return e.runWebGLProgram(i,[r],r.dtype,[[o]])},Nj={kernelName:bl,backendName:"webgl",kernelFunc:ov},_j=an({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),$j={kernelName:mo,backendName:"webgl",kernelFunc:_j},Dj={kernelName:vl,backendName:"webgl",kernelFunc:function Ej(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],u=$e(a,r.shape);let c=u;const h=_t(c,i);let p,d=r;if(null!=h&&(d=bn({inputs:{x:r},backend:e,attrs:{perm:h}}),c=Pt(c.length,i),l.push(d)),rn("prod",c,i),e.shouldExecuteOnCPU([d])){const f=e.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:y}=hB(d.shape,d.dtype,f,c);p=e.makeTensorInfo(m,y,g)}else{const[f,g]=Zt(d.shape,c),m=I(g),y=he({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}}),b=Xr(y,_h(r.dtype),"prod",e);p=he({inputs:{x:b},backend:e,attrs:{shape:f}}),l.push(y),l.push(b)}if(o){l.push(p);const f=Ft(p.shape,u);p=he({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},Rj={kernelName:sm,backendName:"webgl",kernelFunc:function Aj(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=s,l=r.map(y=>e.readSync(y.dataId)),u=r.map(y=>y.shape),c=e.readSync(a.dataId),h=e.readSync(o.dataId),[d,p,f]=dB(l,u,c,a.shape,a.dtype,h,o.shape,i),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),m=e.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},Fj={kernelName:rm,backendName:"webgl",kernelFunc:function Oj(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:a}=t,o=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(a.dataId),[u,c]=pB(o,s.shape,s.dtype,i,r.shape,l,a.shape);return[e.makeTensorInfo([u.length],"int32",u),e.makeTensorInfo([c.length],s.dtype,c)]}},Lj={kernelName:am,backendName:"webgl",kernelFunc:function Pj(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=s,u=e.readSync(r.dataId),c=e.readSync(a.dataId),h=e.readSync(o.dataId),d=i.map(m=>e.readSync(m.dataId)),p=i.map(m=>m.shape),[f,g]=fB(u,r.shape,c,a.shape,a.dtype,h,o.shape,d,p,l);return e.makeTensorInfo(f,a.dtype,g)}},iv=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:a,dtype:o}=e,i=mB(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Vj={kernelName:rh,backendName:"webgl",kernelFunc:iv},Mj=et({opSnippet:"return 1.0 / x;"}),zj={kernelName:go,backendName:"webgl",kernelFunc:Mj},Wj=et({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Uj={kernelName:yo,backendName:"webgl",kernelFunc:Wj},Hj=et({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),jj={kernelName:xo,backendName:"webgl",kernelFunc:Hj};class qj{constructor(t,e,s,r,a){this.variableNames=["A"],this.outputShape=[];const[o,i,l,u]=t;this.outputShape=[o,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Kj{constructor(t,e,s,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,i,l,u]=t;this.outputShape=[o,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]},\n          ${c[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Zj={kernelName:Cl,backendName:"webgl",kernelFunc:function Xj(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Kj(r.shape,l,u,a,o):new qj(r.shape,l,u,a,o);return e.runWebGLProgram(c,[r],"float32")}};class Yj{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,o,i]=t,l=[s&&o>1?r-1:r,s&&i>1?a-1:a],u=[s&&o>1?o-1:o,s&&i>1?i-1:i],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=2*Math.ceil(d)+2,g=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${g});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Jj={kernelName:ih,backendName:"webgl",kernelFunc:function Qj(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Yj(a.shape,r.shape,o);return e.runWebGLProgram(i,[a],a.dtype)}};class eq{constructor(t,e,s,r,a){this.variableNames=["A"],this.outputShape=[];const[o,i,l,u]=t;this.outputShape=[o,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class tq{constructor(t,e,s,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,i,l,u]=t;this.outputShape=[o,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]},\n          ${c[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const sq={kernelName:Sl,backendName:"webgl",kernelFunc:function nq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tq(r.shape,l,u,a,o):new eq(r.shape,l,u,a,o);return e.runWebGLProgram(c,[r],r.dtype)}};class rq{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,o,i]=t,l=[s&&o>1?r-1:r,s&&i>1?a-1:a],u=[s&&o>1?o-1:o,s&&i>1?i-1:i],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=2*Math.ceil(d)+2,g=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${g});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${l[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${l[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${s} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${s} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const oq={kernelName:oh,backendName:"webgl",kernelFunc:function aq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:a}=t,{alignCorners:o}=s,i=new rq(a.shape,r.shape,o);return e.runWebGLProgram(i,[a],a.dtype)}};class iq{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,1===s)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const a=t.map((i,l)=>(i=>-1!==e.indexOf(i)&&1!==t[i]?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`)(l)).join(","),o=ct(s);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class lq{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=xn("rc",s),a=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=ct(s);function d(f){const g=t.map((x,b)=>function p(f,g){return-1!==e.indexOf(f)&&1!==t[f]?`${t[f]} - ${g[f]} - 1`:`${g[f]}`}(b,f));return`getChannel(getX(${g.join(",")}), vec2(${g.slice(-2).join(",")}))`}this.userCode=1===s?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function l(f){return d(f)}(r.slice())};\n          if(${a}){\n            result.g = ${function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}(r.slice())};\n          }\n          if(${o}) {\n            result.b = ${function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}(r.slice())};\n            if(${a}) {\n              result.a = ${function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const cq={kernelName:Nl,backendName:"webgl",kernelFunc:function uq(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:a}=s,o=r.shape.length,i=$e(a,r.shape);if(0===o)return $n({inputs:{x:r},backend:e});const l=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lq(r.shape,i):new iq(r.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}};class hq{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let a="";a="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const dq={kernelName:vh,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:a,center:o}=t,i=e,l=new hq(s.shape,a),[u,c]=Vd(o,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,h)}},pq=et({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),fq={kernelName:bo,backendName:"webgl",kernelFunc:pq},mq=et({opSnippet:"return inversesqrt(x);",cpuKernelImpl:gB}),gq={kernelName:wo,backendName:"webgl",kernelFunc:mq};class Vf{constructor(t,e,s,r,a,o,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const u=ct(a.length),c=ct(o.length);let h="";1===s?h="i":2===s&&(h="i, j");let p="";1===r?p="i":2===r&&(p="i, coords[1]");let g="";l&&(g="coords[0], coords[1]"),this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${h}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${p});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(${g}), sum, float(found)));\n        }\n      `}}class yq{constructor(t,e,s,r,a,o,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const u=ct(a.length),c=ct(o.length);let h="";1===s?h="i":2===s&&(h="i, j");let p="";1===r?p="i":2===r&&(p="i, coords[1]");let g="";l&&(g="coords[0], coords[1]"),this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${t}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${e}; j+=2) {\n              ivec4 index = round(getIndices(${h}));\n              flattenedIndex += index.xz * ${e>1?"strides[j]":"strides"};\n              if (j + 1 < ${e}) {\n                flattenedIndex += index.yw * ${e>1?"strides[j + 1]":"strides"};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = getUpdates(${p});\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(getDefaultValue(${g}), sum, found));\n        }\n      `}}const bq={kernelName:om,backendName:"webgl",kernelFunc:function xq(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rr(0,r,o),d=[h/u,u];if(0===h)return e.makeTensorInfo(o,r.dtype);const p=he({inputs:{x:r},backend:e,attrs:{shape:[l,i]}}),f=he({inputs:{x:a},backend:e,attrs:{shape:[l,u]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=z().getBool("WEBGL_PACK")?new yq(l,i,p.shape.length,f.shape.length,c,d):new Vf(l,i,p.shape.length,f.shape.length,c,d);const y=e.runWebGLProgram(m,[f,p,g],f.dtype),x=he({inputs:{x:y},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(g),x}};class wq{constructor(t,e,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const o=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=2===z().getNumber("WEBGL_VERSION")?"while (left < right) {":o;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===r?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const Iq={kernelName:lm,backendName:"webgl",kernelFunc:function vq(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:a}=t,{side:o}=s,i=new wq(r.shape[0],r.shape[1],a.shape[1],o);return e.runWebGLProgram(i,[r,a],"int32",[[r.shape[1]]])}};class Sq{constructor(t,e,s){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,s>4)throw Error(`Where for rank ${s} is not yet supported`);if(1===s)a="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${i[c]}`),c<t&&l.push(`${i[c]}`);r=l.join(),a=u.join()}const o=ct(s);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const Nq={kernelName:kl,backendName:"webgl",kernelFunc:function Cq(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:a}=t,o=new Sq(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(o,[s,r,a],Cn(r.dtype,a.dtype))}},Tq=et({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${fu};\n  float scale = ${mu};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),_q={kernelName:vo,backendName:"webgl",kernelFunc:Tq},Eq=et({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xB}),Dq={kernelName:No,backendName:"webgl",kernelFunc:Eq},Aq=et({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Rq={kernelName:Co,backendName:"webgl",kernelFunc:Aq},Pq=et({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Kr}\n  return result;\n`}),Lq={kernelName:Io,backendName:"webgl",kernelFunc:Pq},Vq=et({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Mq={kernelName:So,backendName:"webgl",kernelFunc:Vq},zq=et({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Bq={kernelName:ko,backendName:"webgl",kernelFunc:zq},Wq={kernelName:$l,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:a,paddings:o}=s;S(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=ov({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),h=Jo(c.shape,a,i,!1),d=ei(h.length,a.length,!1),p=ti(c.shape,a,i,!1),f=he({inputs:{x:c},backend:e,attrs:{shape:h}}),g=bn({inputs:{x:f},backend:e,attrs:{perm:d}}),m=he({inputs:{x:g},backend:e,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach(y=>e.disposeIntermediateTensorInfo(y)),m}},Gq={kernelName:lh,backendName:"webgl",kernelFunc:function Uq(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=e.readSync(s.dataId),l=e.readSync(r.dataId),u=e.readSync(a.dataId),c=e.readSync(o.dataId)[0],[h,d,p,f,g]=wB(i,s.shape,s.dtype,l,r.dtype,u,c);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(m=>Number(m)))),e.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}},jq={kernelName:uh,backendName:"webgl",kernelFunc:function Hq(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(e.readSync(r.dataId)),i=e.readSync(s.dataId),l=Array.from(e.readSync(a.dataId)),[u,c,h]=vB(i,s.shape,s.dtype,o,l);return[e.makeTensorInfo(c,s.dtype,u),e.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},Kq={kernelName:ch,backendName:"webgl",kernelFunc:function qq(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(a.dataId),[u,c]=d1(o,s.shape,s.dtype,i,l,!0);return e.makeTensorInfo(c,s.dtype,u)}},Zq={kernelName:hh,backendName:"webgl",kernelFunc:function Xq(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(a.dataId),[u,c]=d1(o,s.shape,s.dtype,i,l);return e.makeTensorInfo(c,s.dtype,u)}},Qq={kernelName:um,backendName:"webgl",kernelFunc:function Yq(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Rr(0,r,i);if("string"===a.dtype){const y=e.bufferSync(r),x=e.bufferSync(a),b=$s(e.readSync(o.dataId)[0]),w=yB(y,x,i,d,c,u,l,h,b,!1);return e.makeTensorInfo(i,w.dtype,w.values)}const f=new Vf(u,l,r.shape.length,a.shape.length,h,[d,1],!1),g=e.runWebGLProgram(f,[a,r,o],a.dtype),m=he({inputs:{x:g},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(g),m}},eK={kernelName:El,backendName:"webgl",kernelFunc:function Jq(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=$e(o,r.shape)[0],l=tp(r,a,i),c=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[i]=d;const f=Ra({inputs:{x:r},backend:e,attrs:{begin:c,size:p}});return c[i]+=d,f})}},lv="return sqrt(x);",tK=et({opSnippet:lv,packedOpSnippet:lv,cpuKernelImpl:IB}),nK={kernelName:To,backendName:"webgl",kernelFunc:tK},rK={kernelName:dh,backendName:"webgl",kernelFunc:et({opSnippet:"return x * x;"})},uv="return (a - b) * (a - b);",aK=an({opSnippet:uv,packedOpSnippet:uv}),oK={kernelName:_o,backendName:"webgl",kernelFunc:aK},lK={kernelName:Al,backendName:"webgl",kernelFunc:function iK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const o=Vs(e.readSync(r.dataId)),i=SB(o,"string",s);return e.makeTensorInfo(r.shape,"string",i)}},cK={kernelName:Ro,backendName:"webgl",kernelFunc:function uK({inputs:n,attrs:t,backend:e}){const{x:s}=n,a=new ks(s.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return e.runWebGLProgram(a,[s],s.dtype)}};class hK{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,a=ct(s.length),o=ct(s.length);let i="";if(1===r)i="coords * strides + begin";else{let l=0;i=s.map((u,c)=>(l++,1===s.length?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const pK={kernelName:ph,backendName:"webgl",kernelFunc:function dK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:x,end:b,strides:w}=rd(r.shape,a,o,i,l,u,c,h,d);let v;if(g)v=he({inputs:{x:r},backend:e,attrs:{shape:f}});else if(m||y){S(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=td(x,b,w),_=Ra({inputs:{x:r},backend:e,attrs:{begin:x,size:k}});v=he({inputs:{x:_},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(_)}else if(e.shouldExecuteOnCPU([r])){const _=e.readSync(r.dataId),$=Ge(r.shape,r.dtype,_),E=CB(p,$,w,x);v=e.makeTensorInfo(f,r.dtype,E.values)}else{const _=new hK(x,w,p);v=e.runWebGLProgram(_,[r],r.dtype)}const C=he({inputs:{x:v},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(v),C}},mK={kernelName:fh,backendName:"webgl",kernelFunc:function fK(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=e.readSync(c.dataId),p=e.readSync(h.dataId),[f,g]=NB(d,p,r,a,o,i,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",g)]}},yK={kernelName:mh,backendName:"webgl",kernelFunc:function gK(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=e.readSync(a.dataId),l=e.readSync(o.dataId)[0],[u,c,h]=kB(i,l,r),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(h))]}},bK={kernelName:gh,backendName:"webgl",kernelFunc:function xK(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=e.readSync(a.dataId),i=TB(o,r);return e.makeTensorInfo(a.shape,"int32",i)}},wK=et({opSnippet:"return tan(x);"}),vK={kernelName:Eo,backendName:"webgl",kernelFunc:wK},IK=et({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),SK={kernelName:Do,backendName:"webgl",kernelFunc:IK},NK={kernelName:im,backendName:"webgl",kernelFunc:function CK(n){const{inputs:t,backend:e}=n,{tensor:r,indices:a,updates:o}=t,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rr(0,a,r.shape),d=[h/u,u];if(0===h)return e.makeTensorInfo(r.shape,a.dtype);const p=he({inputs:{x:a},backend:e,attrs:{shape:[l,i]}}),f=he({inputs:{x:o},backend:e,attrs:{shape:[l,u]}}),g=he({inputs:{x:r},backend:e,attrs:{shape:d}}),m=new Vf(l,i,p.shape.length,f.shape.length,c,d,!1,!0),y=e.runWebGLProgram(m,[f,p,g],g.dtype),x=he({inputs:{x:y},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),x}};class kK{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[o]*e[o];this.outputShape=s,this.rank=s.length;const r=ct(this.rank),a=function TK(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function cv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const l=e.readSync(r.dataId),u="string"===r.dtype?l.map(d=>$s(d)):l,c=Ge(r.shape,r.dtype,u),h=$B(c,a);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new kK(r.shape,a);return e.runWebGLProgram(o,[r],r.dtype)}const _K={kernelName:Ao,backendName:"webgl",kernelFunc:cv};class $K{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class EK{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Zr(n,t){null!==t&&n.disposeIntermediateTensorInfo(t)}function hv(n){let t=1;for(;t<n;)t*=2;return t}const AK={kernelName:yh,backendName:"webgl",kernelFunc:function DK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:a,sorted:o}=s,i=z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([r])||c<i||a>l){const E=e.readSync(r.dataId),[P,B]=EB(E,u,r.dtype,a,o);return[e.makeTensorInfo(P.shape,P.dtype,P.values),e.makeTensorInfo(B.shape,B.dtype,B.values)]}if(0===a)return u[u.length-1]=0,[e.makeTensorInfo(u,r.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(1===c)return[r,_i({attrs:{shape:u,dtype:"int32",value:0},backend:e})];const h=e.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?e.unpackTensor(r):r,g=I(u)/c,m=he({inputs:{x:p},attrs:{shape:[g,c]},backend:e});d&&Zr(e,p);const y=hv(a),x=hv(c);let b=null;const w=()=>null===b?[m,m]:[m,b],v=(E,P,B)=>{const U=w(),G=new $K(B),X=b;b=e.runWebGLProgram(G,U,"int32",[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[E],[P]]),Zr(e,X)};for(let E=1;E<y;E*=2){const P=2*E;for(let B=E;B>=1;B/=2)v(P,B,[g,x])}for(let E=x;E>y;E/=2){const P=w(),B=new EK([g,E/2]),H=b;b=e.runWebGLProgram(B,P,"int32",[[c],[null===b?1:0],[y]]),Zr(e,H);const K=y/2,X=2*K;for(let j=K;j>=1;j/=2)v(X,j,b.shape)}let C=b;b=Ra({inputs:{x:b},backend:e,attrs:{begin:0,size:[g,a]}}),Zr(e,C);let k=J1({inputs:{x:m,indices:b},backend:e,attrs:{axis:1,batchDims:1}});Zr(e,m);const _=u.slice(0,-1);_.push(a),C=b,b=he({inputs:{x:b},attrs:{shape:_},backend:e}),Zr(e,C);const $=k;return k=he({inputs:{x:k},attrs:{shape:_},backend:e}),Zr(e,$),[k,b]}};class RK{constructor(t,e,s,r,a,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const i="nearest"===s?1:2;let l;switch(r){case"constant":default:l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${l} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${l} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${l} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const FK={kernelName:xh,backendName:"webgl",kernelFunc:function OK(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],y=new RK(h,d,o,i,l,[c,f,g,p]);return e.runWebGLProgram(y,[r,a],"float32")}},LK={kernelName:bh,backendName:"webgl",kernelFunc:function PK(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:a}=t;vi(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=DB(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}},MK={kernelName:Rl,backendName:"webgl",kernelFunc:function VK(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1);let c=0;for(let g=0;g<i;g++)g!==a&&(u[c++]=o.shape[g]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[a]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[a]=g;const m=Ra({inputs:{x:o},backend:e,attrs:{begin:d,size:p}}),y=he({inputs:{x:m},backend:e,attrs:{shape:u}});f[g]=y,h.push(m)}return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}};class zK{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,a=t.inSize,o=t.numSegments,i=o*Math.ceil(a/s);this.outputShape=[r,i];const c=4*Math.floor(s/4),h=s%4,d="\n        sumValue += dot(values, segFilter);\n    ";let p="";a%s>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let f="";a%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${f}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${o})) * float(${s}));\n        int currentSeg = int(mod(float(outIdx), float(${o})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(sumValue);\n      }\n    `}}const UK=[NW,TW,EW,RW,FW,VW,zW,WW,jW,KW,YW,e4,s4,i4,c4,d4,f4,x4,w4,I4,N4,D4,R4,F4,z4,W4,j4,lW,X4,eU,rU,cU,pU,mU,yU,bU,SU,NU,TU,$U,DU,RU,PU,VU,WU,GU,qU,ZU,QU,eG,sG,aG,lG,cG,hG,pG,mG,yG,bG,vG,SG,kG,$G,DG,OG,LG,MG,BG,iW,UG,Q4,HG,qG,XG,cW,YG,JG,tH,rH,iH,uH,hH,pH,gH,xH,wH,CH,kH,_H,AH,OH,PH,VH,zH,GH,qH,YH,sj,pW,ij,cj,pj,gj,P4,xj,wj,Ij,Nj,$j,dW,Dj,Rj,Fj,Lj,Vj,L4,JH,zj,Uj,jj,mW,Zj,Jj,sq,oq,cq,dq,fq,gq,bq,Iq,Nq,_q,Dq,Rq,Lq,Mq,E4,tj,Bq,Wq,Gq,jq,Kq,Zq,Qq,eK,nK,rK,oK,lK,cK,pK,mK,yK,bK,ej,IW,vK,SK,NK,_K,AK,FK,SW,LK,MK,{kernelName:Ol,backendName:"webgl",kernelFunc:function BK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[];let u=0;const c=_t([u],i);let h=r;null!=c&&(h=bn({inputs:{x:r},backend:e,attrs:{perm:c}}),l.push(h),u=Pt(1,i)[0]);const d=xy(h.shape,u,o),p=I([h.shape[u]]),f=he({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}});l.push(f);const g=_h(r.dtype),m=(w,v,C,k,_)=>{const $=w.shape[0],E=w.shape[1],P=yy(E,_),U=new zK({windowSize:P,inSize:E,batchSize:$,numSegments:_},v),G=e.compileAndRun(U,[w,C],k);if(l.push(G),G.shape[1]===_)return G;const H=iv({backend:e,attrs:{start:0,stop:_,step:1,dtype:"float32"}}),K=cv({inputs:{x:H},backend:e,attrs:{reps:[E/P]}});return l.push(H),l.push(K),m(G,v,K,k,_)},x=he({inputs:{x:m(f,"unsortedSegmentSum",a,g,o)},backend:e,attrs:{shape:d}});let b=x;if(null!=c){l.push(x);const w=Ys(c);b=bn({inputs:{x:b},backend:e,attrs:{perm:w}})}return l.forEach(w=>e.disposeIntermediateTensorInfo(w)),b}},bj];for(const n of UK)Ch(n)},3808:(Ke,Ee,Q)=>{"use strict";Object.defineProperty(Ee,"__esModule",{value:!0}),Ee.default=void 0;var se=Q(2348);function Ce(M,L){(null==L||L>M.length)&&(L=M.length);for(var W=0,Y=new Array(L);W<L;W++)Y[W]=M[W];return Y}function fe(M,L){if(!(M instanceof L))throw new TypeError("Cannot call a class as a function")}function T(M,L){for(var W=0;W<L.length;W++){var Y=L[W];Y.enumerable=Y.enumerable||!1,Y.configurable=!0,"value"in Y&&(Y.writable=!0),Object.defineProperty(M,Y.key,Y)}}function ne(M,L,W){return L&&T(M.prototype,L),W&&T(M,W),M}Ee.default=function(){function M(L,W,Y){var Oe=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},ze=Oe.style,Le=void 0===ze?{touchAction:"none"}:ze,ot=Oe.backgroundColor,en=void 0===ot?"cyan":ot,Ze=Oe.strokeColor,tt=void 0===Ze?"black":Ze,S=Oe.strokeWeight,ee=void 0===S?15:S;fe(this,M),this.canvas=document.createElement("canvas"),this.canvas.width=W,this.canvas.height=Y,this.canvas.style.backgroundColor=en,this.setCanvasStyle(Le),L.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.strokeColor=tt,this.strokeWeight=ee,this.drawing=[{color:tt,strokeWeight:ee,points:[]}],this.height=Y,this.width=W,this.setupEventListeners()}return ne(M,null,[{key:"getPixelArray",value:function(W){var Y=W.canvas;return W.getImageData(0,0,Y.width,Y.height).data}},{key:"getGreyScalePixelArray",value:function(W){return M.getPixelArray(W).filter(function(ze,Le){return(Le+1)%4==0})}},{key:"getPixelMatrix",value:function(W){var Y=W.canvas.width,Oe=M.getGreyScalePixelArray(W);return(0,se.chunkArray)(Oe,Y)}}]),ne(M,[{key:"changeStrokeColor",value:function(W){this.strokeColor=W}},{key:"changeBackgroundColor",value:function(W){this.canvas.style.backgroundColor=W}},{key:"changeStrokeWeight",value:function(W){this.strokeWeight=W}},{key:"setCanvasStyle",value:function(W){var Y=this;Object.entries(W).forEach(function(Oe){var ze=function Ye(M,L){return function De(M){if(Array.isArray(M))return M}(M)||function we(M,L){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(M)){var W=[],Y=!0,Oe=!1,ze=void 0;try{for(var ot,Le=M[Symbol.iterator]();!(Y=(ot=Le.next()).done)&&(W.push(ot.value),!L||W.length!==L);Y=!0);}catch(en){Oe=!0,ze=en}finally{try{!Y&&null!=Le.return&&Le.return()}finally{if(Oe)throw ze}}return W}}(M,L)||function Re(M,L){if(M){if("string"==typeof M)return Ce(M,L);var W=Object.prototype.toString.call(M).slice(8,-1);if("Object"===W&&M.constructor&&(W=M.constructor.name),"Map"===W||"Set"===W)return Array.from(M);if("Arguments"===W||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(W))return Ce(M,L)}}(M,L)||function be(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(Oe,2);Y.canvas.style[ze[0]]=ze[1]})}},{key:"getDrawing",value:function(){return this.drawing}},{key:"downloadPNG",value:function(){var W=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"canvas.png",Y=this.canvas.toDataURL("image/png");(0,se.downloadURI)(Y,W)}},{key:"setupEventListeners",value:function(){this.canvas.addEventListener("pointermove",this.onPointerMove.bind(this)),window.addEventListener("pointerdown",this.onPointerDown.bind(this)),window.addEventListener("pointerup",this.onPointerUp.bind(this))}},{key:"onPointerMove",value:function(W){this.pointerIsDown&&(this.drawing[this.drawing.length-1].points.push({x:W.offsetX,y:W.offsetY}),this.draw())}},{key:"onPointerDown",value:function(){this.pointerIsDown=!0,this.drawing[this.drawing.length-1].strokeWeight=this.strokeWeight,this.drawing[this.drawing.length-1].color=this.strokeColor}},{key:"onPointerUp",value:function(){this.drawing[this.drawing.length-1].points.length>0&&this.drawing.push({color:this.strokeColor,strokeWeight:this.strokeWeight,points:[]}),this.pointerIsDown=!1}},{key:"getPixelArray",value:function(){return this.ctx.getImageData(0,0,this.width,this.height).data}},{key:"getGreyScalePixelArray",value:function(){return this.getPixelArray().filter(function(Oe,ze){return(ze+1)%4==0})}},{key:"reset",value:function(){this.drawing=[{color:this.strokeColor,strokeWeight:this.strokeWeight,points:[]}],this.clearCanvas()}},{key:"clearCanvas",value:function(){this.ctx.clearRect(0,0,this.width,this.height)}},{key:"draw",value:function(){var W=this;this.clearCanvas(),this.drawing.forEach(function(Y){W.drawStroke(Y)})}},{key:"drawLinePoint",value:function(W,Y){this.ctx.beginPath(),this.ctx.arc(W.x,W.y,Y/2,0,2*Math.PI,!0),this.ctx.closePath(),this.ctx.fill()}},{key:"drawStroke",value:function(W){var Y=W.points,Oe=W.color,ze=W.strokeWeight;if(this.ctx.strokeStyle=Oe,this.ctx.fillStyle=Oe,this.ctx.lineWidth=ze,0!==Y.length){if(Y.length<6)return void this.drawLinePoint(Y[0]);var Le;for(this.ctx.beginPath(),this.ctx.moveTo(Y[0].x,Y[0].y),Le=1;Le<Y.length-2;Le+=1)this.ctx.quadraticCurveTo(Y[Le].x,Y[Le].y,(Y[Le].x+Y[Le+1].x)/2,(Y[Le].y+Y[Le+1].y)/2);this.ctx.quadraticCurveTo(Y[Le].x,Y[Le].y,Y[Le+1].x,Y[Le+1].y),this.ctx.stroke(),this.drawLinePoint(Y[Y.length-1],ze)}}}]),M}()},7805:(Ke,Ee,Q)=>{"use strict";Ee.Z=void 0;var Ye=function be(Ce){return Ce&&Ce.__esModule?Ce:{default:Ce}}(Q(3808));Ee.Z=Ye.default},2348:(Ke,Ee)=>{"use strict";Object.defineProperty(Ee,"__esModule",{value:!0}),Ee.chunkArray=function Q(Ye,be){for(var Re=[],Ce=0;Ce<Ye.length;)Re.push(Ye.slice(Ce,be+Ce)),Ce+=be;return Re},Ee.downloadURI=function se(Ye,be){var Re=document.createElement("a");Re.download=be,Re.href=Ye,document.body.appendChild(Re),Re.click(),document.body.removeChild(Re)}},7658:Ke=>{Ke.exports=Q;var Ee=null;try{Ee=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(J){}function Q(J,I,me){this.low=0|J,this.high=0|I,this.unsigned=!!me}function se(J){return!0===(J&&J.__isLong__)}Object.defineProperty(Q.prototype,"__isLong__",{value:!0}),Q.isLong=se;var Ye={},be={};function Re(J,I){var me,de,qe;return I?(qe=0<=(J>>>=0)&&J<256)&&(de=be[J])?de:(me=we(J,(0|J)<0?-1:0,!0),qe&&(be[J]=me),me):(qe=-128<=(J|=0)&&J<128)&&(de=Ye[J])?de:(me=we(J,J<0?-1:0,!1),qe&&(Ye[J]=me),me)}function Ce(J,I){if(isNaN(J))return I?ze:Oe;if(I){if(J<0)return ze;if(J>=L)return tt}else{if(J<=-W)return S;if(J+1>=W)return Ze}return J<0?Ce(-J,I).neg():we(J%M|0,J/M|0,I)}function we(J,I,me){return new Q(J,I,me)}Q.fromInt=Re,Q.fromNumber=Ce,Q.fromBits=we;var De=Math.pow;function fe(J,I,me){if(0===J.length)throw Error("empty string");if("NaN"===J||"Infinity"===J||"+Infinity"===J||"-Infinity"===J)return Oe;if("number"==typeof I?(me=I,I=!1):I=!!I,(me=me||10)<2||36<me)throw RangeError("radix");var de;if((de=J.indexOf("-"))>0)throw Error("interior hyphen");if(0===de)return fe(J.substring(1),I,me).neg();for(var qe=Ce(De(me,8)),Xe=Oe,st=0;st<J.length;st+=8){var Vt=Math.min(8,J.length-st),vt=parseInt(J.substring(st,st+Vt),me);if(Vt<8){var zt=Ce(De(me,Vt));Xe=Xe.mul(zt).add(Ce(vt))}else Xe=(Xe=Xe.mul(qe)).add(Ce(vt))}return Xe.unsigned=I,Xe}function T(J,I){return"number"==typeof J?Ce(J,I):"string"==typeof J?fe(J,I):we(J.low,J.high,"boolean"==typeof I?I:J.unsigned)}Q.fromString=fe,Q.fromValue=T;var M=4294967296,L=M*M,W=L/2,Y=Re(1<<24),Oe=Re(0);Q.ZERO=Oe;var ze=Re(0,!0);Q.UZERO=ze;var Le=Re(1);Q.ONE=Le;var ot=Re(1,!0);Q.UONE=ot;var en=Re(-1);Q.NEG_ONE=en;var Ze=we(-1,2147483647,!1);Q.MAX_VALUE=Ze;var tt=we(-1,-1,!0);Q.MAX_UNSIGNED_VALUE=tt;var S=we(0,-2147483648,!1);Q.MIN_VALUE=S;var ee=Q.prototype;ee.toInt=function(){return this.unsigned?this.low>>>0:this.low},ee.toNumber=function(){return this.unsigned?(this.high>>>0)*M+(this.low>>>0):this.high*M+(this.low>>>0)},ee.toString=function(I){if((I=I||10)<2||36<I)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var me=Ce(I),de=this.div(me),qe=de.mul(me).sub(this);return de.toString(I)+qe.toInt().toString(I)}return"-"+this.neg().toString(I)}for(var Xe=Ce(De(I,6),this.unsigned),st=this,Vt="";;){var vt=st.div(Xe),kt=(st.sub(vt.mul(Xe)).toInt()>>>0).toString(I);if((st=vt).isZero())return kt+Vt;for(;kt.length<6;)kt="0"+kt;Vt=""+kt+Vt}},ee.getHighBits=function(){return this.high},ee.getHighBitsUnsigned=function(){return this.high>>>0},ee.getLowBits=function(){return this.low},ee.getLowBitsUnsigned=function(){return this.low>>>0},ee.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var I=0!=this.high?this.high:this.low,me=31;me>0&&0==(I&1<<me);me--);return 0!=this.high?me+33:me+1},ee.isZero=function(){return 0===this.high&&0===this.low},ee.eqz=ee.isZero,ee.isNegative=function(){return!this.unsigned&&this.high<0},ee.isPositive=function(){return this.unsigned||this.high>=0},ee.isOdd=function(){return 1==(1&this.low)},ee.isEven=function(){return 0==(1&this.low)},ee.equals=function(I){return se(I)||(I=T(I)),(this.unsigned===I.unsigned||this.high>>>31!=1||I.high>>>31!=1)&&this.high===I.high&&this.low===I.low},ee.eq=ee.equals,ee.notEquals=function(I){return!this.eq(I)},ee.neq=ee.notEquals,ee.ne=ee.notEquals,ee.lessThan=function(I){return this.comp(I)<0},ee.lt=ee.lessThan,ee.lessThanOrEqual=function(I){return this.comp(I)<=0},ee.lte=ee.lessThanOrEqual,ee.le=ee.lessThanOrEqual,ee.greaterThan=function(I){return this.comp(I)>0},ee.gt=ee.greaterThan,ee.greaterThanOrEqual=function(I){return this.comp(I)>=0},ee.gte=ee.greaterThanOrEqual,ee.ge=ee.greaterThanOrEqual,ee.compare=function(I){if(se(I)||(I=T(I)),this.eq(I))return 0;var me=this.isNegative(),de=I.isNegative();return me&&!de?-1:!me&&de?1:this.unsigned?I.high>>>0>this.high>>>0||I.high===this.high&&I.low>>>0>this.low>>>0?-1:1:this.sub(I).isNegative()?-1:1},ee.comp=ee.compare,ee.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(Le)},ee.neg=ee.negate,ee.add=function(I){se(I)||(I=T(I));var kt=0,$e=0,dt=0,rt=0;return dt+=(rt+=(65535&this.low)+(65535&I.low))>>>16,$e+=(dt+=(this.low>>>16)+(I.low>>>16))>>>16,kt+=($e+=(65535&this.high)+(65535&I.high))>>>16,kt+=(this.high>>>16)+(I.high>>>16),we((dt&=65535)<<16|(rt&=65535),(kt&=65535)<<16|($e&=65535),this.unsigned)},ee.subtract=function(I){return se(I)||(I=T(I)),this.add(I.neg())},ee.sub=ee.subtract,ee.multiply=function(I){if(this.isZero())return Oe;if(se(I)||(I=T(I)),Ee)return we(Ee.mul(this.low,this.high,I.low,I.high),Ee.get_high(),this.unsigned);if(I.isZero())return Oe;if(this.eq(S))return I.isOdd()?S:Oe;if(I.eq(S))return this.isOdd()?S:Oe;if(this.isNegative())return I.isNegative()?this.neg().mul(I.neg()):this.neg().mul(I).neg();if(I.isNegative())return this.mul(I.neg()).neg();if(this.lt(Y)&&I.lt(Y))return Ce(this.toNumber()*I.toNumber(),this.unsigned);var qe=65535&this.high,Xe=this.low>>>16,st=65535&this.low,vt=65535&I.high,zt=I.low>>>16,kt=65535&I.low,$e=0,dt=0,rt=0,pt=0;return rt+=(pt+=st*kt)>>>16,dt+=(rt+=Xe*kt)>>>16,rt&=65535,dt+=(rt+=st*zt)>>>16,$e+=(dt+=qe*kt)>>>16,dt&=65535,$e+=(dt+=Xe*zt)>>>16,dt&=65535,$e+=(dt+=st*vt)>>>16,$e+=(this.high>>>16)*kt+qe*zt+Xe*vt+st*(I.high>>>16),we((rt&=65535)<<16|(pt&=65535),($e&=65535)<<16|(dt&=65535),this.unsigned)},ee.mul=ee.multiply,ee.divide=function(I){if(se(I)||(I=T(I)),I.isZero())throw Error("division by zero");var de,qe,Xe;if(Ee)return this.unsigned||-2147483648!==this.high||-1!==I.low||-1!==I.high?we((this.unsigned?Ee.div_u:Ee.div_s)(this.low,this.high,I.low,I.high),Ee.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?ze:Oe;if(this.unsigned){if(I.unsigned||(I=I.toUnsigned()),I.gt(this))return ze;if(I.gt(this.shru(1)))return ot;Xe=ze}else{if(this.eq(S))return I.eq(Le)||I.eq(en)?S:I.eq(S)?Le:(de=this.shr(1).div(I).shl(1)).eq(Oe)?I.isNegative()?Le:en:(qe=this.sub(I.mul(de)),Xe=de.add(qe.div(I)));if(I.eq(S))return this.unsigned?ze:Oe;if(this.isNegative())return I.isNegative()?this.neg().div(I.neg()):this.neg().div(I).neg();if(I.isNegative())return this.div(I.neg()).neg();Xe=Oe}for(qe=this;qe.gte(I);){de=Math.max(1,Math.floor(qe.toNumber()/I.toNumber()));for(var Vt=Math.ceil(Math.log(de)/Math.LN2),vt=Vt<=48?1:De(2,Vt-48),zt=Ce(de),kt=zt.mul(I);kt.isNegative()||kt.gt(qe);)kt=(zt=Ce(de-=vt,this.unsigned)).mul(I);zt.isZero()&&(zt=Le),Xe=Xe.add(zt),qe=qe.sub(kt)}return Xe},ee.div=ee.divide,ee.modulo=function(I){return se(I)||(I=T(I)),Ee?we((this.unsigned?Ee.rem_u:Ee.rem_s)(this.low,this.high,I.low,I.high),Ee.get_high(),this.unsigned):this.sub(this.div(I).mul(I))},ee.mod=ee.modulo,ee.rem=ee.modulo,ee.not=function(){return we(~this.low,~this.high,this.unsigned)},ee.and=function(I){return se(I)||(I=T(I)),we(this.low&I.low,this.high&I.high,this.unsigned)},ee.or=function(I){return se(I)||(I=T(I)),we(this.low|I.low,this.high|I.high,this.unsigned)},ee.xor=function(I){return se(I)||(I=T(I)),we(this.low^I.low,this.high^I.high,this.unsigned)},ee.shiftLeft=function(I){return se(I)&&(I=I.toInt()),0==(I&=63)?this:I<32?we(this.low<<I,this.high<<I|this.low>>>32-I,this.unsigned):we(0,this.low<<I-32,this.unsigned)},ee.shl=ee.shiftLeft,ee.shiftRight=function(I){return se(I)&&(I=I.toInt()),0==(I&=63)?this:I<32?we(this.low>>>I|this.high<<32-I,this.high>>I,this.unsigned):we(this.high>>I-32,this.high>=0?0:-1,this.unsigned)},ee.shr=ee.shiftRight,ee.shiftRightUnsigned=function(I){if(se(I)&&(I=I.toInt()),0==(I&=63))return this;var me=this.high;return I<32?we(this.low>>>I|me<<32-I,me>>>I,this.unsigned):we(32===I?me:me>>>I-32,0,this.unsigned)},ee.shru=ee.shiftRightUnsigned,ee.shr_u=ee.shiftRightUnsigned,ee.toSigned=function(){return this.unsigned?we(this.low,this.high,!1):this},ee.toUnsigned=function(){return this.unsigned?this:we(this.low,this.high,!0)},ee.toBytes=function(I){return I?this.toBytesLE():this.toBytesBE()},ee.toBytesLE=function(){var I=this.high,me=this.low;return[255&me,me>>>8&255,me>>>16&255,me>>>24,255&I,I>>>8&255,I>>>16&255,I>>>24]},ee.toBytesBE=function(){var I=this.high,me=this.low;return[I>>>24,I>>>16&255,I>>>8&255,255&I,me>>>24,me>>>16&255,me>>>8&255,255&me]},Q.fromBytes=function(I,me,de){return de?Q.fromBytesLE(I,me):Q.fromBytesBE(I,me)},Q.fromBytesLE=function(I,me){return new Q(I[0]|I[1]<<8|I[2]<<16|I[3]<<24,I[4]|I[5]<<8|I[6]<<16|I[7]<<24,me)},Q.fromBytesBE=function(I,me){return new Q(I[4]<<24|I[5]<<16|I[6]<<8|I[7],I[0]<<24|I[1]<<16|I[2]<<8|I[3],me)}},340:(Ke,Ee,Q)=>{var se=Q(9471),Ye=Q(2992),be=Q(7657),Re=Q(5583),Ce=Q(1929),we=Q(8083),De=Q(3818);De.alea=se,De.xor128=Ye,De.xorwow=be,De.xorshift7=Re,De.xor4096=Ce,De.tychei=we,Ke.exports=De},9471:function(Ke,Ee,Q){var se;!function(Ye,be,Re){function Ce(T){var ne=this,re=function fe(){var T=4022871197;return function(re){re=String(re);for(var M=0;M<re.length;M++){var L=.02519603282416938*(T+=re.charCodeAt(M));L-=T=L>>>0,T=(L*=T)>>>0,T+=4294967296*(L-=T)}return 2.3283064365386963e-10*(T>>>0)}}();ne.next=function(){var M=2091639*ne.s0+2.3283064365386963e-10*ne.c;return ne.s0=ne.s1,ne.s1=ne.s2,ne.s2=M-(ne.c=0|M)},ne.c=1,ne.s0=re(" "),ne.s1=re(" "),ne.s2=re(" "),ne.s0-=re(T),ne.s0<0&&(ne.s0+=1),ne.s1-=re(T),ne.s1<0&&(ne.s1+=1),ne.s2-=re(T),ne.s2<0&&(ne.s2+=1),re=null}function we(T,ne){return ne.c=T.c,ne.s0=T.s0,ne.s1=T.s1,ne.s2=T.s2,ne}function De(T,ne){var re=new Ce(T),M=ne&&ne.state,L=re.next;return L.int32=function(){return 4294967296*re.next()|0},L.double=function(){return L()+11102230246251565e-32*(2097152*L()|0)},L.quick=L,M&&("object"==typeof M&&we(M,re),L.state=function(){return we(re,{})}),L}be&&be.exports?be.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,be))&&(be.exports=se):this.alea=De}(0,Ke=Q.nmd(Ke))},8083:function(Ke,Ee,Q){var se;!function(Ye,be,Re){function Ce(fe){var T=this,ne="";T.next=function(){var M=T.b,L=T.c,W=T.d,Y=T.a;return M=M<<25^M>>>7^L,L=L-W|0,W=W<<24^W>>>8^Y,Y=Y-M|0,T.b=M=M<<20^M>>>12^L,T.c=L=L-W|0,T.d=W<<16^L>>>16^Y,T.a=Y-M|0},T.a=0,T.b=0,T.c=-1640531527,T.d=1367130551,fe===Math.floor(fe)?(T.a=fe/4294967296|0,T.b=0|fe):ne+=fe;for(var re=0;re<ne.length+20;re++)T.b^=0|ne.charCodeAt(re),T.next()}function we(fe,T){return T.a=fe.a,T.b=fe.b,T.c=fe.c,T.d=fe.d,T}function De(fe,T){var ne=new Ce(fe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&("object"==typeof re&&we(re,ne),M.state=function(){return we(ne,{})}),M}be&&be.exports?be.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,be))&&(be.exports=se):this.tychei=De}(0,Ke=Q.nmd(Ke))},2992:function(Ke,Ee,Q){var se;!function(Ye,be,Re){function Ce(fe){var T=this,ne="";T.x=0,T.y=0,T.z=0,T.w=0,T.next=function(){var M=T.x^T.x<<11;return T.x=T.y,T.y=T.z,T.z=T.w,T.w^=T.w>>>19^M^M>>>8},fe===(0|fe)?T.x=fe:ne+=fe;for(var re=0;re<ne.length+64;re++)T.x^=0|ne.charCodeAt(re),T.next()}function we(fe,T){return T.x=fe.x,T.y=fe.y,T.z=fe.z,T.w=fe.w,T}function De(fe,T){var ne=new Ce(fe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&("object"==typeof re&&we(re,ne),M.state=function(){return we(ne,{})}),M}be&&be.exports?be.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,be))&&(be.exports=se):this.xor128=De}(0,Ke=Q.nmd(Ke))},1929:function(Ke,Ee,Q){var se;!function(Ye,be,Re){function Ce(fe){var T=this;T.next=function(){var W,Y,re=T.w,M=T.X,L=T.i;return T.w=re=re+1640531527|0,Y=M[L+34&127],W=M[L=L+1&127],Y^=Y<<13,W^=W<<17,Y=M[L]=(Y^=Y>>>15)^(W^=W>>>12),T.i=L,Y+(re^re>>>16)|0},function ne(re,M){var L,W,Y,Oe,ze,Le=[],ot=128;for(M===(0|M)?(W=M,M=null):(M+="\0",W=0,ot=Math.max(ot,M.length)),Y=0,Oe=-32;Oe<ot;++Oe)M&&(W^=M.charCodeAt((Oe+32)%M.length)),0===Oe&&(ze=W),W^=W<<10,W^=W>>>15,W^=W<<4,W^=W>>>13,Oe>=0&&(Y=0==(L=Le[127&Oe]^=W+(ze=ze+1640531527|0))?Y+1:0);for(Y>=128&&(Le[127&(M&&M.length||0)]=-1),Y=127,Oe=512;Oe>0;--Oe)W=Le[Y+34&127],L=Le[Y=Y+1&127],W^=W<<13,L^=L<<17,Le[Y]=(W^=W>>>15)^(L^=L>>>12);re.w=ze,re.X=Le,re.i=Y}(T,fe)}function we(fe,T){return T.i=fe.i,T.w=fe.w,T.X=fe.X.slice(),T}function De(fe,T){null==fe&&(fe=+new Date);var ne=new Ce(fe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&(re.X&&we(re,ne),M.state=function(){return we(ne,{})}),M}be&&be.exports?be.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,be))&&(be.exports=se):this.xor4096=De}(0,Ke=Q.nmd(Ke))},5583:function(Ke,Ee,Q){var se;!function(Ye,be,Re){function Ce(fe){var T=this;T.next=function(){var L,W,re=T.x,M=T.i;return L=re[M],W=(L^=L>>>7)^L<<24,W^=(L=re[M+1&7])^L>>>10,W^=(L=re[M+3&7])^L>>>3,W^=(L=re[M+4&7])^L<<7,L=re[M+7&7],re[M]=W^=(L^=L<<13)^L<<9,T.i=M+1&7,W},function ne(re,M){var L,Y=[];if(M===(0|M))Y[0]=M;else for(M=""+M,L=0;L<M.length;++L)Y[7&L]=Y[7&L]<<15^M.charCodeAt(L)+Y[L+1&7]<<13;for(;Y.length<8;)Y.push(0);for(L=0;L<8&&0===Y[L];++L);for(8==L&&(Y[7]=-1),re.x=Y,re.i=0,L=256;L>0;--L)re.next()}(T,fe)}function we(fe,T){return T.x=fe.x.slice(),T.i=fe.i,T}function De(fe,T){null==fe&&(fe=+new Date);var ne=new Ce(fe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&(re.x&&we(re,ne),M.state=function(){return we(ne,{})}),M}be&&be.exports?be.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,be))&&(be.exports=se):this.xorshift7=De}(0,Ke=Q.nmd(Ke))},7657:function(Ke,Ee,Q){var se;!function(Ye,be,Re){function Ce(fe){var T=this,ne="";T.next=function(){var M=T.x^T.x>>>2;return T.x=T.y,T.y=T.z,T.z=T.w,T.w=T.v,(T.d=T.d+362437|0)+(T.v=T.v^T.v<<4^M^M<<1)|0},T.x=0,T.y=0,T.z=0,T.w=0,T.v=0,fe===(0|fe)?T.x=fe:ne+=fe;for(var re=0;re<ne.length+64;re++)T.x^=0|ne.charCodeAt(re),re==ne.length&&(T.d=T.x<<10^T.x>>>4),T.next()}function we(fe,T){return T.x=fe.x,T.y=fe.y,T.z=fe.z,T.w=fe.w,T.v=fe.v,T.d=fe.d,T}function De(fe,T){var ne=new Ce(fe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&("object"==typeof re&&we(re,ne),M.state=function(){return we(ne,{})}),M}be&&be.exports?be.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,be))&&(be.exports=se):this.xorwow=De}(0,Ke=Q.nmd(Ke))},3818:function(Ke,Ee,Q){var se;!function(Ye,be,Re){var L,Ce=256,T=Re.pow(Ce,6),ne=Re.pow(2,52),re=2*ne,M=255;function W(Ze,tt,S){var ee=[],J=Le(ze((tt=1==tt?{entropy:!0}:tt||{}).entropy?[Ze,en(be)]:null==Ze?function ot(){try{var Ze;return L&&(Ze=L.randomBytes)?Ze=Ze(Ce):(Ze=new Uint8Array(Ce),(Ye.crypto||Ye.msCrypto).getRandomValues(Ze)),en(Ze)}catch(ee){var tt=Ye.navigator,S=tt&&tt.plugins;return[+new Date,Ye,S,Ye.screen,en(be)]}}():Ze,3),ee),I=new Y(ee),me=function(){for(var de=I.g(6),qe=T,Xe=0;de<ne;)de=(de+Xe)*Ce,qe*=Ce,Xe=I.g(1);for(;de>=re;)de/=2,qe/=2,Xe>>>=1;return(de+Xe)/qe};return me.int32=function(){return 0|I.g(4)},me.quick=function(){return I.g(4)/4294967296},me.double=me,Le(en(I.S),be),(tt.pass||S||function(de,qe,Xe,st){return st&&(st.S&&Oe(st,I),de.state=function(){return Oe(I,{})}),Xe?(Re.random=de,qe):de})(me,J,"global"in tt?tt.global:this==Re,tt.state)}function Y(Ze){var tt,S=Ze.length,ee=this,J=0,I=ee.i=ee.j=0,me=ee.S=[];for(S||(Ze=[S++]);J<Ce;)me[J]=J++;for(J=0;J<Ce;J++)me[J]=me[I=M&I+Ze[J%S]+(tt=me[J])],me[I]=tt;(ee.g=function(de){for(var qe,Xe=0,st=ee.i,Vt=ee.j,vt=ee.S;de--;)qe=vt[st=M&st+1],Xe=Xe*Ce+vt[M&(vt[st]=vt[Vt=M&Vt+qe])+(vt[Vt]=qe)];return ee.i=st,ee.j=Vt,Xe})(Ce)}function Oe(Ze,tt){return tt.i=Ze.i,tt.j=Ze.j,tt.S=Ze.S.slice(),tt}function ze(Ze,tt){var J,S=[],ee=typeof Ze;if(tt&&"object"==ee)for(J in Ze)try{S.push(ze(Ze[J],tt-1))}catch(I){}return S.length?S:"string"==ee?Ze:Ze+"\0"}function Le(Ze,tt){for(var ee,S=Ze+"",J=0;J<S.length;)tt[M&J]=M&(ee^=19*tt[M&J])+S.charCodeAt(J++);return en(tt)}function en(Ze){return String.fromCharCode.apply(0,Ze)}if(Le(Re.random(),be),Ke.exports){Ke.exports=W;try{L=Q(5042)}catch(Ze){}}else void 0!==(se=function(){return W}.call(Ee,Q,Ee,Ke))&&(Ke.exports=se)}("undefined"!=typeof self?self:this,[],Math)},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{},5861:(Ke,Ee,Q)=>{"use strict";function se(be,Re,Ce,we,De,fe,T){try{var ne=be[fe](T),re=ne.value}catch(M){return void Ce(M)}ne.done?Re(re):Promise.resolve(re).then(we,De)}function Ye(be){return function(){var Re=this,Ce=arguments;return new Promise(function(we,De){var fe=be.apply(Re,Ce);function T(re){se(fe,we,De,T,ne,"next",re)}function ne(re){se(fe,we,De,T,ne,"throw",re)}T(void 0)})}}Q.d(Ee,{Z:()=>Ye})}}]);