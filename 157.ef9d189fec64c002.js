(self.webpackChunkai=self.webpackChunkai||[]).push([[157],{6536:(Xe,Ee,Q)=>{"use strict";Q.d(Ee,{J:()=>xe});var se=Q(2096);const Ye=["*"];let xe=(()=>{class Re{constructor(){}ngOnInit(){}}return Re.\u0275fac=function(be){return new(be||Re)},Re.\u0275cmp=se.Xpm({type:Re,selectors:[["webex-con"]],ngContentSelectors:Ye,decls:2,vars:0,consts:[[1,"content"]],template:function(be,De){1&be&&(se.F$t(),se.TgZ(0,"div",0),se.Hsn(1),se.qZA())},styles:['[_nghost-%COMP%]{display:flex;height:auto;line-height:auto;width:100%;flex-direction:row}[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{display:block;height:auto;line-height:auto;width:15rem;content:"";flex:none}[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{display:block;height:auto;line-height:auto;width:auto;flex:1}@media screen and (min-width: 160rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:auto;flex:1}[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{width:160rem;flex:none}}@media screen and (max-width: 120rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:11.25rem}}@media screen and (max-width: 90rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:6.75rem}}@media screen and (max-width: 67.5rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:2rem}}@media screen and (max-width: 35rem){[_nghost-%COMP%]:before, [_nghost-%COMP%]:after{width:1rem}}']}),Re})()},7688:(Xe,Ee,Q)=>{"use strict";Q.d(Ee,{w:()=>ne});var se=Q(2096),Ye=Q(2313),xe=Q(9808),Re=Q(6418);const Ce=["container"];function be(re,M){if(1&re&&se._UZ(0,"p",4),2&re){const L=se.oxw();se.Q6J("innerHTML",L.html(L.primary),se.oJD)}}const De=function(re){return{"fisrt-line":re}};function pe(re,M){if(1&re&&se._UZ(0,"p",5),2&re){const L=se.oxw();se.Q6J("ngClass",se.VKq(2,De,!L.primary))("innerHTML",L.html(L.secondary),se.oJD)}}function T(re,M){if(1&re&&(se.TgZ(0,"div",6)(1,"a",7),se._uU(2),se._UZ(3,"i"),se.qZA()()),2&re){const L=se.oxw();se.xp6(1),se.Q6J("ngClass",se.VKq(3,De,!L.primary&&!L.secondary))("routerLink",L.url),se.xp6(1),se.Oqu(L.link)}}let ne=(()=>{class re{constructor(L,W){this.viewContainerRef=L,this.sanitizer=W,this.className="",this.link=""}html(L){return this.sanitizer.bypassSecurityTrustHtml(L)}}return re.\u0275fac=function(L){return new(L||re)(se.Y36(se.s_b),se.Y36(Ye.H7))},re.\u0275cmp=se.Xpm({type:re,selectors:[["webex-description"]],viewQuery:function(L,W){if(1&L&&se.Gf(Ce,5),2&L){let Y;se.iGM(Y=se.CRH())&&(W.container=Y.first)}},inputs:{primary:"primary",secondary:"secondary",className:"className",url:"url",link:"link"},decls:4,vars:4,consts:[[3,"ngClass"],["class","primary",3,"innerHTML",4,"ngIf"],["class","secondary",3,"ngClass","innerHTML",4,"ngIf"],["class","link_warps",4,"ngIf"],[1,"primary",3,"innerHTML"],[1,"secondary",3,"ngClass","innerHTML"],[1,"link_warps"],[1,"link",3,"ngClass","routerLink"]],template:function(L,W){1&L&&(se.TgZ(0,"div",0),se.YNc(1,be,1,1,"p",1),se.YNc(2,pe,1,4,"p",2),se.YNc(3,T,4,5,"div",3),se.qZA()),2&L&&(se.Q6J("ngClass",W.className),se.xp6(1),se.Q6J("ngIf",W.primary),se.xp6(1),se.Q6J("ngIf",W.secondary),se.xp6(1),se.Q6J("ngIf",W.url))},dependencies:[xe.mk,xe.O5,Re.yS],styles:["[_nghost-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%]{display:block;height:auto}.center[_ngcontent-%COMP%]{text-align:center}.primary[_ngcontent-%COMP%]{font-size:2.625rem;line-height:3rem;margin-top:0;display:block;height:auto;width:100%;word-wrap:break-word}.secondary[_ngcontent-%COMP%]{font-size:1.25rem;line-height:1.5rem;margin-top:.75rem;display:block;height:auto;width:100%;word-wrap:break-word;color:#818181}.link_warps[_ngcontent-%COMP%]{display:block;height:3.5rem;line-height:3.5rem;width:100%;vertical-align:top}.link[_ngcontent-%COMP%]{font-size:.9375rem;margin-top:0;display:block;height:auto;display:inline-block;height:3.5rem;line-height:3.5rem;width:auto;padding:0 1.75rem;border-radius:1.75rem;background-color:#fff;color:#181818;vertical-align:top;cursor:pointer}.link[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{display:inline-block;height:3.5rem;line-height:3.5rem;width:.875rem;background:url(arrow-right.11c0d3c565e33c72.svg) no-repeat center;margin-left:.1875rem;vertical-align:middle}.large[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:4.5rem;line-height:4.5rem;margin-top:0;display:block;height:auto}.large[_ngcontent-%COMP%]   .link_warps[_ngcontent-%COMP%]{margin-top:4.5rem}.middle[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:2.625rem;line-height:3rem;margin-top:0;display:block;height:auto}.middle[_ngcontent-%COMP%]   .link_warps[_ngcontent-%COMP%]{margin-top:1.5rem}.small[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:1.5rem;line-height:1.625rem;margin-top:0;display:block;height:auto}.small[_ngcontent-%COMP%]   .secondary[_ngcontent-%COMP%]{font-size:1.125rem;line-height:1.25rem;margin-top:0;display:block;height:auto}.fisrt-line[_ngcontent-%COMP%]{margin-top:0!important}@media screen and (max-width: 67.5rem){.large[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:3.5rem;line-height:3.75rem;margin-top:0;display:block;height:auto}}@media screen and (max-width: 35rem){.large[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:2.625rem;line-height:3rem;margin-top:0;display:block;height:auto}.large[_ngcontent-%COMP%]   .link_warps[_ngcontent-%COMP%]{margin-top:1.5rem}.middle[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:2.25rem;line-height:2.5rem;margin-top:0;display:block;height:auto}.middle[_ngcontent-%COMP%]   .link_warps[_ngcontent-%COMP%]{margin-top:1.5rem}.small[_ngcontent-%COMP%]   .primary[_ngcontent-%COMP%]{font-size:1.25rem;line-height:1.5rem;margin-top:0;display:block;height:auto}.small[_ngcontent-%COMP%]   .secondary[_ngcontent-%COMP%]{font-size:1rem;line-height:1.25rem;margin-top:0;display:block;height:auto}}"],changeDetection:0}),re})()},1879:(Xe,Ee,Q)=>{"use strict";Q.d(Ee,{Xhn:()=>xe,f3b:()=>je,B90:()=>Ge,BHj:()=>gs,qHZ:()=>Px,ugM:()=>De,FBF:()=>hD,MB5:()=>rT,o4J:()=>fD,nGf:()=>Tg,LGj:()=>da,m7h:()=>Ye,knu:()=>Ps,lub:()=>V,p_j:()=>Rr,D5U:()=>se,lls:()=>Wt});var se={};Q.r(se),Q.d(se,{arraysEqual:()=>we,arraysEqualWithNull:()=>Ve,assert:()=>S,assertNonNegativeIntegerDimensions:()=>hs,assertNonNull:()=>J,assertShapesMatch:()=>ee,bytesFromStringArray:()=>Gf,bytesPerElement:()=>La,checkConversionForErrors:()=>Wf,clamp:()=>Be,computeStrides:()=>Te,convertBackendValuesAndArrayBuffer:()=>qf,createScalarValue:()=>_s,createShuffledIndices:()=>zt,decodeString:()=>Es,distSquared:()=>tt,encodeString:()=>$s,fetch:()=>Dv,fingerPrint64:()=>xm,flatten:()=>js,getArrayFromDType:()=>Dt,getTypedArrayFromDType:()=>Et,hasEncodingLoss:()=>Nc,hexToLong:()=>Po,indexToLoc:()=>br,inferDtype:()=>xr,inferFromImplicitShape:()=>cn,isBoolean:()=>Hf,isFunction:()=>Ai,isInt:()=>We,isNumber:()=>Di,isPromise:()=>Fi,isScalarShape:()=>fe,isString:()=>Jr,isTypedArray:()=>An,isValidDtype:()=>Uf,locToIndex:()=>Jn,makeOnesTypedArray:()=>Oi,makeZerosNestedTypedArray:()=>kc,makeZerosTypedArray:()=>tn,nearestDivisor:()=>Ri,nearestLargerEven:()=>Le,now:()=>dn,parseAxisParam:()=>ke,randUniform:()=>Ze,repeatedTry:()=>Ct,rightPad:()=>St,shuffle:()=>Y,shuffleCombo:()=>Oe,sizeFromShape:()=>I,sizeToSquarishShape:()=>It,squeezeShape:()=>$t,sum:()=>en,swap:()=>rt,tanh:()=>at,toNestedArray:()=>Wn,toTypedArray:()=>Hs});var Ye={};Q.r(Ye),Q.d(Ye,{Serializable:()=>kr,SerializationMap:()=>Rn,registerClass:()=>te});var xe={};Q.r(xe),Q.d(xe,{fromPixels:()=>iS,fromPixelsAsync:()=>aS,toPixels:()=>oS});var Re={};Q.r(Re),Q.d(Re,{assertParamsValid:()=>td,computeFlatOffset:()=>rd,computeOutShape:()=>nd,getNormalizedAxes:()=>cS,isSliceContinous:()=>sd,maskToAxes:()=>uS,parseSliceParams:()=>Ql,sliceInfo:()=>ad,startForAxis:()=>mg,startIndicesWithElidedDims:()=>dg,stopForAxis:()=>gg,stopIndicesWithElidedDims:()=>pg,stridesForAxis:()=>fg,stridesWithElidedDims:()=>ug});var Ce={};Q.r(Ce),Q.d(Ce,{collectGatherOpShapeInfo:()=>rp,computeOutShape:()=>wy,segOpComputeOptimalWindowSize:()=>by});var be={};Q.r(be),Q.d(be,{ERF_A1:()=>Gd,ERF_A2:()=>Hd,ERF_A3:()=>jd,ERF_A4:()=>qd,ERF_A5:()=>Kd,ERF_P:()=>Ud,PARALLELIZE_THRESHOLD:()=>Vd,RowPartitionType:()=>qn,SELU_SCALE:()=>gu,SELU_SCALEALPHA:()=>mu,applyActivation:()=>uu,assertAndGetBroadcastShape:()=>ze,assertAxesAreInnerMostDims:()=>rn,assertParamsConsistent:()=>Ld,assignToTypedArray:()=>sy,axesAreInnerMostDims:()=>md,calculateShapes:()=>Or,checkEinsumDimSizes:()=>Jd,checkPadOnDimRoundingMode:()=>mn,combineLocations:()=>Ng,combineRaggedTensorToTensorShapes:()=>Xg,complexWithEvenIndex:()=>ty,complexWithOddIndex:()=>ny,computeConv2DInfo:()=>Zt,computeConv3DInfo:()=>Zs,computeDefaultPad:()=>id,computeDilation2DInfo:()=>Ho,computeOptimalWindowSize:()=>fu,computeOutAndReduceShapes:()=>Yt,computeOutShape:()=>ys,computePool2DInfo:()=>Un,computePool3DInfo:()=>As,convertConv2DDataFormat:()=>Rs,decodeEinsumEquation:()=>Yd,eitherStridesOrDilationsAreOne:()=>sn,expandShapeToKeepDim:()=>Pt,exponent:()=>ay,exponents:()=>ry,fromStringArrayToUint8:()=>vy,fromUint8ToStringArray:()=>Ms,getAxesPermutation:()=>kt,getBroadcastDims:()=>ua,getComplexWithIndex:()=>Xd,getEinsumComputePath:()=>ep,getEinsumPermutation:()=>Qd,getFusedBiasGradient:()=>lu,getFusedDyActivation:()=>iu,getImageCenter:()=>Md,getInnerMostAxes:()=>Lt,getPermuted:()=>ti,getRaggedRank:()=>Yg,getReductionAxes:()=>Bt,getReshaped:()=>ei,getReshapedPermuted:()=>ni,getRowPartitionTypesHelper:()=>Zg,getSliceBeginCoords:()=>zd,getSliceSize:()=>Bd,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>ly,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>uy,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>cy,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>py,getSparseReshapeInputOutputMismatchErrorMessage:()=>my,getSparseReshapeInputOutputMultipleErrorMessage:()=>fy,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>hy,getSparseReshapeNegativeOutputDimErrorMessage:()=>dy,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>xy,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>sp,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>gy,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>yy,getUndoAxesPermutation:()=>Qs,isIdentityPermutation:()=>tp,log:()=>Sv,mergeRealAndImagArrays:()=>Vs,prepareAndValidate:()=>Wd,prepareSplitSize:()=>np,segment_util:()=>Ce,shouldFuse:()=>cu,slice_util:()=>Re,splitRealAndImagArrays:()=>ey,stridesOrDilationsArePositive:()=>_r,tupleValuesAreOne:()=>Ys,upcastType:()=>Nn,validateDefaultValueShape:()=>Qg,validateInput:()=>iT,validateUpdateShape:()=>Jg,warn:()=>Dn});var De={};Q.r(De),Q.d(De,{Layer:()=>qe,RNN:()=>Br,RNNCell:()=>pi,activation:()=>XD,add:()=>rA,alphaDropout:()=>BA,average:()=>aA,averagePooling1d:()=>Yp,averagePooling2d:()=>Qp,averagePooling3d:()=>Jp,avgPool1d:()=>fA,avgPool2d:()=>gA,avgPool3d:()=>xA,avgPooling1d:()=>mA,avgPooling2d:()=>yA,avgPooling3d:()=>bA,batchNormalization:()=>hA,bidirectional:()=>RA,categoryEncoding:()=>jA,centerCrop:()=>GA,concatenate:()=>oA,conv1d:()=>zD,conv2d:()=>BD,conv2dTranspose:()=>WD,conv3d:()=>UD,conv3dTranspose:()=>GD,convLstm2d:()=>$A,convLstm2dCell:()=>EA,cropping2D:()=>jD,dense:()=>ZD,depthwiseConv2d:()=>KD,dot:()=>cA,dropout:()=>YD,elu:()=>OD,embedding:()=>sA,flatten:()=>JD,gaussianDropout:()=>zA,gaussianNoise:()=>MA,globalAveragePooling1d:()=>wA,globalAveragePooling2d:()=>vA,globalMaxPool1d:()=>FA,globalMaxPool2d:()=>PA,globalMaxPooling1d:()=>Yb,globalMaxPooling2d:()=>Qb,gru:()=>SA,gruCell:()=>CA,input:()=>Px,inputLayer:()=>RD,layerNormalization:()=>dA,leakyReLU:()=>PD,lstm:()=>NA,lstmCell:()=>kA,masking:()=>WA,maxPool1d:()=>LA,maxPool2d:()=>VA,maxPooling1d:()=>Jb,maxPooling2d:()=>e0,maxPooling3d:()=>IA,maximum:()=>iA,minimum:()=>lA,multiply:()=>uA,permute:()=>nA,prelu:()=>LD,randomWidth:()=>qA,reLU:()=>FD,repeatVector:()=>eA,rescaling:()=>UA,reshape:()=>tA,resizing:()=>HA,rnn:()=>DA,separableConv2d:()=>HD,simpleRNN:()=>TA,simpleRNNCell:()=>_A,softmax:()=>VD,spatialDropout1d:()=>QD,stackedRNNCells:()=>AA,thresholdedReLU:()=>MD,timeDistributed:()=>OA,upSampling2d:()=>qD,zeroPadding2d:()=>pA});var pe={};Q.r(pe),Q.d(pe,{addImpl:()=>B0,bincountImpl:()=>mf,bincountReduceImpl:()=>q0,bitwiseAndImpl:()=>K0,castImpl:()=>z0,ceilImpl:()=>X0,concatImpl:()=>Z0,equalImpl:()=>J0,expImpl:()=>tw,expm1Impl:()=>sw,floorDivImpl:()=>iw,floorImpl:()=>ow,gatherNdImpl:()=>lw,gatherV2Impl:()=>uw,greaterEqualImpl:()=>hw,greaterImpl:()=>cw,lessEqualImpl:()=>pw,lessImpl:()=>dw,linSpaceImpl:()=>fw,logImpl:()=>mw,maxImpl:()=>gw,maximumImpl:()=>xw,minimumImpl:()=>bw,multiplyImpl:()=>gf,negImpl:()=>vw,notEqualImpl:()=>Iw,prodImpl:()=>kw,raggedGatherImpl:()=>_w,raggedRangeImpl:()=>Ew,raggedTensorToTensorImpl:()=>Rw,rangeImpl:()=>Ow,rsqrtImpl:()=>Fw,scatterImpl:()=>jr,sigmoidImpl:()=>HR,simpleAbsImpl:()=>U0,sliceImpl:()=>j0,sparseFillEmptyRowsImpl:()=>Lw,sparseReshapeImpl:()=>Vw,sparseSegmentReductionImpl:()=>If,sqrtImpl:()=>mM,squaredDifferenceImpl:()=>Mw,staticRegexReplaceImpl:()=>zw,stridedSliceImpl:()=>Bw,stringNGramsImpl:()=>Ww,stringSplitImpl:()=>Uw,stringToHashBucketFastImpl:()=>Gw,subImpl:()=>rw,tileImpl:()=>Hw,topKImpl:()=>qw,transposeImpl:()=>pf,uniqueImpl:()=>Xw});var T=Q(5861);class M{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class L{refCount(t){return W("refCount")}incRef(t){return W("incRef")}timerAvailable(){return!0}time(t){return W("time")}read(t){return W("read")}readSync(t){return W("readSync")}readToGPU(t,e){return W("readToGPU")}numDataIds(){return W("numDataIds")}disposeData(t,e){return W("disposeData")}write(t,e,s){return W("write")}move(t,e,s,r,a){return W("move")}createTensorFromGPUData(t,e,s){return W("createTensorFromGPUData")}memory(){return W("memory")}floatPrecision(){return W("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return W("dispose")}}function W(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Y(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,rt(n,t,e)}function Oe(n,t){if(n.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${t.length}`);let e=n.length,s=0;for(;e>0;)s=Math.random()*e|0,e--,rt(n,e,s),rt(t,e,s)}function Be(n,t,e){return Math.max(n,Math.min(t,e))}function Le(n){return n%2==0?n:n+1}function rt(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function en(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function Ze(n,t){const e=Math.random();return t*e+(1-e)*n}function tt(n,t){let e=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(t[s]);e+=r*r}return e}function S(n,t){if(!n)throw new Error("string"==typeof t?t:t())}function ee(n,t,e=""){S(we(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function J(n){S(null!=n,()=>"The input to the tensor constructor must be a non-null value.")}function I(n){if(0===n.length)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function fe(n){return 0===n.length}function Ve(n,t){if(n===t)return!0;if(null==n||null==t||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(null!==n[e]&&null!==t[e]&&n[e]!==t[e])return!1;return!0}function we(n,t){if(n===t)return!0;if(null==n||null==t||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function We(n){return n%1==0}function at(n){if(null!=Math.tanh)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const t=Math.exp(2*n);return(t-1)/(t+1)}}function It(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function zt(n){const t=new Uint32Array(n);for(let e=0;e<n;++e)t[e]=e;return Y(t),t}function St(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function Ct(n,t=(r=>0),e,s){return new Promise((r,a)=>{let o=0;const i=()=>{if(n())return void r();o++;const l=t(o);null!=e&&o>=e?a():null!=s?s(i,l):setTimeout(i,l)};i()})}function cn(n,t){let e=1,s=-1;for(let a=0;a<n.length;++a)if(n[a]>=0)e*=n[a];else if(-1===n[a]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(n[a]<0)throw Error(`Shapes can not be < 0. Found ${n[a]} at dim ${a}`);if(-1===s){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(0===e)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function ke(n,t){const e=t.length;return S((n=null==n?t.map((s,r)=>r):[].concat(n)).every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),S(n.every(s=>We(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function $t(n,t){const e=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:ke(t,n).sort();let o=0;for(let i=0;i<n.length;++i){if(null!=a){if(a[o]===i&&1!==n[i])throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(null==a[o]||a[o]>i)&&1===n[i]&&(e.push(n[i]),s.push(i)),a[o]<=i&&o++}1!==n[i]&&(e.push(n[i]),s.push(i))}return{newShape:e,keptDims:s}}function Et(n,t){return Dt(n,t)}function Dt(n,t){let e=null;if(null==n||"float32"===n)e=new Float32Array(t);else if("int32"===n)e=new Int32Array(t);else if("bool"===n)e=new Uint8Array(t);else{if("string"!==n)throw new Error(`Unknown data type ${n}`);e=new Array(t)}return e}function Wf(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Uf(n){return"bool"===n||"complex64"===n||"float32"===n||"int32"===n||"string"===n}function Nc(n,t){return!("complex64"===t||"float32"===t&&"complex64"!==n||"int32"===t&&"float32"!==n&&"complex64"!==n||"bool"===t&&"bool"===n)}function La(n){if("float32"===n||"int32"===n)return 4;if("complex64"===n)return 8;if("bool"===n)return 1;throw new Error(`Unknown dtype ${n}`)}function Gf(n){if(null==n)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Jr(n){return"string"==typeof n||n instanceof String}function Hf(n){return"boolean"==typeof n}function Di(n){return"number"==typeof n}function xr(n){return Array.isArray(n)?xr(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Di(n)?"float32":Jr(n)?"string":Hf(n)?"bool":"float32"}function Ai(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Ri(n,t){for(let e=t;e<n;++e)if(n%e==0)return e;return n}function Te(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function jf(n,t,e,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=e[n+o]}else{const a=t[0],o=t.slice(1),i=o.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<a;l++)r[l]=jf(n+l*i,o,e,s)}return r}function Wn(n,t,e=!1){if(0===n.length)return t[0];const s=n.reduce((r,a)=>r*a)*(e?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return jf(0,n,t,e)}function qf(n,t){if(Array.isArray(n))return n;if("float32"===t)return n instanceof Float32Array?n:new Float32Array(n);if("int32"===t)return n instanceof Int32Array?n:new Int32Array(n);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function Oi(n,t){const e=tn(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function tn(n,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t)return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function kc(n,t){const e=n.reduce((s,r)=>s*r,1);if(null==t||"float32"===t)return Wn(n,new Float32Array(e));if("int32"===t)return Wn(n,new Int32Array(e));if("bool"===t)return Wn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function hs(n){n.forEach(t=>{S(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Jn(n,t,e){if(0===t)return 0;if(1===t)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function br(n,t,e){if(0===t)return[];if(1===t)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Fi(n){return n&&n.then&&"function"==typeof n.then}const Kf="tfjsflags";class mv{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=gv,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},null!=this.urlFlags[t]){const r=this.urlFlags[t];z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}getAsync(t){var e=this;return(0,T.Z)(function*(){return t in e.flags||(e.flags[t]=yield e.evaluateFlag(t)),e.flags[t]})()}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Fi(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);Kf in t&&t[Kf].split(",").forEach(s=>{const[r,a]=s.split(":");this.urlFlags[r]=function xv(n,t){const e=t.toLowerCase();return"true"===e||"false"===e?"true"===e:""+ +e===e?+e:t}(0,a)})}}function gv(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(function yv(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}(t,s[0],s[1]),s.join("="))),t}function z(){return Xf}let Tc,Xf=null;function Zf(){if(null==Tc){let n;if("undefined"!=typeof window)n=window;else if("undefined"!=typeof global)n=global;else if("undefined"!=typeof process)n=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");n=self}Tc=n}return Tc}function _c(n,t){const e=function wv(){const n=Zf();return null==n._tfGlobals&&(n._tfGlobals=new Map),n._tfGlobals}();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Pi="Abs",Va="Acos",Ma="Acosh",ea="Add",$c="AddN",Li="ArgMax",Vi="ArgMin",za="Asin",Ba="Asinh",Wa="Atan",Ua="Atanh",Ga="Atan2",Mi="AvgPool",Ac="AvgPoolGrad",zi="AvgPool3D",Rc="AvgPool3DGrad",Bi="BatchMatMul",Wi="BatchToSpaceND",Oc="Bincount",Yf="BitwiseAnd",Qf="BroadcastArgs",Ha="Cast",ja="Ceil",qa="ClipByValue",Fc="Complex",Ui="ComplexAbs",Gi="Concat",Hi="Conv2D",Pc="Conv2DBackpropFilter",ji="Conv2DBackpropInput",qi="Conv3D",Lc="Conv3DBackpropFilterV2",Vc="Conv3DBackpropInputV2",Ka="Cos",Xa="Cosh",Mc="Cumprod",Ki="Cumsum",zc="CropAndResize",Bc="DenseBincount",Wc="DepthToSpace",Xi="DepthwiseConv2dNative",Uc="DepthwiseConv2dNativeBackpropFilter",Gc="DepthwiseConv2dNativeBackpropInput",Zi="Dilation2D",Hc="Dilation2DBackpropInput",jc="Dilation2DBackpropFilter",Za="RealDiv",Ya="Elu",qc="EluGrad",Qa="Erf",Yi="Equal",Ja="Exp",Qi="ExpandDims",eo="Expm1",Xc="Fill",Zc="FlipLeftRight",to="Floor",no="FloorDiv",Ji="FusedBatchNorm",el="GatherV2",tm="GatherNd",tl="Greater",so="GreaterEqual",ro="Identity",Yc="IFFT",Qc="Imag",ao="IsFinite",oo="IsInf",lo="IsNan",nl="LeakyRelu",sl="Less",rl="LessEqual",nm="LinSpace",uo="Log",co="Log1p",al="LogicalAnd",ol="LogicalNot",il="LogicalOr",ll="LRN",Jc="LRNGrad",ul="Max",ho="Maximum",cl="MaxPool",eh="MaxPoolGrad",hl="MaxPool3D",th="MaxPool3DGrad",sm="MaxPoolWithArgmax",dl="Mean",pl="Min",po="Minimum",fl="MirrorPad",fo="Mod",rm="Multinomial",mo="Multiply",ml="Neg",gl="NotEqual",nh="NonMaxSuppressionV3",sh="NonMaxSuppressionV4",rh="NonMaxSuppressionV5",yl="OnesLike",xl="OneHot",bl="Pack",wl="PadV2",go="Pow",vl="Prelu",Il="Prod",am="RaggedGather",om="RaggedRange",im="RaggedTensorToTensor",ah="Range",oh="Real",yo="Reciprocal",xo="Relu",Sl="Reshape",Cl="ResizeNearestNeighbor",ih="ResizeNearestNeighborGrad",Nl="ResizeBilinear",lh="ResizeBilinearGrad",bo="Relu6",kl="Reverse",wo="Round",vo="Rsqrt",lm="ScatterNd",um="TensorScatterUpdate",cm="SearchSorted",Tl="Select",Io="Selu",_l="Slice",So="Sin",Co="Sinh",No="Sign",ko="Sigmoid",To="Softplus",_o="Sqrt",$l="Sum",El="SpaceToBatchND",Dl="SplitV",Al="Softmax",uh="SparseFillEmptyRows",ch="SparseReshape",hh="SparseSegmentMean",dh="SparseSegmentSum",hm="SparseToDense",$o="SquaredDifference",ph="Square",Rl="StaticRegexReplace",fh="StridedSlice",mh="StringNGrams",gh="StringSplit",yh="StringToHashBucketFast",Eo="Sub",Do="Tan",Ao="Tanh",Ro="Tile",xh="TopK",bh="Transform",ta="Transpose",wh="Unique",Ol="Unpack",Fl="UnsortedSegmentSum",Pl="ZerosLike",Oo="Step",vh="FromPixels",Ih="RotateWithOffset",Ll="_FusedMatMul",Vl="FusedConv2D",Ml="FusedDepthwiseConv2D";function Dn(...n){z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(...n)}function Sv(...n){z().getBool("IS_TEST")||z().getBool("PROD")||console.log(...n)}const na=_c("kernelRegistry",()=>new Map),Fo=_c("gradRegistry",()=>new Map);function Sh(n,t){const e=kh(n,t);return na.get(e)}function dm(n){return Fo.get(n)}function Ch(n){const t=na.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,o]=r,[i]=a.split("_");i===n&&e.push(o)}return e}function Nh(n){const{kernelName:t,backendName:e}=n,s=kh(t,e);na.has(s)&&Dn(`The kernel '${t}' for backend '${e}' is already registered`),na.set(s,n)}function Cv(n){const{kernelName:t}=n;Fo.has(t)&&z().getBool("DEBUG")&&Dn(`Overriding the gradient for '${t}'`),Fo.set(t,n)}function kh(n,t){return`${t}_${n}`}function pm(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var fm=Q(7658);const wr=Q.n(fm)()||fm;function Po(n){return wr.fromString(n,!0,16)}const mm=Po("c3a5c85c97cb3127"),vr=Po("b492b66fbe98f273"),hn=Po("9ae16a3b2f90404f");function Th(n){return n.xor(n.shru(47))}function gm(n,t,e){const s=n.slice(t,t+e);return wr.fromBytes(Array.from(s),!0,!0)}function dt(n,t){return gm(n,t,8)}function ym(n,t){return gm(n,t,4)}function Kt(n,t){return 0===t?n:n.shru(t).or(n.shl(64-t))}function Gs(n,t,e=Po("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let r=t.xor(s).mul(e);return r=r.xor(r.shru(47)),r=r.mul(e),r}function zl(n,t,e,s){return function kv(n,t,e,s,r,a){r=r.add(n),a=Kt(a.add(r).add(s),21);const o=r;return r=(r=r.add(t)).add(e),a=a.add(Kt(r,44)),[r.add(s),a.add(o)]}(dt(n,t),dt(n,t+8),dt(n,t+16),dt(n,t+24),e,s)}function xm(n,t=n.length){const e=wr.fromNumber(81,!0);if(t<=32)return t<=16?function Tv(n,t=n.length){if(t>=8){const e=hn.add(2*t),s=dt(n,0).add(hn),r=dt(n,t-8);return Gs(Kt(r,37).mul(e).add(s),Kt(s,25).add(r).mul(e),e)}if(t>=4){const e=hn.add(2*t);return Gs(ym(n,0).shl(3).add(t),ym(n,t-4),e)}if(t>0){const o=t+(n[t-1]<<2);return Th(hn.mul(n[0]+(n[t>>1]<<8)).xor(mm.mul(o))).mul(hn)}return hn}(n,t):function _v(n,t=n.length){const e=hn.add(2*t),s=dt(n,0).mul(vr),r=dt(n,8),a=dt(n,t-8).mul(e),o=dt(n,t-16).mul(hn);return Gs(Kt(s.add(r),43).add(Kt(a,30)).add(o),s.add(Kt(r.add(hn),18)).add(a),e)}(n,t);if(t<=64)return function $v(n,t=n.length){const e=hn.add(2*t),s=dt(n,0).mul(hn),r=dt(n,8),a=dt(n,t-8).mul(e),o=dt(n,t-16).mul(hn),i=Kt(s.add(r),43).add(Kt(a,30)).add(o),l=Gs(i,s.add(Kt(r.add(hn),18)).add(a),e),u=dt(n,16).mul(e),c=dt(n,24),h=i.add(dt(n,t-32)).mul(e),d=l.add(dt(n,t-24)).mul(e);return Gs(Kt(u.add(c),43).add(Kt(h,30)).add(d),u.add(Kt(c.add(s),18)).add(h),e)}(n,t);let s=e,r=e.mul(vr).add(113),a=Th(r.mul(hn).add(113)).mul(hn),o=[wr.UZERO,wr.UZERO],i=[wr.UZERO,wr.UZERO];s=s.mul(hn).add(dt(n,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Kt(s.add(r).add(o[0]).add(dt(n,l+8)),37).mul(vr),r=Kt(r.add(o[1]).add(dt(n,l+48)),42).mul(vr),s=s.xor(i[1]),r=r.add(o[0]).add(dt(n,l+40)),a=Kt(a.add(i[0]),33).mul(vr),o=zl(n,l,o[1].mul(vr),s.add(i[0])),i=zl(n,l+32,a.add(i[1]),r.add(dt(n,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=vr.add(a.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=Kt(s.add(r).add(o[0]).add(dt(n,l+8)),37).mul(h),r=Kt(r.add(o[1]).add(dt(n,l+48)),42).mul(h),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(dt(n,l+40))),a=Kt(a.add(i[0]),33).mul(h),o=zl(n,l,o[1].mul(h),s.add(i[0])),i=zl(n,l+32,a.add(i[1]),r.add(dt(n,l+16))),[a,s]=[s,a],Gs(Gs(o[0],i[0],h).add(Th(r).mul(mm)).add(a),Gs(o[1],i[1],h).add(s),h)}function _s(n,t){return"string"===t?$s(n):Hs([n],t)}function Hs(n,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=js(n)),z().getBool("DEBUG")&&Wf(n,t),function Ev(n,t){return n instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t}(n,t))return n;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)0!==Math.round(n[s])&&(e[s]=1);return e}throw new Error(`Unknown data type ${t}`)}function dn(){return z().platform.now()}function Dv(n,t){return z().platform.fetch(n,t)}function $s(n,t="utf-8"){return t=t||"utf-8",z().platform.encode(n,t)}function Es(n,t="utf-8"){return t=t||"utf-8",z().platform.decode(n,t)}function An(n){return null!=z().platform.isTypedArray?z().platform.isTypedArray(n):pm(n)}function js(n,t=[],e=!1){if(null==t&&(t=[]),"boolean"==typeof n||"number"==typeof n||"string"==typeof n||Fi(n)||null==n||An(n)&&e)t.push(n);else if(Array.isArray(n)||An(n))for(let s=0;s<n.length;++s)js(n[s],t,e);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)js(n[r],t,e)}return t}class Av{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Ov)}profileKernel(t,e,s){let r;const a=()=>{r=s()};let o;const i=dn();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(a);else{a();for(const u of r)u.dataSync();o=Promise.resolve({kernelMs:dn()-i})}if(z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{Rv(h,c.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:o.then(u=>u.kernelMs),extraInfo:o.then(u=>null!=u.getExtraProfileInfo?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:a,extraInfo:o}=t;s.forEach(i=>{Promise.all([i.data(),r,o]).then(l=>{this.logger.logKernelProfile(e,i,l[0],l[1],a,l[2])})})}}function Rv(n,t,e){if("float32"!==t)return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class Ov{logKernelProfile(t,e,s,r,a,o){const i="number"==typeof r?St(`${r}ms`,9):r.error,l=St(t,25),u=e.rank,c=e.size,h=St(e.shape.toString(),14);let d="";for(const p in a){const f=a[p];if(null!=f){const g=f.shape||e.shape,m=g.length;d+=`${p}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}\t%c${i}\t%c${u}D ${h}\t%c${c}\t%c${d}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Lv(n,t,e,s){const r=Te(t),a=function Vv(n,t,e,s){const r=I(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l="complex64"===e?Mo(n):n;if(i>1)for(let u=0;u<r/a;u++){const c=u*a;for(let h=0;h<a;h++)o[h]=Math.max(o[h],Vo(l[c+h],0,e).length)}return o}(n,t,e,r),o=t.length,i=Bl(n,t,e,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join("\n")),l.join("\n")}function Vo(n,t,e){let s;return s=Array.isArray(n)?`${parseFloat(n[0].toFixed(7))} + ${parseFloat(n[1].toFixed(7))}j`:Jr(n)?`'${n}'`:"bool"===e?wm(n):parseFloat(n.toFixed(7)).toString(),St(s,t)}function wm(n){return 0===n?"false":"true"}function Bl(n,t,e,s,r,a=!0){const o="complex64"===e?2:1,i=t[0],l=t.length;if(0===l)return"complex64"===e?[Vo(Mo(n)[0],0,e)]:"bool"===e?[wm(n[0])]:[n[0].toString()];if(1===l){if(i>20){let y=Array.from(n.slice(0,3*o)),x=Array.from(n.slice((i-3)*o,i*o));return"complex64"===e&&(y=Mo(y),x=Mo(x)),["["+y.map((b,w)=>Vo(b,r[w],e)).join(", ")+", ..., "+x.map((b,w)=>Vo(b,r[i-3+w],e)).join(", ")+"]"]}return["["+("complex64"===e?Mo(n):Array.from(n)).map((m,y)=>Vo(m,r[y],e)).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*o,d=[];if(i>20){for(let g=0;g<3;g++){const m=g*h;d.push(...Bl(n.slice(m,m+h),u,e,c,r,!1))}d.push("...");for(let g=i-3;g<i;g++){const m=g*h;d.push(...Bl(n.slice(m,m+h),u,e,c,r,g===i-1))}}else for(let g=0;g<i;g++){const m=g*h;d.push(...Bl(n.slice(m,m+h),u,e,c,r,g===i-1))}const p=2===l?",":"";d[0]="["+(i>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<l;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Mo(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}class nn{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=I(t),null!=s){const r=s.length;S(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Dt(e,this.size),this.strides=Te(t)}set(t,...e){0===e.length&&(e=[0]),S(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e])throw new Error(`Requested out of range element at ${t}.   Buffer shape=${this.shape}`);e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return es().makeTensor(this.values,this.shape,this.dtype)}}let es=null,sa=null,vm=null;class Ot{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=I(t),this.strides=Te(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var t=this;return(0,T.Z)(function*(){const e=yield t.data();return sa.buffer(t.shape,t.dtype,e)})()}bufferSync(){return sa.buffer(this.shape,this.dtype,this.dataSync())}array(){var t=this;return(0,T.Z)(function*(){const e=yield t.data();return Wn(t.shape,e,"complex64"===t.dtype)})()}arraySync(){return Wn(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var t=this;return(0,T.Z)(function*(){t.throwIfDisposed();const e=es().read(t.dataId);if("string"===t.dtype){const s=yield e;try{return s.map(r=>Es(r))}catch(r){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})()}dataToGPU(t){return this.throwIfDisposed(),es().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=es().readSync(this.dataId);if("string"===this.dtype)try{return t.map(e=>Es(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){var t=this;return(0,T.Z)(function*(){t.throwIfDisposed();const e=yield es().read(t.dataId);return"string"===t.dtype?e:new Uint8Array(e.buffer)})()}dispose(){this.isDisposed||(es().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return sa.print(this,t)}clone(){return this.throwIfDisposed(),sa.clone(this)}toString(t=!1){return Lv(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),sa.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),es().makeVariable(this,t,e,s)}}function q(){return _c("Tensor",()=>Ot)}Object.defineProperty(Ot,Symbol.hasInstance,{value:n=>!!n&&null!=n.data&&null!=n.dataSync&&null!=n.throwIfDisposed}),q();class Wl extends Ot{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!we(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);es().disposeTensor(this),this.dataId=t.dataId,es().incRef(this,null)}dispose(){es().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Wl,Symbol.hasInstance,{value:n=>n instanceof Ot&&null!=n.assign&&n.assign instanceof Function});var Ul=(()=>{return(n=Ul||(Ul={})).float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64",Ul;var n})(),Gl=(()=>{return(n=Gl||(Gl={})).float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64",Gl;var n})(),Hl=(()=>{return(n=Hl||(Hl={})).float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64",Hl;var n})(),jl=(()=>{return(n=jl||(jl={})).float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64",jl;var n})();const Wv={float32:Hl,int32:Ul,bool:Gl,complex64:jl};function Nn(n,t){if("string"===n||"string"===t){if("string"===n&&"string"===t)return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return Wv[n][t]}function $h(n){return Nn(n,"int32")}function Im(n){return null!=n&&"object"==typeof n&&"texture"in n&&n.texture instanceof WebGLTexture}function Sm(n){return"undefined"!=typeof GPUBuffer&&null!=n&&"object"==typeof n&&"buffer"in n&&n.buffer instanceof GPUBuffer}function At(n,t){if(n.dtype===t.dtype)return[n,t];const e=Nn(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function Cm(n){const t=[];return Nm(n,t,new Set),t}function Nm(n,t,e){if(null==n)return;if(n instanceof Ot)return void t.push(n);if(!function Uv(n){return Array.isArray(n)||"object"==typeof n}(n))return;const s=n;for(const r in s){const a=s[r];e.has(a)||(e.add(a),Nm(a,t,e))}}function Eh(n){return null!=n.kernelName}class km{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}let Gv=(()=>{class n{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new km}ready(){var e=this;return(0,T.Z)(function*(){if(null!=e.pendingBackendInit)return e.pendingBackendInit.then(()=>{});if(null!=e.backendInstance)return;const s=e.getSortedBackends();for(let r=0;r<s.length;r++){const a=s[r];if(yield e.initializeBackend(a).success)return void(yield e.setBackend(a))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:s}=this.initializeBackendsAndReturnBest();if(s)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:s}=this.initializeBackend(e);if(s)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,s,r=1){return e in this.registryFactory?(Dn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:s,priority:r},!0)}setBackend(e){var s=this;return(0,T.Z)(function*(){if(null==s.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(s.backendName=e,null==s.registry[e]){s.backendInstance=null;const{success:r,asyncInit:a}=s.initializeBackend(e);if(!(a?yield r:r))return!1}return s.backendInstance=s.registry[e],s.setupRegisteredKernels(),s.profiler=new Av(s.backendInstance),!0})()}setupRegisteredKernels(){Ch(this.backendName).forEach(s=>{null!=s.setupFunc&&s.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ch(e).forEach(r=>{null!=r.disposeFunc&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const s=this.registryFactory[e];if(null==s)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=s.factory();if(!r||r instanceof L||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const a=++this.pendingBackendInitId,o=r.then(i=>!(a<this.pendingBackendInitId||(this.registry[e]=i,this.pendingBackendInit=null,0))).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Dn(`Initialization of backend ${e} failed`),Dn(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}}catch(r){return Dn(`Initialization of backend ${e} failed`),Dn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,s)=>this.registryFactory[s].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let s=0;s<e.length;s++){const r=e[s],{success:a,asyncInit:o}=this.initializeBackend(r);if(o||a)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,s){const r=this.state.tensorInfo.get(s),a=r.backend,o=this.readSync(s),i=a.refCount(s);a.disposeData(s,!0),r.backend=e,e.move(s,o,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,s){let a,r=null;if(null==s){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");s=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof s)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(a),()=>(a=s(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,s,r){e();try{const a=r();return s(),a}catch(a){throw s(),a}}nextTensorId(){return n.nextTensorId++}nextVariableId(){return n.nextVariableId++}clone(e){const s=R.runKernel(ro,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[s],i=>({x:()=>R.runKernel(Ha,{x:i},{dtype:"float32"})}),[],{}),s}runKernel(e,s,r){if(null==Sh(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:s,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,s,r){const a=this.backend.numDataIds();let o=0;r.forEach(u=>{o+="complex64"===u.dtype?3:1});const l=a-s-o-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let s,r=[];const a=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;let l,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const c=Eh(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Eh(e)){const{kernelName:g,inputs:m,attrs:y}=e,x=Sh(g,this.backendName);S(null!=x,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{const b=this.backend.numDataIds();u=x.kernelFunc({inputs:m,attrs:y,backend:this.backend});const w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,b,w);const v=w.map(C=>null!=C.rank?C:this.makeTensorFromTensorInfo(C));if(a){const C=this.getTensorsForGradient(g,m,v);r=this.saveTensorsForBackwardMode(C)}return v}}else{const{forwardFunc:g}=e,m=y=>{!a||(r=y.map(x=>this.keep(this.clone(x))))};l=()=>{const y=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,m));const x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,x),x}}const{inputs:h,attrs:d}=e,p=Eh(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,h,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),s=f.outputs):s=l()}),a&&this.addTapeNode(c,h,s,p,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(g=>null!=h[g]?h[g].shape:null),outputShapes:s.map(g=>g.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?s:s[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,s,r){const a=dm(e);if(null!=a){const o=a.inputsToSave||[],i=a.outputsToSave||[];let l;a.saveAllInputs?(S(Array.isArray(s),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(s).map(c=>s[c])):l=o.map(c=>s[c]);const u=r.filter((c,h)=>i[h]);return l.concat(u)}return[]}makeTensor(e,s,r,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");a=a||this.backend;let o=e;"string"===(r=r||"float32")&&Jr(e[0])&&(o=e.map(u=>$s(u)));const i=a.write(o,s,r),l=new Ot(s,r,i,this.nextTensorId());if(this.trackTensor(l,a),"string"===r){const u=this.state.tensorInfo.get(i),c=Gf(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,s,r,a){return this.makeTensorFromTensorInfo({dataId:e,shape:s,dtype:r=r||"float32"},a)}makeTensorFromTensorInfo(e,s){const{dataId:r,shape:a,dtype:o}=e,i=new Ot(a,o,r,this.nextTensorId());return this.trackTensor(i,s),i}makeVariable(e,s=!0,r,a){r=r||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const o=new Wl(e,s,r,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,s){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*La(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:s||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Wl||this.track(e)}incRef(e,s){this.trackTensor(e,s),this.backend.incRef(e.dataId)}removeDataId(e,s){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===s&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const s=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=s.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const r=e.size*La(e.dtype);this.state.numBytes-=r}s.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,s.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){var s=this;return(0,T.Z)(function*(){s.state.profiling=!0;const r=s.state.numBytes,a=s.state.numTensors;s.state.activeProfile.kernels=[],s.state.activeProfile.result=yield e(),s.state.profiling=!1,s.state.activeProfile.peakBytes=Math.max(...s.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),s.state.activeProfile.newBytes=s.state.numBytes-r,s.state.activeProfile.newTensors=s.state.numTensors-a;for(const o of s.state.activeProfile.kernels)o.kernelTimeMs=yield o.kernelTimeMs,o.extraInfo=yield o.extraInfo;return s.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,s,r,a,o,i){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:s,outputs:r,saved:o},u=dm(e);null!=u&&(a=u.gradFunc),null!=a&&(l.gradient=c=>(c=c.map((h,d)=>{if(null==h){const p=r[d],f=tn(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return h}),a(c.length>1?c:c[0],o,i))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const s={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(s.name=e),this.state.scopeStack.push(s),this.state.activeScope=s}endScope(e){const s=Cm(e),r=new Set(s.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!r.has(i.id)&&i.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],s.forEach(o=>{!o.kept&&o.scopeId===a.id&&this.track(o)})}gradients(e,s,r,a=!1){if(S(s.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));S(o instanceof Ot,()=>"The result y returned by f() must be a tensor.");const i=function Fv(n,t,e){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){u.outputs.forEach(g=>s[g.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const a={};a[e.id]=!0;const o={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(a[u.outputs[h].id]){for(const d in c)a[c[d].id]=!0,o[u.id]=!0;break}}const i=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&o[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,i.push(h)}}return i}(this.state.activeTape,s,o);if(!a&&0===i.length&&s.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[o.id]=null==r?function Hv(n){const t=Oi(I(n),"float32");return R.makeTensor(t,n,"float32")}(o.shape):r,function Pv(n,t,e,s){for(let r=t.length-1;r>=0;r--){const a=t[r],o=[];if(a.outputs.forEach(l=>{const u=n[l.id];o.push(null!=u?u:null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);const u=e(()=>i[l]());if("float32"!==u.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=a.inputs[l];if(!we(u.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(null==n[c.id])n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}(l,i,c=>this.tidy(c),jv);const u=s.map(c=>l[c.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(c=>{for(const h of c.saved)h.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return S(Ai(e),()=>"The f passed in customGrad(f) must be a function."),(...s)=>{let r;S(s.every(l=>l instanceof Ot),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const a={};return s.forEach((l,u)=>{a[u]=l}),this.runKernelFunc({forwardFunc:(l,u)=>(r=e(...s,u),S(r.value instanceof Ot,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),S(Ai(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(l,u)=>{const c=r.gradFunc(l,u),h=Array.isArray(c)?c:[c];S(h.length===s.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),S(h.every(p=>p instanceof Ot),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return h.forEach((p,f)=>{d[f]=()=>p}),d},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,s){return this.state.tensorInfo.get(e).backend.readToGPU(e,s)}time(e){var s=this;return(0,T.Z)(function*(){const r=dn(),a=yield s.backend.time(e);return a.wallMs=dn()-r,a})()}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new km;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return n.nextTensorId=0,n.nextVariableId=0,n})();function Tm(){const n=Zf();if(null==n._tfengine){const t=new mv(n);n._tfengine=new Gv(t)}return function bv(n){Xf=n}(n._tfengine.ENV),function Mv(n){es=n}(()=>n._tfengine),n._tfengine}const R=Tm();function jv(n,t){return R.runKernel(ea,{a:n,b:t})}function _m(n){if(n||function qv(){return"undefined"!=typeof navigator&&null!=navigator}()){if(n||(n=navigator),"ReactNative"===n.product)return!0;const t=n.userAgent||n.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function $m(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const vn=z();function zo(n,t){let e=n;if(An(n))return"string"===t?[]:[n.length];if(Im(n))return[n.height,n.width*(n.channels||"RGBA").length];if(Sm(n))return[n.buffer.size/(null==t?4:La(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||An(e)&&"string"!==t;)s.push(e.length),e=e[0];return Array.isArray(n)&&z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Em(n,s,[]),s}function Em(n,t,e){if(e=e||[],!Array.isArray(n)&&!An(n))return void S(0===t.length,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);S(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),S(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)Em(n[r],s,e.concat(r))}function Dm(n,t,e,s){if("string_or_numeric"!==n){if(null==n)throw new Error("Expected dtype cannot be null.");if("numeric"!==n&&n!==t||"numeric"===n&&"string"===t)throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function N(n,t,e,s="numeric"){if(n instanceof Ot)return Dm(s,n.dtype,t,e),n;let r=xr(n);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Dm(s,r,t,e),null==n||!An(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${null==n?"null":n.constructor.name}'`);const a=zo(n,r);!An(n)&&!Array.isArray(n)&&(n=[n]);const i="string"!==r?Hs(n,r):js(n,[],!0);return R.makeTensor(i,a,r)}function Am(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((a,o)=>N(a,`${t}[${o}]`,e,s))}function O(n){const t=Object.keys(n);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e+="__op";const r=(...a)=>{R.startScope(e);try{const o=s(...a);return Fi(o)&&console.error("Cannot return a Promise inside of tidy."),R.endScope(o),o}catch(o){throw R.endScope(null),o}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}vn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),vn.registerFlag("IS_BROWSER",()=>$m()),vn.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),vn.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),vn.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),vn.registerFlag("PROD",()=>!1),vn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>vn.getBool("DEBUG")),vn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),vn.registerFlag("IS_TEST",()=>!1),vn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>vn.getBool("DEBUG")),vn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),vn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),vn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const Ir=O({complex_:function Xv(n,t){const e=N(n,"real","complex"),s=N(t,"imag","complex");return ee(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`),R.runKernel(Fc,{real:e,imag:s})}});function Bo(n,t,e,s){if(null==s)s=xr(n);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Sm(n)||Im(n)){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return R.backend.createTensorFromGPUData(n,t||e,s)}if(!An(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){hs(t);const r=I(t),a=I(e);S(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<e.length;++o){const i=e[o],l=o!==e.length-1||i!==I(t.slice(o));S(e[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!An(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n="string"!==s?Hs(n,s):js(n,[],!0),R.makeTensor(n,t,s)}function Wo(n,t,e){return Bo(n,t,zo(n,e),e)}const Ah={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function Rm(n,t){return Rh.apply(this,arguments)}function Rh(){return Rh=(0,T.Z)(function*(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<r.length;++o){const i=r[o],l=Array.isArray(n)?n[o].tensor:n[i];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);const u={name:i,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){const c=new Promise(function(){var h=(0,T.Z)(function*(d){const p=yield l.bytes(),f=p.reduce((y,x)=>y+x.length,0)+4*p.length,g=new Uint8Array(f);let m=0;for(let y=0;y<p.length;y++){const x=p[y],b=new Uint8Array(new Uint32Array([x.length]).buffer);g.set(b,m),m+=4,g.set(x,m),m+=x.length}d(g)});return function(d){return h.apply(this,arguments)}}());s.push(c)}else s.push(l.data());null!=t&&(u.group=t),e.push(u)}return{data:Zv(yield Promise.all(s)),specs:e}}),Rh.apply(this,arguments)}function Zv(n){if(null===n)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(a=>{if(t+=a.byteLength,e.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}const Oh="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Fm(n){return Oh?Buffer.byteLength(n):new Blob([n]).size}function Fh(n){if(1===n.length)return n[0];let t=0;n.forEach(r=>{t+=r.byteLength});const e=new Uint8Array(t);let s=0;return n.forEach(r=>{e.set(new Uint8Array(r),s),s+=r.byteLength}),e.buffer}function Lm(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return null!=n.signature&&(e.signature=n.signature),null!=n.userDefinedMetadata&&(e.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(e.modelInitializer=n.modelInitializer),null!=n.initializerSignature&&(e.initializerSignature=n.initializerSignature),null!=n.trainingConfig&&(e.trainingConfig=n.trainingConfig),e}function Jv(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(null!=n.trainingConfig&&(s.trainingConfig=n.trainingConfig),null!=n.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return null!=n.signature&&(s.signature=n.signature),null!=n.userDefinedMetadata&&(s.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(s.modelInitializer=n.modelInitializer),null!=n.initializerSignature&&(s.initializerSignature=n.initializerSignature),s}function Ph(){return(Ph=(0,T.Z)(function*(n,t){let e,s;return null!=n.weightsManifest&&([e,s]=yield t(n.weightsManifest)),Jv(n,e,s)})).apply(this,arguments)}function Kl(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==n.modelTopology?0:Fm(JSON.stringify(n.modelTopology)),weightSpecsBytes:null==n.weightSpecs?0:Fm(JSON.stringify(n.weightSpecs)),weightDataBytes:null==n.weightData?0:n.weightData.byteLength}}function rI(){const n=function tI(){const n=e=>{let s=e<<13,r=0;for(;0==(8388608&s);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function nI(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}(),e=function sI(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){const i=s[o];a[o]=n[e[i>>10]+(1023&i)]+t[i>>10]}return new Float32Array(r)}}class Nt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Nt.instance&&(Nt.instance=new Nt),Nt.instance}static registerSaveRouter(t){Nt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Nt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Nt.getHandlers(t,"save")}static getLoadHandlers(t,e){return Nt.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return("load"===e?Nt.getInstance().loadRouters:Nt.getInstance().saveRouters).forEach(o=>{const i=o(t,s);null!==i&&r.push(i)}),r}}const oI=(n,t)=>Nt.getLoadHandlers(n,t),Xl="tensorflowjs",Sr="models_store",qs="model_info_store";function Mh(){if(!z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n="undefined"==typeof window?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function zh(n){const t=n.result;t.createObjectStore(Sr,{keyPath:"modelPath"}),t.createObjectStore(qs,{keyPath:"modelPath"})}let ra=(()=>{class n{constructor(e){if(this.indexedDB=Mh(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){var s=this;return(0,T.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return s.databaseAction(s.modelPath,e)})()}load(){var e=this;return(0,T.Z)(function*(){return e.databaseAction(e.modelPath)})()}databaseAction(e,s){return new Promise((r,a)=>{const o=this.indexedDB.open(Xl,1);o.onupgradeneeded=()=>zh(o),o.onsuccess=()=>{const i=o.result;if(null==s){const l=i.transaction(Sr,"readonly"),c=l.objectStore(Sr).get(this.modelPath);c.onsuccess=()=>{if(null==c.result)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=h=>(i.close(),a(c.error)),l.oncomplete=()=>i.close()}else{const l=Kl(s),u=i.transaction(qs,"readwrite");let h,d,c=u.objectStore(qs);try{h=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(p){return a(p)}h.onsuccess=()=>{d=i.transaction(Sr,"readwrite");const p=d.objectStore(Sr);let f;try{f=p.put({modelPath:this.modelPath,modelArtifacts:s,modelArtifactsInfo:l})}catch(g){return a(g)}f.onsuccess=()=>r({modelArtifactsInfo:l}),f.onerror=g=>{c=u.objectStore(qs);const m=c.delete(this.modelPath);m.onsuccess=()=>(i.close(),a(f.error)),m.onerror=y=>(i.close(),a(f.error))}},h.onerror=p=>(i.close(),a(h.error)),u.oncomplete=()=>{null==d?i.close():d.oncomplete=()=>i.close()}}},o.onerror=i=>a(o.error)})}}return n.URL_SCHEME="indexeddb://",n})();const Mm=n=>z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ra.URL_SCHEME)?function iI(n){return new ra(n)}(n.slice(ra.URL_SCHEME.length)):null;Nt.registerSaveRouter(Mm),Nt.registerLoadRouter(Mm);class uI{constructor(){this.indexedDB=Mh()}listModels(){var t=this;return(0,T.Z)(function*(){return new Promise((e,s)=>{const r=t.indexedDB.open(Xl,1);r.onupgradeneeded=()=>zh(r),r.onsuccess=()=>{const a=r.result,o=a.transaction(qs,"readonly"),l=o.objectStore(qs).getAll();l.onsuccess=()=>{const u={};for(const c of l.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},l.onerror=u=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()},r.onerror=a=>s(r.error)})})()}removeModel(t){var e=this;return(0,T.Z)(function*(){return t=function lI(n){return n.startsWith(ra.URL_SCHEME)?n.slice(ra.URL_SCHEME.length):n}(t),new Promise((s,r)=>{const a=e.indexedDB.open(Xl,1);a.onupgradeneeded=()=>zh(a),a.onsuccess=()=>{const o=a.result,i=o.transaction(qs,"readwrite"),l=i.objectStore(qs),u=l.get(t);let c;u.onsuccess=()=>{if(null==u.result)return o.close(),r(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const h=l.delete(t),d=()=>{c=o.transaction(Sr,"readwrite");const f=c.objectStore(Sr).delete(t);f.onsuccess=()=>s(u.result.modelArtifactsInfo),f.onerror=g=>r(u.error)};h.onsuccess=d,h.onerror=p=>(d(),o.close(),r(u.error))}},u.onerror=h=>(o.close(),r(u.error)),i.oncomplete=()=>{null==c?o.close():c.oncomplete=()=>o.close()}},a.onerror=o=>r(a.error)})})()}}const ds="/",Cr="tensorflowjs_models",zm="info",cI="model_topology",hI="weight_specs",dI="weight_data",pI="model_metadata";function Bm(n){return{info:[Cr,n,zm].join(ds),topology:[Cr,n,cI].join(ds),weightSpecs:[Cr,n,hI].join(ds),weightData:[Cr,n,dI].join(ds),modelMetadata:[Cr,n,pI].join(ds)}}function Wm(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function Um(n){const t=n.split(ds);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(ds)}let aa=(()=>{class n{constructor(e){if(!z().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Bm(this.modelPath)}save(e){var s=this;return(0,T.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const r=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),o=Kl(e);try{return s.LS.setItem(s.keys.info,JSON.stringify(o)),s.LS.setItem(s.keys.topology,r),s.LS.setItem(s.keys.weightSpecs,a),s.LS.setItem(s.keys.weightData,function Yv(n){if(Oh)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}(e.weightData)),s.LS.setItem(s.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:o}}catch(i){throw Wm(s.keys),new Error(`Failed to save model '${s.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}})()}load(){var e=this;return(0,T.Z)(function*(){const s=JSON.parse(e.LS.getItem(e.keys.info));if(null==s)throw new Error(`In local storage, there is no model with name '${e.modelPath}'`);if("JSON"!==s.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const r={},a=JSON.parse(e.LS.getItem(e.keys.topology));if(null==a)throw new Error(`In local storage, the topology of model '${e.modelPath}' is missing.`);r.modelTopology=a;const o=JSON.parse(e.LS.getItem(e.keys.weightSpecs));if(null==o)throw new Error(`In local storage, the weight specs of model '${e.modelPath}' are missing.`);r.weightSpecs=o;const i=e.LS.getItem(e.keys.modelMetadata);if(null!=i){const u=JSON.parse(i);r.format=u.format,r.generatedBy=u.generatedBy,r.convertedBy=u.convertedBy,null!=u.signature&&(r.signature=u.signature),null!=u.userDefinedMetadata&&(r.userDefinedMetadata=u.userDefinedMetadata),null!=u.modelInitializer&&(r.modelInitializer=u.modelInitializer),null!=u.initializerSignature&&(r.initializerSignature=u.initializerSignature),null!=u.trainingConfig&&(r.trainingConfig=u.trainingConfig)}const l=e.LS.getItem(e.keys.weightData);if(null==l)throw new Error(`In local storage, the binary weight values of model '${e.modelPath}' are missing.`);return r.weightData=function Qv(n){if(Oh){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}(l),r})()}}return n.URL_SCHEME="localstorage://",n})();const Gm=n=>z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(aa.URL_SCHEME)?function mI(n){return new aa(n)}(n.slice(aa.URL_SCHEME.length)):null;Nt.registerSaveRouter(Gm),Nt.registerLoadRouter(Gm);class gI{constructor(){S(z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),S("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var t=this;return(0,T.Z)(function*(){const e={},s=Cr+ds,r=ds+zm;for(let a=0;a<t.LS.length;++a){const o=t.LS.key(a);o.startsWith(s)&&o.endsWith(r)&&(e[Um(o)]=JSON.parse(t.LS.getItem(o)))}return e})()}removeModel(t){var e=this;return(0,T.Z)(function*(){const s=Bm(t=function fI(n){return n.startsWith(aa.URL_SCHEME)?n.slice(aa.URL_SCHEME.length):n}(t));if(null==e.LS.getItem(s.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(e.LS.getItem(s.info));return Wm(s),r})()}}class pn{constructor(){this.managers={}}static getInstance(){return null==pn.instance&&(pn.instance=new pn),pn.instance}static registerManager(t,e){S(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),S(t.length>0,()=>"scheme must not be an empty string.");const s=pn.getInstance();S(null==s.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=pn.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(pn.getInstance().managers)}}class yI{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){"undefined"!=typeof window&&z().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{s.source===window&&s.data.name===this.messageName&&(s.stopPropagation(),(0,this.functionRefs[s.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(t,e)}isTypedArray(t){return pm(t)}}if(z().get("IS_BROWSER")){z().setPlatform("browser",new yI);try{pn.registerManager(aa.URL_SCHEME,new gI)}catch(n){}try{pn.registerManager(ra.URL_SCHEME,new uI)}catch(n){}}let ia;function je(n,t="float32",e){return t=t||"float32",hs(n),new nn(n,t,e)}z().get("IS_NODE")&&!z().get("IS_BROWSER")&&z().setPlatform("node",new class bI{constructor(){this.util=Q(8628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=z().global.fetch?z().global.fetch(t,e):(null==ia&&(ia=Q(5410)),ia(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}});const me=O({cast_:function wI(n,t){const e=N(n,"x","cast");if(!Uf(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==e.dtype||"string"!==t&&"string"===e.dtype)throw new Error("Only strings can be casted to strings");return R.runKernel(Ha,{x:e},{dtype:t})}}),Nr=O({clone_:function vI(n){const e={x:N(n,"x","clone","string_or_numeric")};return R.runKernel(ro,e)}});function ps(){return R}function jh(){return R.memory()}function V(n,t){return R.tidy(n,t)}function Ge(n){Cm(n).forEach(e=>e.dispose())}function fs(n){return R.keep(n)}function jm(n,t,e=1){return R.registerBackend(n,t,e)}Tm(),function zv(n){sa=n}({buffer:je,cast:me,clone:Nr,print:function II(n,t=!1){console.log(n.toString(t))}}),function Bv(n){vm=n}(function SI(n){z().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")});const oe=O({add_:function NI(n,t){let e=N(n,"a","add"),s=N(t,"b","add");return[e,s]=At(e,s),R.runKernel(ea,{a:e,b:s})}}),qm=O({floorDiv_:function kI(n,t){let e=N(n,"a","floorDiv"),s=N(t,"b","floorDiv");return[e,s]=At(e,s),R.runKernel(no,{a:e,b:s})}}),_e=O({div_:function TI(n,t){let e=N(n,"a","div"),s=N(t,"b","div");return[e,s]=At(e,s),"int32"===e.dtype&&"int32"===s.dtype?qm(e,s):R.runKernel(Za,{a:e,b:s},{})}}),D=O({mul_:function _I(n,t){let e=N(n,"a","mul"),s=N(t,"b","mul");return[e,s]=At(e,s),R.runKernel(mo,{a:e,b:s})}}),fn=O({sqrt_:function $I(n){const e={x:N(n,"x","sqrt","float32")};return R.runKernel(_o,e)}}),pt=O({square_:function EI(n){const t=N(n,"x","square");return R.runKernel("Square",{x:t},{})}}),Qe=O({zerosLike_:function DI(n){const e={x:N(n,"x","zerosLike")};return R.runKernel(Pl,e)}});function Ds(n){return R.customGrad(n)}function Me(n,t){if((An(n)&&"string"!==t||Array.isArray(n))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&An(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Bo(n,[],[],t)}class kr{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Rn{constructor(){this.classNameMap={}}static getMap(){return null==Rn.instance&&(Rn.instance=new Rn),Rn.instance}static register(t){Rn.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function te(n){S(null!=n.className,()=>"Class being registered does not have the static className property defined."),S("string"==typeof n.className,()=>"className is required to be a string, but got type "+typeof n.className),S(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Rn.register(n)}class Ks extends kr{minimize(t,e=!1,s){const{value:r,grads:a}=this.computeGradients(t,s);if(null!=s){const o=s.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(o)}else this.applyGradients(a);return Ge(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function AI(n,t){S(Ai(n),()=>"The f passed in variableGrads(f) must be a function"),S(null==t||Array.isArray(t)&&t.every(u=>u instanceof Wl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=null!=t;if(!e){t=[];for(const u in R.registeredVariables)t.push(R.registeredVariables[u])}const s=e?t.filter(u=>!u.trainable):null,r=t.length;S((t=t.filter(u=>u.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const{value:o,grads:i}=R.gradients(n,t,null,!0);S(i.some(u=>null!=u),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),S(0===o.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((u,c)=>{null!=i[c]&&(l[u.name]=i[c])}),null!=s&&s.forEach(u=>l[u.name]=null),{value:o,grads:l}}(t,e)}dispose(){null!=this.iterations_&&Ge(this.iterations_)}saveIterations(){var t=this;return(0,T.Z)(function*(){return null==t.iterations_&&(t.iterations_=0),{name:"iter",tensor:Me(t.iterations_,"int32")}})()}getWeights(){return(0,T.Z)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(t){var e=this;return(0,T.Z)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${e.getClassName()}`)})()}extractIterations(t){var e=this;return(0,T.Z)(function*(){return e.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})()}}Object.defineProperty(Ks,Symbol.hasInstance,{value:n=>null!=n.minimize&&null!=n.computeGradients&&null!=n.applyGradients});class Km extends Ks{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==s&&(this.epsilon=R.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=R.registeredVariables[s];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:V(()=>Qe(a).variable(!1))}),null==this.accumulatedUpdates[r]&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:V(()=>Qe(a).variable(!1))});const i=Array.isArray(t)?t[r].tensor:t[s];if(null==i)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;V(()=>{const c=oe(D(l,this.rho),D(pt(i),1-this.rho)),h=D(_e(fn(oe(u,this.epsilon)),fn(oe(l,this.epsilon))),i),d=oe(D(u,this.rho),D(pt(h),1-this.rho));l.assign(c),u.assign(d);const p=oe(D(h,-this.learningRate),a);a.assign(p)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ge(this.accumulatedGrads.map(t=>t.variable)),Ge(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){var t=this;return(0,T.Z)(function*(){const e=[...t.accumulatedGrads,...t.accumulatedUpdates];return[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){const s=(t=yield e.extractIterations(t)).length/2;e.accumulatedGrads=t.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),e.accumulatedUpdates=t.slice(s,2*s).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function Uo(n,t,e){return hs(n),e=e||xr(t),R.runKernel(Xc,{},{shape:n,value:t,dtype:e})}class Xm extends Ks{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=R.registeredVariables[s];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:V(()=>Uo(a.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[r].tensor:t[s];if(null==o)return;const i=this.accumulatedGrads[r].variable;V(()=>{const l=oe(i,pt(o));i.assign(l);const u=oe(D(_e(o,fn(oe(l,R.backend.epsilon()))),-this.learningRate),a);a.assign(u)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ge(this.accumulatedGrads.map(t=>t.variable))}getWeights(){var t=this;return(0,T.Z)(function*(){return[yield t.saveIterations()].concat(t.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){t=yield e.extractIterations(t),e.accumulatedGrads=t.map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}const la=O({pow_:function RI(n,t){let e=N(n,"base","pow"),s=N(t,"exp","pow");return[e,s]=At(e,s),R.runKernel(go,{a:e,b:s})}}),Ie=O({sub_:function OI(n,t){let e=N(n,"a","sub"),s=N(t,"b","sub");return[e,s]=At(e,s),R.runKernel(Eo,{a:e,b:s})}});class Zm extends Ks{static get className(){return"Adam"}constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=Me(e).variable(),this.accBeta2=Me(s).variable()}),null==r&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);V(()=>{const s=Ie(1,this.accBeta1),r=Ie(1,this.accBeta2);e.forEach((a,o)=>{const i=R.registeredVariables[a];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:`${a}/m`,variable:V(()=>Qe(i).variable(!1))}),null==this.accumulatedSecondMoment[o]&&(this.accumulatedSecondMoment[o]={originalName:`${a}/v`,variable:V(()=>Qe(i).variable(!1))});const u=Array.isArray(t)?t[o].tensor:t[a];if(null==u)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=oe(D(c,this.beta1),D(u,1-this.beta1)),p=oe(D(h,this.beta2),D(pt(u),1-this.beta2)),f=_e(d,s),g=_e(p,r);c.assign(d),h.assign(p);const m=oe(D(_e(f,oe(fn(g),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(D(this.accBeta1,this.beta1)),this.accBeta2.assign(D(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ge(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Ge(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){var t=this;return(0,T.Z)(function*(){const e=[...t.accumulatedFirstMoment,...t.accumulatedSecondMoment];return[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){t=yield e.extractIterations(t),V(()=>{e.accBeta1.assign(la(e.beta1,e.iterations_+1)),e.accBeta2.assign(la(e.beta2,e.iterations_+1))});const s=t.length/2;e.accumulatedFirstMoment=t.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),e.accumulatedSecondMoment=t.slice(s,2*s).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}const Xt=O({abs_:function FI(n){const t=N(n,"x","abs");return R.runKernel("complex64"===t.dtype?Ui:Pi,{x:t})}});function ua(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const a=e-1-r,o=n[a]||1;(t[t.length-1-r]||1)>1&&1===o&&s.unshift(a)}return s}function Bt(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],a=t.length-s-1,o=t[a];(null==r||1===r&&o>1)&&e.unshift(a)}return e}function ze(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let r=0;r<e;r++){let a=n[n.length-r-1];null==a&&(a=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===a)s[e-r-1]=o;else if(1===o)s[e-r-1]=a;else{if(a!==o)throw Error(`Operands could not be broadcast together with shapes ${n} and ${t}.`);s[e-r-1]=a}}return s}const Xs=O({maximum_:function PI(n,t){let e=N(n,"a","maximum"),s=N(t,"b","maximum");return[e,s]=At(e,s),"bool"===e.dtype&&(e=me(e,"int32"),s=me(s,"int32")),ze(e.shape,s.shape),R.runKernel(ho,{a:e,b:s})}});class Ym extends Ks{static get className(){return"Adamax"}constructor(t,e,s,r=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=Me(0).variable(),this.accBeta1=Me(e).variable()}),null==r&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);V(()=>{const s=Ie(1,this.accBeta1),r=_e(-this.learningRate,oe(D(this.iteration,this.decay),1));e.forEach((a,o)=>{const i=R.registeredVariables[a];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:`${a}/m`,variable:Qe(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[o]&&(this.accumulatedWeightedInfNorm[o]={originalName:`${a}/v`,variable:Qe(i).variable(!1)});const u=Array.isArray(t)?t[o].tensor:t[a];if(null==u)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=oe(D(c,this.beta1),D(u,1-this.beta1)),p=D(h,this.beta2),f=Xt(u),g=Xs(p,f);c.assign(d),h.assign(g);const m=oe(D(_e(r,s),_e(d,oe(g,this.epsilon))),i);i.assign(m)}),this.iteration.assign(oe(this.iteration,1)),this.accBeta1.assign(D(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ge(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Ge(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return(0,T.Z)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(t){return(0,T.Z)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}class qh extends Ks{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=Array.isArray(t)?t[r].tensor:t[s];if(null==a)return;const o=R.registeredVariables[s];V(()=>{const i=oe(D(this.c,a),o);o.assign(i)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=fs(Me(-t))}dispose(){this.c.dispose()}getWeights(){var t=this;return(0,T.Z)(function*(){return[yield t.saveIterations()]})()}setWeights(t){var e=this;return(0,T.Z)(function*(){if(0!==(t=yield e.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}class Qm extends qh{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Me(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=R.registeredVariables[s];null==this.accumulations[r]&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:V(()=>Qe(a).variable(!1))});const o=this.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[s];null!=i&&V(()=>{let l;const u=oe(D(this.m,o),i);l=oe(D(this.c,this.useNesterov?oe(i,D(u,this.m)):u),a),o.assign(u),a.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ge(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){var t=this;return(0,T.Z)(function*(){return[yield t.saveIterations()].concat(t.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){t=yield e.extractIterations(t),e.accumulations=t.map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}class Jm extends Ks{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,r=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=R.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const a=R.registeredVariables[s],o=!1;null==this.accumulatedMeanSquares[r]&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:V(()=>Qe(a).variable(o))}),null==this.accumulatedMoments[r]&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:V(()=>Qe(a).variable(o))}),null==this.accumulatedMeanGrads[r]&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:V(()=>Qe(a).variable(o))});const i=Array.isArray(t)?t[r].tensor:t[s];if(null==i)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;V(()=>{const c=oe(D(l,this.decay),D(pt(i),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=oe(D(h,this.decay),D(i,1-this.decay)),p=_e(D(i,this.learningRate),fn(Ie(c,oe(pt(d),this.epsilon)))),f=oe(D(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const g=Ie(a,f);a.assign(g)}else{const h=oe(D(l,this.decay),D(pt(i),1-this.decay)),d=oe(D(u,this.momentum),_e(D(i,this.learningRate),fn(oe(h,this.epsilon))));l.assign(h),u.assign(d);const p=Ie(a,d);a.assign(p)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ge(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Ge(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Ge(this.accumulatedMoments.map(t=>t.variable))}getWeights(){var t=this;return(0,T.Z)(function*(){const e=[...t.accumulatedMeanSquares,...t.accumulatedMoments];return t.centered&&e.push(...t.accumulatedMeanGrads),[yield t.saveIterations()].concat(e.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(t){var e=this;return(0,T.Z)(function*(){t=yield e.extractIterations(t);const s=e.centered?t.length/3:t.length/2,r=!1;e.accumulatedMeanSquares=t.slice(0,s).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})),e.accumulatedMoments=t.slice(s,2*s).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})),e.centered&&(e.accumulatedMeanGrads=t.slice(2*s,3*s).map(a=>({originalName:a.name,variable:a.tensor.variable(r)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}const LI=[Km,Xm,Zm,Ym,Qm,Jm,qh];function eg(n){return new Promise(t=>setTimeout(t)).then(n)}let Kh=(()=>{class n{constructor(e){if(!z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(n.URL_SCHEME)&&(e=e.slice(n.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}save(e){var s=this;return(0,T.Z)(function*(){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const r=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const o=Lm(e,[{paths:["./"+s.weightDataFileName],weights:e.weightSpecs}]),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),l=null==s.modelJsonAnchor?document.createElement("a"):s.modelJsonAnchor;if(l.download=s.modelJsonFileName,l.href=i,yield eg(()=>l.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const u=null==s.weightDataAnchor?document.createElement("a"):s.weightDataAnchor;u.download=s.weightDataFileName,u.href=r,yield eg(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Kl(e)}}})()}}return n.URL_SCHEME="downloads://",n})();function tg(n,t,e,s){(function o(l){S(null!=l&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")})(n),function i(l,u){S(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),S(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),S(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}(e=null==e?0:e,s=null==s?1:s);let r=0;return Promise.all(n.map(l=>(l.then(u=>{const c=e+ ++r/n.length*(s-e);return t(c),u}),l)))}function ng(n,t){return Xh.apply(this,arguments)}function Xh(){return(Xh=(0,T.Z)(function*(n,t){null==t&&(t={});const e=null==t.fetchFunc?z().platform.fetch:t.fetchFunc,s=n.map(h=>e(h,t.requestInit,{isBinary:!0})),i=(null==t.onProgress?yield Promise.all(s):yield tg(s,t.onProgress,0,.5)).map(h=>h.arrayBuffer());return null==t.onProgress?yield Promise.all(i):yield tg(i,t.onProgress,.5,1)})).apply(this,arguments)}Nt.registerSaveRouter(n=>z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Kh.URL_SCHEME)?function GI(n="model"){return new Kh(n)}(n.slice(Kh.URL_SCHEME.length)):null);let sg=(()=>{class n{constructor(e,s){if(this.DEFAULT_METHOD="POST",null==s&&(s={}),this.weightPathPrefix=s.weightPathPrefix,this.onProgress=s.onProgress,this.weightUrlConverter=s.weightUrlConverter,null!=s.fetchFunc?(S("function"==typeof s.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=s.fetchFunc):this.fetch=z().platform.fetch,S(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&S(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=s.requestInit&&null!=s.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=s.requestInit||{}}save(e){var s=this;return(0,T.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const r=Object.assign({method:s.DEFAULT_METHOD},s.requestInit);r.body=new FormData;const o=Lm(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);r.body.append("model.json",new Blob([JSON.stringify(o)],{type:"application/json"}),"model.json"),null!=e.weightData&&r.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const i=yield s.fetch(s.path,r);if(i.ok)return{modelArtifactsInfo:Kl(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)})()}load(){var e=this;return(0,T.Z)(function*(){const s=yield e.fetch(e.path,e.requestInit);if(!s.ok)throw new Error(`Request to ${e.path} failed with status code ${s.status}. Please verify this URL points to the model JSON of the model to load.`);let r;try{r=yield s.json()}catch(i){let l=`Failed to parse model JSON of response from ${e.path}.`;throw e.path.endsWith(".pb")?l+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":l+=" Please make sure the server is serving valid JSON for this request.",new Error(l)}if(null==r.modelTopology&&null==r.weightsManifest)throw new Error(`The JSON from HTTP path ${e.path} contains neither model topology or manifest for weights.`);return function Vm(n,t){return Ph.apply(this,arguments)}(r,i=>e.loadWeights(i))})()}loadWeights(e){var s=this;return(0,T.Z)(function*(){const r=Array.isArray(s.path)?s.path[1]:s.path,[a,o]=function ZI(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?");return[n.substring(0,t)+"/",e>t?n.substring(e):""]}(r),i=s.weightPathPrefix||a,l=function eI(n){const t=[];for(const e of n)t.push(...e.weights);return t}(e),u=[],c=[];for(const d of e)for(const p of d.paths)null!=s.weightUrlConverter?c.push(s.weightUrlConverter(p)):u.push(i+p+o);return s.weightUrlConverter&&u.push(...yield Promise.all(c)),[l,Fh(yield ng(u,{requestInit:s.requestInit,fetchFunc:s.fetch,onProgress:s.onProgress}))]})()}}return n.URL_SCHEME_REGEX=/^https?:\/\//,n})();function rg(n){return null!=n.match(sg.URL_SCHEME_REGEX)}const ag=(n,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let e=!0;if(e=Array.isArray(n)?n.every(s=>rg(s)):rg(n),e)return og(n,t)}return null};function og(n,t){return new sg(n,t)}function YI(n,t){return og(n,t)}let Tr;function lg(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==n)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(n.data instanceof Uint8Array)e=!0;else if("undefined"!=typeof ImageData&&n instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&n instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&n instanceof HTMLImageElement)a=!0;else if(null!=n.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&n instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);i=!0}if(null!=Sh(vh,R.backendName))return R.runKernel(vh,{pixels:n},{numChannels:t});const[u,c]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h,d;if(o)h=n.getContext("2d").getImageData(0,0,u,c).data;else if(s||e)h=n.data;else if(a||r||i){if(null==Tr)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Tr=new OffscreenCanvas(1,1).getContext("2d")}else Tr=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Tr.canvas.width=u,Tr.canvas.height=c,Tr.drawImage(n,0,0,u,c),h=Tr.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(h);else{const f=u*c;d=new Int32Array(f*t);for(let g=0;g<f;g++)for(let m=0;m<t;++m)d[g*t+m]=h[4*g+m]}return function eS(n,t,e){if(J(n),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=zo(n,e);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Bo(n,t,s,e)}(d,[c,u,t],"int32")}function rS(n){return function nS(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}()&&!(n instanceof ImageBitmap)&&function sS(n){return null!=n&&0!==n.width&&0!==n.height}(n)&&!function tS(n){return null!=n&&n.data instanceof Uint8Array}(n)}function aS(n){return Qh.apply(this,arguments)}function Qh(){return(Qh=(0,T.Z)(function*(n,t=3){let e=null;if(z().getBool("WRAP_TO_IMAGEBITMAP")&&rS(n)){let s;try{s=yield createImageBitmap(n,{premultiplyAlpha:"none"})}catch(r){s=null}e=null!=s&&s.width===n.width&&s.height===n.height?s:n}else e=n;return lg(e,t)})).apply(this,arguments)}function oS(n,t){return Jh.apply(this,arguments)}function Jh(){return(Jh=(0,T.Z)(function*(n,t){let e=N(n,"img","toPixels");if(!(n instanceof Ot)){const u=e;e=me(u,"int32"),u.dispose()}if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const[s,r]=e.shape.slice(0,2),a=2===e.rank?1:e.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);const o=yield e.data(),i="float32"===e.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const c=[0,0,0,255];for(let d=0;d<a;d++){const p=o[u*a+d];if("float32"===e.dtype){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if("int32"===e.dtype&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);1===a?(c[0]=p*i,c[1]=p*i,c[2]=p*i):c[d]=p*i}const h=4*u;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(null!=t){t.width=r,t.height=s;const u=t.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return e!==n&&e.dispose(),l})).apply(this,arguments)}Nt.registerSaveRouter(ag),Nt.registerLoadRouter(ag);const iS=O({fromPixels_:lg});function td(n,t,e){const s=n.shape.length;S(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),S(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)S(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function uS(n){const t=[];let e=0;for(;n>0;)1&n&&t.push(e),n/=2,e++;return t}function nd(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function ug(n,t,e,s){const r=[...n];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<e;a++)0===a?r[t]=1:(r.splice(t,0,1),r.pop());return r}function cg(n,t,e){return e<=n?e:e-(t-1)}function hg(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function cS(n,t,e,s,r,a,o,i,l){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&e>0){const p=t[0],f=e+1;c=dg(o,p,f,s,n),h=pg(i,p,f,r,n),d=ug(a,p,f,n)}else for(let p=0;p<u;p++)c[p]=mg(o,s,a,n,p,l),h[p]=gg(i,r,a,n,p,l),d[p]=fg(a,p,l);return{begin:c,end:h,strides:d}}function dg(n,t,e,s,r){const a=[...r],o=hg(e,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{const l=cg(t,e,i);let u=s[l];n&1<<l&&(u=0),a[i]=u}return a}function pg(n,t,e,s,r){const a=[...r],o=hg(e,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{const l=cg(t,e,i);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),a[i]=u}for(let i=0;i<a.length;i++){const l=r[i];a[i]<0&&(a[i]+=l),a[i]=Be(0,a[i],r[i])}return a}function fg(n,t,e){let s=n[t];return(e&1<<t||null==s)&&(s=1),s}function mg(n,t,e,s,r,a){let o=t[r];(n&1<<r||a&1<<r||null==o)&&(o=(e[r]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),o=Be(0,o,l-1),o}function gg(n,t,e,s,r,a){let o=t[r];const i=e[r]||1;(n&1<<r||a&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),o=i>0?Be(0,o,l):Be(-1,o,l-1),o}function sd(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function rd(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Ql(n,t,e){let s;const r=n.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach(o=>{S(-1!==o,()=>"slice() does not support negative begin indexing.")}),a=null==e?new Array(r).fill(-1):"number"==typeof e?[e,...new Array(r-1).fill(-1)]:e.length<r?e.concat(new Array(r-e.length).fill(-1)):e,a=a.map((o,i)=>o>=0?o:(S(-1===o,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,a]}function ad(n,t,e,s,r,a,o,i,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&0!=(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function hS(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=null!=n.begin,t.endValid=null!=n.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<r;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=n.begin&&(t.begin[e]=n.begin[s]),null!=n.end&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}(h,d);let p=!0,f=!0,g=!0;const m=[],y=[];for(let b=0;b<n.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<b),v=n[b];if(-1===v){m.push(w?1:-1);continue}const C=[d.beginMask&1<<b,d.endMask&1<<b],k=[d.strides[b]>0?0:-1,d.strides[b]>0?v:v-1];if(w&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[b];const _=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(w){const B=d.begin[b]<0?v+d.begin[b]:d.begin[b];if(d.begin[b]=B,d.end[b]=d.begin[b]+1,B<0||B>=v)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=yg(d.begin[b],0,d.strides[b],v,C,k),d.end[b]=yg(d.end[b],1,d.strides[b],v,C,k);const P=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===v;p=p&&P,f=f&&(0===b&&1===d.strides[b]||P)}else p=p&&1===d.strides[b]&&_,f=f&&(0===b&&1===d.strides[b]||_);let $,E=!1;if(d.beginValid&&d.endValid?($=d.end[b]-d.begin[b],E=!0):w?($=1,E=!0):_&&v>=0&&($=d.strides[b]<0?-v:v,E=!0),E){let P;P=0===$||$<0!=d.strides[b]<0?0:Math.trunc($/d.strides[b])+($%d.strides[b]!=0?1:0),m.push(P)}else m.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const w=d.finalShapeGatherIndices[b];w>=0?y.push(m[w]):-2===w&&y.push(1)}return{finalShapeSparse:y.filter((b,w)=>-2!==d.finalShapeGatherIndices[w]),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function yg(n,t,e,s,r,a){if(r[t])return e>0?a[t]:a[t+1&1];{const o=n<0?s+n:n;return o<a[0]?a[0]:o>a[1]?a[1]:o}}const xg=O({all_:function pS(n,t=null,e=!1){const r={x:N(n,"x","all","bool")};return R.runKernel("All",r,{axis:t,keepDims:e})}}),od=O({any_:function fS(n,t=null,e=!1){const r={x:N(n,"x","any","bool")};return R.runKernel("Any",r,{axis:t,keepDims:e})}}),Go=O({argMax_:function mS(n,t=0){const s={x:N(n,"x","argMax")};return R.runKernel(Li,s,{axis:t})}});function Ho(n,t,e,s,r="NHWC",a){return Zt(n,[...t,n[3]],e,a,s,null,null,Rs(r))}function Un(n,t,e,s,r,a,o="channelsLast"){const[i,l]=jo(t);let u;if("channelsLast"===o)u=[i,l,n[3],n[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);u=[i,l,n[1],n[1]]}return Zt(n,u,e,s,r,a,!1,o)}function As(n,t,e,s,r,a,o="NDHWC"){const[i,l,u]=ld(t);let c,h;if("NDHWC"===o)h="channelsLast",c=[i,l,u,n[4],n[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[i,l,u,n[1],n[1]]}return Zs(n,c,e,s,r,!1,h,a)}function Zt(n,t,e,s,r,a,o=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h]=n;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,c]=n}const[d,p,,f]=t,[g,m]=jo(e),[y,x]=jo(s),b=ca(d,y),w=ca(p,x),{padInfo:v,outHeight:C,outWidth:k}=function xS(n,t,e,s,r,a,o,i,l){let u,c,h;if("number"==typeof n){u={top:n,bottom:n,left:n,right:n,type:0===n?"VALID":"NUMBER"};const p=function gS(n,t,e,s,r){null==s&&(s=id(n,t,e));const o=n[1];return[qo((n[0]-t+2*s)/e+1,r),qo((o-t+2*s)/e+1,r)]}([t,e],a,s,n,i);c=p[0],h=p[1]}else if("same"===n){c=Math.ceil(t/s),h=Math.ceil(e/r);const d=Math.max(0,(c-1)*s+a-t),p=Math.max(0,(h-1)*r+o-e),f=Math.floor(d/2),g=d-f,m=Math.floor(p/2);u={top:f,bottom:g,left:m,right:p-m,type:"SAME"}}else if("valid"===n)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((e-o+1)/r);else{if("object"!=typeof n)throw Error(`Unknown padding parameter: ${n}`);{const d="channelsLast"===l?n[1][0]:n[2][0],p="channelsLast"===l?n[1][1]:n[2][1],f="channelsLast"===l?n[2][0]:n[3][0],g="channelsLast"===l?n[2][1]:n[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=qo((t-a+d+p)/s+1,i),h=qo((e-o+f+g)/r+1,i)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,g,m,b,w,a,i),_=o?f*h:f;let $;return"channelsFirst"===i?$=[l,_,C,k]:"channelsLast"===i&&($=[l,C,k,_]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:C,outWidth:k,outChannels:_,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:x,inShape:n,outShape:$,filterShape:t}}function Zs(n,t,e,s,r,a=!1,o="channelsLast",i){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h,d]=n;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,d,u,c,h]=n}const[p,f,g,,m]=t,[y,x,b]=ld(e),[w,v,C]=ld(s),k=ca(p,w),_=ca(f,v),$=ca(g,C),{padInfo:E,outDepth:P,outHeight:B,outWidth:U}=function bS(n,t,e,s,r,a,o,i,l,u,c){let h,d,p,f;if("valid"===n&&(n=0),"number"==typeof n){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:0===n?"VALID":"NUMBER"};const m=function yS(n,t,e,s,r,a){null==r&&(r=id(n,t[0],s[0]));const o=[0,0,0,e];for(let i=0;i<3;i++)n[i]+2*r>=t[i]&&(o[i]=qo((n[i]-t[i]+2*r)/s[i]+1,a));return o}([t,e,s,1],[i,l,u],1,[r,a,o],n,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==n)throw Error(`Unknown padding parameter: ${n}`);{d=Math.ceil(t/r),p=Math.ceil(e/a),f=Math.ceil(s/o);const g=(d-1)*r+i-t,m=(p-1)*a+l-e,y=(f-1)*o+u-s,x=Math.floor(g/2),b=g-x,w=Math.floor(m/2),v=m-w,C=Math.floor(y/2);h={top:w,bottom:v,left:C,right:y-C,front:x,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,y,x,b,k,_,$,i),G=a?m*d:m;let H;return"channelsFirst"===o?H=[l,G,P,B,U]:"channelsLast"===o&&(H=[l,P,B,U,G]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:P,outHeight:B,outWidth:U,outChannels:G,padInfo:E,strideDepth:y,strideHeight:x,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:k,effectiveFilterHeight:_,effectiveFilterWidth:$,dilationDepth:w,dilationHeight:v,dilationWidth:C,inShape:n,outShape:H,filterShape:t}}function id(n,t,e,s=1){const r=ca(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function jo(n){return"number"==typeof n?[n,n,n]:2===n.length?[n[0],n[1],1]:n}function ld(n){return"number"==typeof n?[n,n,n]:n}function ca(n,t){return t<=1?n:n+(n-1)*(t-1)}function qo(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ys(n){const[t,e,s]=jo(n);return 1===t&&1===e&&1===s}function sn(n,t){return Ys(n)||Ys(t)}function _r(n){return jo(n).every(t=>t>0)}function Rs(n){if("NHWC"===n)return"channelsLast";if("NCHW"===n)return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function mn(n,t,e){if(null!=e){if("string"==typeof t)throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if("number"==typeof t)S(We(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${n}: Unknown padding parameter: ${t}`);t.forEach(s=>{s.forEach(r=>{S(We(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})})}}}const F=O({reshape_:function wS(n,t){const s={x:N(n,"x","reshape","string_or_numeric")};return R.runKernel(Sl,s,{shape:t})}}),ud=O({avgPool_:function vS(n,t,e,s,r){const a=N(n,"x","avgPool","float32");S(sn(e,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`);let i=a,l=!1;3===a.rank&&(l=!0,i=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),mn("avgPool",s,r);let h=R.runKernel(Mi,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r});return h=me(h,a.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),SS=O({avgPool3d_:function IS(n,t,e,s,r,a="NDHWC"){const o=N(n,"x","avgPool3d","float32");let i=o,l=!1;4===o.rank&&(l=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(5===i.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),S("NDHWC"===a,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),S("number"==typeof e&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),mn("avgPool3d",s,r);let h=R.runKernel(zi,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:a});return h=me(h,i.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});function CS(n){let t;return t=0===n.rank||1===n.rank?F(n,[1,1,1,n.size]):2===n.rank?F(n,[1,1,n.shape[0],n.shape[1]]):3===n.rank?F(n,[1,n.shape[0],n.shape[1],n.shape[2]]):n,t}const Jl=O({batchNorm_:function NS(n,t,e,s,r,a){null==a&&(a=.001);const o=N(n,"x","batchNorm"),i=N(t,"mean","batchNorm"),l=N(e,"variance","batchNorm");let u,c;null!=r&&(u=N(r,"scale","batchNorm")),null!=s&&(c=N(s,"offset","batchNorm")),S(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(null==c||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(null==u||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:CS(o),scale:u,offset:c,mean:i,variance:l},f=R.runKernel(Ji,d,{varianceEpsilon:a});return F(f,o.shape)}}),TS=O({batchNorm2d_:function kS(n,t,e,s,r,a){const o=N(n,"x","batchNorm"),i=N(t,"mean","batchNorm"),l=N(e,"variance","batchNorm");let u,c;return null!=r&&(u=N(r,"scale","batchNorm")),null!=s&&(c=N(s,"offset","batchNorm")),S(2===o.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),S(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),S(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&S(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&S(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Jl(o,i,l,c,u,a)}}),$S=O({batchNorm3d_:function _S(n,t,e,s,r,a){const o=N(n,"x","batchNorm"),i=N(t,"mean","batchNorm"),l=N(e,"variance","batchNorm");let u,c;return null!=r&&(u=N(r,"scale","batchNorm")),null!=s&&(c=N(s,"offset","batchNorm")),S(3===o.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),S(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),S(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&S(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&S(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Jl(o,i,l,c,u,a)}}),DS=O({batchNorm4d_:function ES(n,t,e,s,r,a){const o=N(n,"x","batchNorm"),i=N(t,"mean","batchNorm"),l=N(e,"variance","batchNorm");let u,c;return null!=r&&(u=N(r,"scale","batchNorm")),null!=s&&(c=N(s,"offset","batchNorm")),S(4===o.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),S(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),S(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&S(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&S(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Jl(o,i,l,c,u,a)}}),Ko=O({broadcastTo_:function AS(n,t){let e=N(n,"broadcastTo","x");const s=e.shape;if(hs(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=F(e,u)}const r=e.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])a[u]=1;else if(1!==e.shape[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);return 0===a.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length?Nr(e):R.runKernel(Ro,{x:e},{reps:a})}}),On=O({clipByValue_:function RS(n,t,e){const s=N(n,"x","clipByValue");return S(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e?Uo(s.shape,t,s.dtype):R.runKernel(qa,{x:s},{clipValueMin:t,clipValueMax:e})}}),ln=O({concat_:function OS(n,t=0){S(n.length>=1,()=>"Pass at least one tensor to concat");const e=Am(n,"tensors","concat","string_or_numeric");return"complex64"===e[0].dtype&&e.forEach(a=>{if("complex64"!==a.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${a.dtype}. `)}),1===e.length?Nr(e[0]):R.runKernel(Gi,e,{axis:t})}}),PS=O({concat1d_:function FS(n){return ln(n,0)}}),VS=O({concat2d_:function LS(n,t){return ln(n,t)}}),zS=O({concat3d_:function MS(n,t){return ln(n,t)}}),WS=O({concat4d_:function BS(n,t){return ln(n,t)}}),$r=O({conv2d_:function US(n,t,e,s,r="NHWC",a=[1,1],o){const i=N(n,"x","conv2d","float32"),l=N(t,"filter","conv2d","float32");let u=i,c=!1;3===i.rank&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),S(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),mn("conv2d",s,o);const h="NHWC"===r?u.shape[3]:u.shape[1];S(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),S(sn(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),S(_r(a),()=>"Error in conv2D: Dilated rates should be larger than 0."),S(_r(e),()=>"Error in conv2D: Strides should be larger than 0.");const f=R.runKernel(Hi,{x:u,filter:l},{strides:e,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o});return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),bg=O({conv1d_:function GS(n,t,e,s,r="NWC",a=1,o){const i=N(n,"x","conv1d"),l=N(t,"filter","conv1d");let u=i,c=!1;2===i.rank&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1]])),S(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),S(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),mn("conv1d",s,o),S(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),S(sn(e,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${a}'`),S(_r(a),()=>"Error in conv1D: Dilated rates should be larger than 0."),S(_r(e),()=>"Error in conv1D: Stride should be larger than 0."),S("NWC"===r,()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=F(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=F(u,[u.shape[0],1,u.shape[1],u.shape[2]]),m=$r(d,h,[1,e],s,"NHWC",[1,a],o);return F(m,c?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}}),cd=O({conv2DBackpropInput_:function HS(n,t,e,s,r,a="NHWC",o){S(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,l=t,u=!1;3===t.rank&&(u=!0,l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,n[0],n[1],n[2]]),S(4===i.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),S(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),S(4===e.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const c="NHWC"===a?i[3]:i[1],h="NHWC"===a?l.shape[3]:l.shape[1];S(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),S(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),mn("conv2dDerInput",r,o);const f=R.runKernel(ji,{dy:l,filter:e},{strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i});return u?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),wg=O({conv2dTranspose_:function jS(n,t,e,s,r,a){const o=N(n,"x","conv2dTranspose"),i=N(t,"filter","conv2dTranspose");return cd(e,o,i,s,r,"NHWC",a)}}),KS=O({conv3d_:function qS(n,t,e,s,r="NDHWC",a=[1,1,1]){const o=N(n,"x","conv3d"),i=N(t,"filter","conv3d");let l=o,u=!1;4===o.rank&&(u=!0,l=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),S(5===i.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),S(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),S(sn(e,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),S("NDHWC"===r,()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),S(_r(a),()=>"Error in conv3D: Dilated rates should be larger than 0."),S(_r(e),()=>"Error in conv3D: Strides should be larger than 0.");const d=R.runKernel(qi,{x:l,filter:i},{strides:e,pad:s,dataFormat:r,dilations:a});return u?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),vg=O({conv3DBackpropInput_:function XS(n,t,e,s,r){S(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,o=t,i=!1;4===t.rank&&(i=!0,o=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,n[0],n[1],n[2],n[3]]);const l=a[4],u=o.shape[4];S(5===a.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),S(5===o.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),S(5===e.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),S(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),S(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);const d=R.runKernel(Vc,{dy:o,filter:e},{pad:r,strides:s,inputShape:a});return i?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),YS=O({conv3dTranspose_:function ZS(n,t,e,s,r){const a=N(n,"x","conv3dTranspose"),o=N(t,"filter","conv3dTranspose");return vg(e,a,o,s,r)}}),Ig=O({denseBincount_:function QS(n,t,e,s=!1){const r=N(n,"x","denseBincount"),a=N(t,"weights","denseBincount");return S("int32"===r.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),S(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),S(e>=0,()=>`size must be non-negative, but got ${e}.`),S(a.size===r.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`),R.runKernel(Bc,{x:r,weights:a},{size:e,binaryOutput:s})}}),eu=O({depthwiseConv2d_:function JS(n,t,e,s,r="NHWC",a=[1,1],o){const i=N(n,"x","depthwiseConv2d","float32"),l=N(t,"filter","depthwiseConv2d","float32");let u=i,c=!1;3===i.rank&&(c=!0,u=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),S(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h="NHWC"===r?u.shape[3]:u.shape[1];S(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),mn("depthwiseConv2d",s,o);const f=R.runKernel(Xi,{x:u,filter:l},{strides:e,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o});return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),tu=O({elu_:function eC(n){const e={x:N(n,"x","elu","float32")};return R.runKernel(Ya,e)}}),ms=O({equal_:function tC(n,t){let e=N(n,"a","equal","string_or_numeric"),s=N(t,"b","equal","string_or_numeric");return[e,s]=At(e,s),ze(e.shape,s.shape),R.runKernel(Yi,{a:e,b:s})}}),Gn=O({exp_:function nC(n){const e={x:N(n,"x","exp")};return R.runKernel(Ja,e)}}),kn=O({expandDims_:function sC(n,t=0){const e=N(n,"x","expandDims","string_or_numeric");return S(t<=e.rank,()=>"Axis must be <= rank of the tensor"),R.runKernel(Qi,{input:e},{dim:t})}}),ts=O({tile_:function rC(n,t){const e=N(n,"x","tile","string_or_numeric");return S(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`),R.runKernel(Ro,{x:e},{reps:t})}}),Sg=O({eye_:function aC(n,t,e,s="float32"){null==t&&(t=n);const r=je([n,t],s),a=n<=t?n:t;for(let i=0;i<a;++i)r.set(1,i,i);const o=F(r.toTensor(),[n,t]);if(null==e)return o;if(1===e.length)return ts(kn(o,0),[e[0],1,1]);if(2===e.length)return ts(kn(kn(o,0),0),[e[0],e[1],1,1]);if(3===e.length)return ts(kn(kn(kn(o,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}}),nu=O({floor_:function oC(n){const e={x:N(n,"x","floor","float32")};return R.runKernel(to,e)}}),hd=O({gather_:function iC(n,t,e=0,s=0){const r=N(n,"x","gather"),a=N(t,"indices","gather","int32");return R.runKernel(el,{x:r,indices:a},{axis:e,batchDims:s})}}),Fn=O({greater_:function lC(n,t){let e=N(n,"a","greater","string_or_numeric"),s=N(t,"b","greater","string_or_numeric");return[e,s]=At(e,s),ze(e.shape,s.shape),R.runKernel(tl,{a:e,b:s})}}),Er=O({greaterEqual_:function uC(n,t){let e=N(n,"a","greaterEqual","string_or_numeric"),s=N(t,"b","greaterEqual","string_or_numeric");return[e,s]=At(e,s),ze(e.shape,s.shape),R.runKernel(so,{a:e,b:s})}}),dd=O({leakyRelu_:function cC(n,t=.2){const s={x:N(n,"x","leakyRelu")};return R.runKernel(nl,s,{alpha:t})}}),Hn=O({log_:function hC(n){const e={x:N(n,"x","log","float32")};return R.runKernel(uo,e)}}),pd=O({log1p_:function dC(n){const e={x:N(n,"x","log1p")};return R.runKernel(co,e)}}),ns=O({max_:function pC(n,t=null,e=!1){const r={x:N(n,"x","max")};return R.runKernel(ul,r,{reductionIndices:t,keepDims:e})}}),Se=O({sum_:function fC(n,t=null,e=!1){let s=N(n,"x","sum");return"bool"===s.dtype&&(s=me(s,"int32")),R.runKernel($l,{x:s},{axis:t,keepDims:e})}}),Cg=O({logSoftmax_:function mC(n,t=-1){const e=N(n,"logits","logSoftmax");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Ds((r,a)=>{const i=ns(r,t,!0),l=Ie(r,i),u=Ie(me(l,"float32"),Hn(Se(Gn(l),t,!0)));return a([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,g=Gn(p);return Ie(h,D(Se(h,t,!0),g))}}})(e)}}),Os=O({logicalAnd_:function gC(n,t){const e=N(n,"a","logicalAnd","bool"),s=N(t,"b","logicalAnd","bool");return ze(e.shape,s.shape),R.runKernel(al,{a:e,b:s})}}),st=O({matMul_:function yC(n,t,e=!1,s=!1){let r=N(n,"a","matMul"),a=N(t,"b","matMul");return[r,a]=At(r,a),R.runKernel(Bi,{a:r,b:a},{transposeA:e,transposeB:s})}}),fd=O({maxPool_:function xC(n,t,e,s,r){const a=N(n,"x","maxPool");let i=a,l=!1;3===a.rank&&(l=!0,i=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),S(sn(e,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`),mn("maxPool",s,r);const h=R.runKernel(cl,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r});return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),wC=O({maxPool3d_:function bC(n,t=[1,1,1],e,s,r,a="NDHWC"){const o=N(n,"x","maxPool3d");let i=o,l=!1;4===o.rank&&(l=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(5===i.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),S("NDHWC"===a,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),mn("maxPool3d",s,r);const h=R.runKernel(hl,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:a});return l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ft=O({mean_:function vC(n,t=null,e=!1){const r={x:N(n,"x","mean")};return R.runKernel(dl,r,{axis:t,keepDims:e})}}),su=O({min_:function IC(n,t=null,e=!1){const r={x:N(n,"x","min")};return R.runKernel(pl,r,{axis:t,keepDims:e})}}),ha=O({minimum_:function SC(n,t){let e=N(n,"a","minimum"),s=N(t,"b","minimum");return[e,s]=At(e,s),"bool"===e.dtype&&(e=me(e,"int32"),s=me(s,"int32")),ze(e.shape,s.shape),R.runKernel(po,{a:e,b:s})}});function md(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function Ng(n,t,e){const s=n.length+t.length,r=[];let a=0,o=0;for(let i=0;i<s;i++)-1===e.indexOf(i)?r.push(n[a++]):r.push(t[o++]);return r}function Yt(n,t){const e=[],s=n.length;for(let a=0;a<s;a++)-1===t.indexOf(a)&&e.push(n[a]);return[e,t.map(a=>n[a])]}function Pt(n,t){return Ng(n,t.map(s=>1),t)}function rn(n,t,e){S(md(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function kt(n,t){if(md(n,t))return null;const e=[];for(let s=0;s<t;++s)-1===n.indexOf(s)&&e.push(s);return n.forEach(s=>e.push(s)),e}function Qs(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Lt(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}const gd=O({moments_:function CC(n,t=null,e=!1){const s=ke(t,(n=N(n,"x","moments")).shape),r=Ft(n,s,e);let a=r.shape;e||(a=Pt(r.shape,s));const o=pt(Ie(me(n,"float32"),F(r,a)));return{mean:r,variance:Ft(o,s,e)}}}),xt=O({neg_:function NC(n){const e={x:N(n,"x","neg")};return R.runKernel(ml,e)}}),Xo=O({notEqual_:function kC(n,t){let e=N(n,"a","notEqual","string_or_numeric"),s=N(t,"b","notEqual","string_or_numeric");return[e,s]=At(e,s),ze(e.shape,s.shape),R.runKernel(gl,{a:e,b:s})}}),kg=O({oneHot_:function TC(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:N(n,"indices","oneHot","int32")};return R.runKernel(xl,o,{dtype:r,depth:t,onValue:e,offValue:s})}});function Wt(n,t="float32"){if(hs(n),"complex64"===t){const s=Wt(n,"float32"),r=Wt(n,"float32");return Ir(s,r)}const e=tn(I(n),t);return R.makeTensor(e,n,t)}function Js(n,t="float32"){if(hs(n),"complex64"===t){const s=Js(n,"float32"),r=Wt(n,"float32");return Ir(s,r)}const e=Oi(I(n),t);return R.makeTensor(e,n,t)}const jn=O({onesLike_:function _C(n){const e={x:N(n,"x","onesLike")};return R.runKernel(yl,e)}}),yd=O({pad_:function $C(n,t,e=0){const s=N(n,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return R.runKernel(wl,{x:s},{paddings:t,constantValue:e})}}),xd=O({prelu_:function EC(n,t){const e=N(n,"x","prelu"),s=N(t,"alpha","prelu");return R.runKernel(vl,{x:e,alpha:s})}});var bd=Q(340);class wd{constructor(t,e,s,r,a){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=a||Math.random();this.random=bd.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const i=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class DC{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=s,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=bd.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Tg=O({randomNormal_:function FC(n,t=0,e=1,s,r){if(hs(n),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new wd(t,e,s,!1,r),o=je(n,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),da=O({randomUniform_:function PC(n,t=0,e=1,s="float32",r){hs(n);const a=je(n,s),o=new DC(t,e,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}});function Zo(n,t,e=1,s="float32"){if(0===e)throw new Error("Cannot have a step of zero");return R.runKernel(ah,{},{start:n,stop:t,step:e,dtype:s})}const Fs=O({relu_:function LC(n){const e={x:N(n,"x","relu")};return R.runKernel(xo,e)}}),Dr=O({reverse_:function VC(n,t){const s={x:N(n,"x","reverse")};return R.runKernel(kl,s,{dims:t})}}),_g=O({selu_:function MC(n){const e={x:N(n,"x","selu")};return R.runKernel(Io,e)}}),$g=O({separableConv2d_:function zC(n,t,e,s,r,a=[1,1],o="NHWC"){const i=N(n,"x","separableConv2d"),l=N(t,"depthwiseFilter","separableConv2d"),u=N(e,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");S(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),S(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),S(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),S(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),S(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];S(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=eu(c,l,s,r,o,a),m=$r(f,u,1,"valid",o);return h?F(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),pa=O({sigmoid_:function BC(n){const e={x:N(n,"x","sigmoid","float32")};return R.runKernel(ko,e)}}),lt=O({slice_:function WC(n,t,e){const s=N(n,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");return R.runKernel(_l,{x:s},{begin:t,size:e})}}),Id=O({slice1d_:function UC(n,t,e){const s=N(n,"x","slice1d");return S(1===s.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),lt(s,[t],[e])}}),Eg=O({slice2d_:function GC(n,t,e){const s=N(n,"x","slice2d");return S(2===s.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),lt(s,t,e)}}),Sd=O({slice3d_:function HC(n,t,e){const s=N(n,"x","slice3d");return S(3===s.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),lt(s,t,e)}}),ru=O({slice4d_:function jC(n,t,e){const s=N(n,"x","slice4d");return S(4===s.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),lt(s,t,e)}}),Cd=O({softmax_:function qC(n,t=-1){const e=N(n,"logits","softmax","float32");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);return R.runKernel(Al,{logits:e},{dim:t})}}),Yo=O({softplus_:function KC(n){const e={x:N(n,"x","softplus")};return R.runKernel(To,e)}}),Pn=O({split_:function XC(n,t,e=0){const r={x:N(n,"x","split")};return R.runKernel(Dl,r,{numOrSizeSplits:t,axis:e})}}),Qo=O({squeeze_:function ZC(n,t){const e=N(n,"x","squeeze","string_or_numeric");return F(e,$t(e.shape,t).newShape)}}),Ps=O({stack_:function YC(n,t=0){const e=Am(n,"tensors","stack","string_or_numeric");return S(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&S(t<=e[0].rank,()=>"Axis must be <= rank of the tensor"),R.runKernel(bl,e,{axis:t})}}),Nd=O({tanh_:function QC(n){const e={x:N(n,"x","tanh","float32")};return R.runKernel(Ao,e)}});function Tn(n,t){J(n);const e=zo(n,t);if(1!==e.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Bo(n,null,e,t)}const Dg=O({truncatedNormal_:function JC(n,t=0,e=1,s,r){if(hs(n),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new wd(t,e,s,!0,r),o=je(n,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),Ar=O({unstack_:function eN(n,t=0){const e=N(n,"x","unstack","string_or_numeric");return S(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`),R.runKernel(Ol,{value:e},{axis:t})}}),gn=O({where_:function nN(n,t,e){const s=N(t,"a","where"),r=N(e,"b","where"),a=N(n,"condition","where","bool"),o=ze(ze(a.shape,s.shape),r.shape),i=Ko(a,o),l=Ko(s,o),u=Ko(r,o);return R.runKernel(Tl,{condition:i,t:l,e:u})}}),kd=O({imag_:function sN(n){const e={input:N(n,"input","imag")};return R.runKernel(Qc,e)}}),au=O({real_:function rN(n){const e={input:N(n,"input","real")};return R.runKernel(oh,e)}}),Je=O({transpose_:function aN(n,t,e){const s=N(n,"x","transpose");if(null==t&&(t=s.shape.map((o,i)=>i).reverse()),S(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(o=>{S(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},a={perm:t};return"complex64"===s.dtype?V(()=>{let o=au(s),i=kd(s);return o=R.runKernel(ta,{x:o},a),i=R.runKernel(ta,{x:i},a),e&&(i=xt(i)),Ir(o,i)}):R.runKernel(ta,r,a)}}),lN=O({dropout_:function iN(n,t,e,s){const r=N(n,"x","dropout");if(S("float32"===r.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),S(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return n instanceof Ot?r.clone():r;const a=function oN(n,t){if(null==t)return n.shape.slice();if(we(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)e.push(null==t[s]&&null!=n.shape[s]?n.shape[s]:t[s]);return e}return t}(r,e),o=1-t,i=_e(nu(oe(da(a,0,1,"float32",s),o)),o);return D(r,i)}}),Td=O({fft_:function uN(n){return S("complex64"===n.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`),R.runKernel("FFT",{input:n})}}),_d=O({rfft_:function cN(n,t){S("float32"===n.dtype,()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(null!=t&&t<e){const f=n.shape.map(m=>0),g=n.shape.map(m=>m);g[n.shape.length-1]=t,r=lt(n,f,g),e=t}else if(null!=t&&t>e){const f=n.shape.map(g=>g);f[n.shape.length-1]=t-e,r=ln([n,Wt(f)],n.shape.length-1),e=t}else r=n;const a=Qe(r),o=F(Ir(r,a),[s,e]),i=Td(o),l=Math.floor(e/2)+1,u=au(i),c=kd(i),h=Pn(u,[l,e-l],u.shape.length-1),d=Pn(c,[l,e-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,F(Ir(h[0],d[0]),p)}}),ou=O({ifft_:function hN(n){return S("complex64"===n.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`),R.runKernel(Yc,{input:n})}}),Ag=O({irfft_:function dN(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=F(n,[e,t]);s=ou(r)}else{const r=[e,2*(t-1)],a=F(au(n),[e,t]),o=F(kd(n),[e,t]),i=Dr(lt(a,[0,1],[e,t-2]),1),l=D(Dr(lt(o,[0,1],[e,t-2]),1),Me(-1)),u=ln([a,i],1),c=ln([o,l],1),h=F(Ir(u,c),[r[0],r[1]]);s=ou(h)}if(s=au(s),3===n.rank&&0!==n.shape[0]){const r=s,a=n.shape[0];s=F(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}}),$d=O({conv2DBackpropFilter_:function pN(n,t,e,s,r,a="NHWC",o){let i=n;3===n.rank&&(i=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;3===l.rank&&(l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]])),S(4===i.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),S(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),S(4===e.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const u="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];return S(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),S(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),mn("conv2dDerFilter",r,o),R.runKernel(Pc,{x:i,dy:l},{strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:e})}}),Rg=O({relu6_:function fN(n){const e={x:N(n,"x","relu6")};return R.runKernel(bo,e)}}),Jo=O({step_:function mN(n,t=0){const s={x:N(n,"x","step")};return R.runKernel(Oo,s,{alpha:t})}});function iu(n,t,e){if(null==e||"linear"===e)return n;if("relu"===e)return D(n,Jo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function lu(n,t){let e=t;const s=Bt(n.shape,t.shape);return s.length>0&&(e=Se(e,s)),F(e,n.shape)}function uu(n,t,e,s){if("linear"===t)return n;if("relu"===t)return Fs(n);if("elu"===t)return tu(n);if("relu6"===t)return Rg(n);if("prelu"===t)return xd(n,e);if("leakyrelu"===t)return dd(n,s);if("sigmoid"===t)return pa(n);throw new Error(`Unknown fused activation ${t}.`)}const cu=(n,t)=>!(n>0)||"linear"===t,yN=O({fusedConv2d_:function gN({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===cu(R.state.gradientDepth,l=l||"linear")){S("NHWC"===r,()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=$r(n,t,e,s,r,a,o);return null!=i&&(C=oe(C,i)),uu(C,l,u,c)}const h=N(n,"x","conv2d","float32"),d=N(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=F(h,[1,h.shape[0],h.shape[1],h.shape[2]])),S(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),S(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),mn("fused conv2d",s,o);const g="NHWC"===r?p.shape[3]:p.shape[1];S(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),S(sn(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);const m=Zt(p.shape,d.shape,e,a,s,o);let y,x;if(null!=i&&(y=N(i,"bias","fused conv2d"),[y]=At(y,h),"NHWC"===r?ze(m.outShape,y.shape):(S(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),S(0===y.shape.length||y.shape[0]===m.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${m.outChannels})`))),null!=u){const C=u.shape;if(S(C.length<=1||3===C.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),1===C.length)S(1===C[0]||C[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${m.outChannels}).`);else if(3===C.length)try{ze(C,m.outShape)}catch(k){throw Error(`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${m.outShape}).`)}x=N(u,"prelu weights","fused conv2d")}const b=(C,k)=>{S("NHWC"===r,()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[_,$,E,P]=k,B=iu(C,E,l);S(Ys(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const H=[cd($.shape,B,_,e,s),$d($,B,_.shape,e,s)];if(null!=P){const K=lu(P,B);H.push(K)}return H},w={x:p,filter:d,bias:y,preluActivationWeights:x},v={strides:e,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return null==i?Ds((k,_,$)=>{let E=R.runKernel(Vl,w,v);return $([_,k,E]),f&&(E=F(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,d):Ds((k,_,$,E)=>{let P=R.runKernel(Vl,w,v);return E([_,k,P,$]),f&&(P=F(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:b}})(p,d,y)}}),Og=O({depthwiseConv2dNativeBackpropFilter_:function xN(n,t,e,s,r,a=[1,1],o){let i=n;3===n.rank&&(i=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;return 3===l.rank&&(l=F(t,[1,t.shape[0],t.shape[1],t.shape[2]])),R.runKernel(Uc,{x:i,dy:l},{strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:e})}}),Fg=O({depthwiseConv2dNativeBackpropInput_:function bN(n,t,e,s,r,a=[1,1],o){let i=t,l=!1;3===t.rank&&(l=!0,i=F(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h=R.runKernel(Gc,{dy:i,filter:e},{strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:n});return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Pg=O({fusedMatMul_:function vN({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(!1===cu(R.state.gradientDepth,a)){let P=st(n,t,e,s);return null!=r&&(P=oe(P,r)),uu(P,a,o,i)}let l=N(n,"a","fused matMul"),u=N(t,"b","fused matMul");[l,u]=At(l,u);const c=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=I(f),y=I(g);S(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${s} must match.`);const b=ze(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),w=F(l,e?[m,c,d]:[m,d,c]),v=F(u,s?[y,p,h]:[y,h,p]);let C,k;null!=r&&(C=N(r,"bias","fused matMul"),[C]=At(C,l),ze(b,C.shape)),null!=o&&(k=N(o,"prelu weights","fused matMul"));const _=(P,B)=>{const[U,G,H,K]=B,X=iu(F(P,H.shape),H,a);let j,Z;return e||s?!e&&s?(j=st(X,G,!1,!1),Z=st(X,U,!0,!1)):e&&!s?(j=st(G,X,!1,!0),Z=st(U,X,!1,!1)):(j=st(G,X,!0,!0),Z=st(X,U,!0,!0)):(j=st(X,G,!1,!0),Z=st(U,X,!0,!1)),null!=r?[j,Z,lu(K,X)]:[j,Z]},$={a:w,b:v,bias:C,preluActivationWeights:k},E={transposeA:e,transposeB:s,activation:a,leakyreluAlpha:i};return null==r?Ds((B,U,G)=>{const H=R.runKernel(Ll,$,E);return G([B,U,H]),{value:F(H,b),gradFunc:_}})(w,v):Ds((B,U,G,H)=>{const K=R.runKernel(Ll,$,E);return H([B,U,K,G]),{value:F(K,b),gradFunc:_}})(w,v,C)}});function hu(n,t,e){if(J(n),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=zo(n,e);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Bo(n,t,s,e)}const EN=O({cropAndResize_:function $N(n,t,e,s,r="bilinear",a=0){const o=N(n,"image","cropAndResize"),i=N(t,"boxes","cropAndResize","float32"),l=N(e,"boxInd","cropAndResize","int32"),u=i.shape[0];return S(4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),S(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),S(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),S(2===s.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),S(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),S("bilinear"===r||"nearest"===r,()=>`method must be bilinear or nearest, but was ${r}`),R.runKernel(zc,{image:o,boxes:i,boxInd:l},{method:r,extrapolationValue:a,cropSize:s})}}),AN=O({flipLeftRight_:function DN(n){const t=N(n,"image","flipLeftRight","float32");return S(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),R.runKernel(Zc,{image:t},{})}}),ON=O({grayscaleToRGB_:function RN(n){const t=N(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];S(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),S(1===s,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,ts(t,r)}}),PN=O({rotateWithOffset_:function FN(n,t,e=0,s=.5){const r=N(n,"image","rotateWithOffset","float32");return S(4===r.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`),R.runKernel(Ih,{image:r},{radians:t,fillValue:e,center:s})}});function fa(n,t,e,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=n.shape[0];return e=Math.min(e,o),S(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),S(2===n.rank,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),S(4===n.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),S(1===t.rank,()=>"scores must be a 1D tensor"),S(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),S(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const VN=O({nonMaxSuppression_:function LN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const a=N(n,"boxes","nonMaxSuppression","float32"),o=N(t,"scores","nonMaxSuppression","float32"),i=fa(a,o,e,s,r);return R.runKernel(nh,{boxes:a,scores:o},{maxOutputSize:e=i.maxOutputSize,iouThreshold:s=i.iouThreshold,scoreThreshold:r=i.scoreThreshold})}});function MN(n,t,e){const s=function zN(n,t,e){return function WN(n,t,e){let s=0,r=n.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);const i=e(t,n[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}(n,t,e||BN)}(n,t,e);n.splice(s<0?-(s+1):s,0,t)}function BN(n,t){return n>t?1:n<t?-1:0}function Ed(n,t,e,s,r){return Rd(n,t,e,s,r,0)}function Dd(n,t,e,s,r,a){return Rd(n,t,e,s,r,0,!1,a,!0)}function Ad(n,t,e,s,r,a){return Rd(n,t,e,s,r,a,!0)}function Rd(n,t,e,s,r,a,o=!1,i=!1,l=!1){const u=[];for(let m=0;m<t.length;m++)t[m]>r&&u.push({score:t[m],boxIndex:m,suppressBeginIndex:0});u.sort(zg);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<e&&u.length>0;){const m=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:b}=m;if(y<r)break;let w=!1;for(let v=h.length-1;v>=b;--v){const C=UN(n,x,h[v]);if(C>=s){w=!0;break}if(m.score=m.score*GN(s,c,C),m.score<=r)break}m.suppressBeginIndex=h.length,w||(m.score===y?(h.push(x),d.push(m.score)):m.score>r&&MN(u,m,zg))}const p=h.length,f=e-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function UN(n,t,e){const s=n.subarray(4*t,4*t+4),r=n.subarray(4*e,4*e+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-a)*(l-o),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(o,c),y=Math.min(i,h),x=Math.min(l,d),b=Math.max(y-g,0)*Math.max(x-m,0);return b/(p+f-b)}function GN(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function zg(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}function Od(){return(Od=(0,T.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const a=N(n,"boxes","nonMaxSuppressionAsync"),o=N(t,"scores","nonMaxSuppressionAsync"),i=fa(a,o,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const l=yield Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:h}=Ed(u,c,e,s,r);return a!==n&&a.dispose(),o!==t&&o.dispose(),Tn(h,"int32")})).apply(this,arguments)}const KN=O({nonMaxSuppressionWithScore_:function qN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const o=N(n,"boxes","nonMaxSuppression"),i=N(t,"scores","nonMaxSuppression"),l=fa(o,i,e,s,r,a),h=R.runKernel(rh,{boxes:o,scores:i},{maxOutputSize:e=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma});return{selectedIndices:h[0],selectedScores:h[1]}}});function Fd(){return(Fd=(0,T.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const o=N(n,"boxes","nonMaxSuppressionAsync"),i=N(t,"scores","nonMaxSuppressionAsync"),l=fa(o,i,e,s,r,a);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=yield Promise.all([o.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Ad(c,h,e,s,r,a);return o!==n&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Tn(d,"int32"),selectedScores:Tn(p)}})).apply(this,arguments)}const QN=O({nonMaxSuppressionPadded_:function YN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const o=N(n,"boxes","nonMaxSuppression"),i=N(t,"scores","nonMaxSuppression"),l=fa(o,i,e,s,r,null),f=R.runKernel(sh,{boxes:o,scores:i},{maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a});return{selectedIndices:f[0],validOutputs:f[1]}}});function Pd(){return(Pd=(0,T.Z)(function*(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const o=N(n,"boxes","nonMaxSuppressionAsync"),i=N(t,"scores","nonMaxSuppressionAsync"),l=fa(o,i,e,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=yield Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:g}=Dd(d,p,u,c,h,a);return o!==n&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Tn(f,"int32"),validOutputs:Me(g,"int32")}})).apply(this,arguments)}const Bg=O({resizeBilinear_:function tk(n,t,e=!1,s=!1){const r=N(n,"images","resizeBilinear");S(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),S(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),S(!1===s||!1===e,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;3===r.rank&&(o=!0,a=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u=R.runKernel(Nl,{images:a},{alignCorners:e,halfPixelCenters:s,size:t});return o?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Wg=O({resizeNearestNeighbor_:function nk(n,t,e=!1,s=!1){const r=N(n,"images","resizeNearestNeighbor");S(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),S(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),S("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype"),S(!1===s||!1===e,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;3===r.rank&&(o=!0,a=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u=R.runKernel(Cl,{images:a},{alignCorners:e,halfPixelCenters:s,size:t});return o?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),rk=O({bincount_:function sk(n,t,e){const s=N(n,"x","bincount"),r=N(t,"weights","bincount");return S("int32"===s.dtype,()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),S(e>=0,()=>`size must be non-negative, but got ${e}.`),S(r.size===s.size||0===r.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`),R.runKernel(Oc,{x:s,weights:r},{size:e})}}),ma=O({lessEqual_:function ak(n,t){let e=N(n,"a","lessEqual","string_or_numeric"),s=N(t,"b","lessEqual","string_or_numeric");return[e,s]=At(e,s),ze(e.shape,s.shape),R.runKernel(rl,{a:e,b:s})}}),Ug=O({round_:function ok(n){const e={x:N(n,"x","round")};return R.runKernel(wo,e)}}),uk=O({threshold_:function ik(n,t="binary",e=!1,s=.5){const r=N(n,"image","threshold"),l=r.shape[0]*r.shape[1];let c,h,d,p,u=D(Tn([s]),255);if(S(3===r.rank,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),S(3===r.shape[2]||1===r.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),S("int32"===r.dtype||"float32"===r.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),S("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===r.shape[2]){[c,h,d]=Pn(r,[1,1,1],-1);const m=D(c,.2989),y=D(h,.587),x=D(d,.114);p=oe(oe(m,y),x)}else p=n;"otsu"===t&&(u=function lk(n,t){let a,o,i,l,u,c,e=Tn([-1]),s=Tn([0]),r=Tn([0]);for(let h=0;h<n.size-1;h++){a=lt(n,0,h+1),o=lt(n,h+1),u=_e(Se(a),t),c=_e(Se(o),t);const d=Se(D(a,Zo(0,a.size)));i=_e(d,Se(a));const p=Uo(o.shape,a.size),f=oe(Zo(0,o.size),p),g=D(o,f);l=_e(Se(g),Se(o));const m=Ie(i,l),y=Ie(i,l),x=D(u,c);r=D(D(x,m),y);const b=Fn(r,s);s=gn(b,r,s),e=gn(b,Tn([h]),e)}return e}(rk(me(Ug(p),"int32"),Wo([]),256),l));const f=e?ma(p,u):Fn(p,u);return me(D(f,255),"int32")}}),hk=O({transform_:function ck(n,t,e="nearest",s="constant",r=0,a){const o=N(n,"image","transform","float32"),i=N(t,"transforms","transform","float32");return S(4===o.rank,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),S(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),S(null==a||2===a.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`),R.runKernel(bh,{image:o,transforms:i},{interpolation:e,fillMode:s,fillValue:r,outputShape:a})}}),du=O({less_:function dk(n,t){let e=N(n,"a","less","string_or_numeric"),s=N(t,"b","less","string_or_numeric");return[e,s]=At(e,s),ze(e.shape,s.shape),R.runKernel(sl,{a:e,b:s})}}),fk=O({bandPart_:function pk(n,t,e){const s=N(n,"a","bandPart");S(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[a,o]=s.shape.slice(-2);let i,l;"number"==typeof t?(S(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),S(t<=a,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`),i=N(t<0?a:t,"numLower","bandPart")):(S("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),i=gn(du(t,0),a,ha(t,a))),"number"==typeof e?(S(e%1==0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),S(e<=o,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${o}).`),l=N(e<0?o:e,"numUpper","bandPart")):(S("int32"===e.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),l=gn(du(e,0),o,ha(e,o)));const u=F(Zo(0,a,1,"int32"),[-1,1]),c=Zo(0,o,1,"int32"),h=Ie(u,c),d=Os(ma(h,i),Er(h,xt(l))),p=Wt([a,o],s.dtype);return F(Ps(Ar(F(s,[-1,a,o])).map(f=>gn(d,f,p))),r)}});function Gg(n,t,e=null){if(0===n.rank)return Xt(n);if(1!==n.rank&&null===e)return Gg(F(n,[-1]),t,e);if(1===n.rank||"number"==typeof e||Array.isArray(e)&&1===e.length){if(1===t)return Se(Xt(n),e);if(t===1/0)return ns(Xt(n),e);if(t===-1/0)return su(Xt(n),e);if("euclidean"===t||2===t)return fn(Se(la(Xt(n),Me(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&2===e.length){if(1===t)return ns(Se(Xt(n),e[0]),e[1]-1);if(t===1/0)return ns(Se(Xt(n),e[1]),e[0]);if(t===-1/0)return su(Se(Xt(n),e[1]),e[0]);if("fro"===t||"euclidean"===t)return fn(Se(pt(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const pu=O({norm_:function mk(n,t="euclidean",e=null,s=!1){const r=Gg(n=N(n,"x","norm"),t,e);let a=r.shape;if(s){const o=ke(e,n.shape);a=Pt(r.shape,o)}return F(r,a)}}),yk=O({gramSchmidt_:function gk(n){let t;if(Array.isArray(n)){t=!1,S(null!=n&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let a=1;a<n.length;++a)S(n[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[a].shape[0]} vs. ${r})`)}else t=!0,n=Pn(n,n.shape[0],0).map(r=>Qo(r,[0]));S(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(R.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){const i=D(Se(D(e[o],a)),e[o]);a=Ie(a,i)}return _e(a,pu(a,"euclidean"))}));return t?Ps(e,0):e}});function Hg(n,t=!1){return R.tidy(()=>{S(2===n.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=Sg(e),a=Nr(n);const o=hu([[1]],[1,1]);let i=Nr(o);const l=e>=s?s:e;for(let u=0;u<l;++u){const c=a,h=i,d=r;[i,a,r]=R.tidy(()=>{const p=lt(a,[u,u],[e-u,1]),f=pu(p),g=lt(a,[u,u],[1,1]),m=gn(Fn(g,0),hu([[-1]]),hu([[1]])),y=Ie(g,D(m,f)),x=_e(p,y);i=1===x.shape[0]?Nr(o):ln([o,lt(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const b=xt(_e(st(m,y),f)),w=lt(a,[u,0],[e-u,s]),v=D(b,i),C=Je(i);if(0===u)a=Ie(w,st(v,st(C,w)));else{const $=Ie(w,st(v,st(C,w)));a=ln([lt(a,[0,0],[u,s]),$],0)}const k=Je(v),_=lt(r,[0,u],[e,r.shape[1]-u]);if(0===u)r=Ie(_,st(st(_,i),k));else{const $=Ie(_,st(st(_,i),k));r=ln([lt(r,[0,0],[e,u]),$],1)}return[i,a,r]}),Ge([c,h,d])}return!t&&e>s&&(r=lt(r,[0,0],[e,s]),a=lt(a,[0,0],[s,s])),[r,a]})}const bk=O({qr_:function xk(n,t=!1){if(S(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),2===n.rank)return Hg(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=Ar(F(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],a=[];return s.forEach(l=>{const[u,c]=Hg(l,t);r.push(u),a.push(c)}),[F(Ps(r,0),n.shape),F(Ps(a,0),n.shape)]}}});var yn=(()=>{return(n=yn||(yn={}))[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",yn;var n})();const Ls=O({computeWeightedLoss_:function wk(n,t,e=yn.SUM_BY_NONZERO_WEIGHTS){const s=N(n,"losses","computeWeightedLoss");let r=null;null!=t&&(r=N(t,"weights","computeWeightedLoss"));const a=null==r?s:D(s,r);if(e===yn.NONE)return a;if(e===yn.SUM)return Se(a);if(e===yn.MEAN){if(null==r)return Ft(a);{const o=s.size/r.size,i=_e(Se(a),Se(r));return o>1?_e(i,Me(o)):i}}if(e===yn.SUM_BY_NONZERO_WEIGHTS){if(null==r)return _e(Se(a),Me(s.size));{const o=D(r,Js(s.shape)),i=me(Se(Xo(o,Me(0))),"float32");return _e(Se(a),i)}}throw Error(`Unknown reduction: ${e}`)}}),Ik=O({absoluteDifference_:function vk(n,t,e,s=yn.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"labels","absoluteDifference"),a=N(t,"predictions","absoluteDifference");let o=null;null!=e&&(o=N(e,"weights","absoluteDifference")),ee(r.shape,a.shape,"Error in absoluteDifference: ");const i=Xt(Ie(r,a));return Ls(i,o,s)}}),Ck=O({cosineDistance_:function Sk(n,t,e,s,r=yn.SUM_BY_NONZERO_WEIGHTS){const a=N(n,"labels","cosineDistance"),o=N(t,"predictions","cosineDistance");let i=null;null!=s&&(i=N(s,"weights","cosineDistance")),ee(a.shape,o.shape,"Error in cosineDistance: ");const l=Me(1),u=Ie(l,Se(D(a,o),e,!0));return Ls(u,i,r)}}),kk=O({hingeLoss_:function Nk(n,t,e,s=yn.SUM_BY_NONZERO_WEIGHTS){let r=N(n,"labels","hingeLoss");const a=N(t,"predictions","hingeLoss");let o=null;null!=e&&(o=N(e,"weights","hingeLoss")),ee(r.shape,a.shape,"Error in hingeLoss: ");const i=Me(1);r=Ie(D(Me(2),r),i);const l=Fs(Ie(i,D(r,a)));return Ls(l,o,s)}}),_k=O({huberLoss_:function Tk(n,t,e,s=1,r=yn.SUM_BY_NONZERO_WEIGHTS){const a=N(n,"labels","huberLoss"),o=N(t,"predictions","huberLoss");let i=null;null!=e&&(i=N(e,"weights","huberLoss")),ee(a.shape,o.shape,"Error in huberLoss: ");const l=Me(s),u=Xt(Ie(o,a)),c=ha(u,l),h=Ie(u,c),d=oe(D(Me(.5),pt(c)),D(l,h));return Ls(d,i,r)}}),Ek=O({logLoss_:function $k(n,t,e,s=1e-7,r=yn.SUM_BY_NONZERO_WEIGHTS){const a=N(n,"labels","logLoss"),o=N(t,"predictions","logLoss");let i=null;null!=e&&(i=N(e,"weights","logLoss")),ee(a.shape,o.shape,"Error in logLoss: ");const l=Me(1),u=Me(s),c=xt(D(a,Hn(oe(o,u)))),h=D(Ie(l,a),Hn(oe(Ie(l,o),u))),d=Ie(c,h);return Ls(d,i,r)}}),jg=O({squaredDifference_:function Dk(n,t){let e=N(n,"a","squaredDifference"),s=N(t,"b","squaredDifference");return[e,s]=At(e,s),ze(e.shape,s.shape),R.runKernel($o,{a:e,b:s},{})}}),Rk=O({meanSquaredError_:function Ak(n,t,e,s=yn.SUM_BY_NONZERO_WEIGHTS){const r=N(n,"labels","meanSquaredError"),a=N(t,"predictions","meanSquaredError");let o=null;null!=e&&(o=N(e,"weights","meanSquaredError")),ee(r.shape,a.shape,"Error in meanSquaredError: ");const i=jg(r,a);return Ls(i,o,s)}}),Pk=O({sigmoidCrossEntropy_:function Fk(n,t,e,s=0,r=yn.SUM_BY_NONZERO_WEIGHTS){let a=N(n,"multiClassLabels","sigmoidCrossEntropy");const o=N(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=e&&(i=N(e,"weights","sigmoidCrossEntropy")),ee(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Me(s),c=Me(1),h=Me(.5);a=oe(D(a,Ie(c,u)),D(h,u))}const l=function Ok(n,t){const e=N(n,"labels","sigmoidCrossEntropyWithLogits"),s=N(t,"logits","sigmoidCrossEntropyWithLogits");ee(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Fs(s),a=D(s,e),o=pd(Gn(xt(Xt(s))));return oe(Ie(r,a),o)}(a,o);return Ls(l,i,r)}}),qg=O({logSumExp_:function Lk(n,t=null,e=!1){const s=N(n,"x","logSumExp"),r=ke(t,s.shape),a=ns(s,r,!0),o=Ie(s,a),i=Gn(o),l=Se(i,r),u=Hn(l),c=oe(F(a,u.shape),u);if(e){const h=Pt(c.shape,r);return F(c,h)}return c}}),zk=O({softmaxCrossEntropy_:function Mk(n,t,e,s=0,r=yn.SUM_BY_NONZERO_WEIGHTS){let a=N(n,"onehotLabels","softmaxCrossEntropy");const o=N(t,"logits","softmaxCrossEntropy");let i=null;if(null!=e&&(i=N(e,"weights","softmaxCrossEntropy")),ee(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Me(s),c=Me(1),h=Me(a.shape[1]);a=oe(D(a,Ie(c,u)),_e(u,h))}const l=function Vk(n,t,e=-1){if(-1===e&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Ds((r,a,o)=>{const l=qg(a,[e],!0),u=Ie(me(a,"float32"),l);o([r,u]);const c=xt(D(u,r));return{value:Se(c,[e]),gradFunc:(p,f)=>{const[g,m]=f,y=Pt(p.shape,[e]);return[D(F(p,y),Ie(me(g,"float32"),Gn(m))),D(F(p,y),Ie(Gn(m),me(g,"float32")))]}}})(n,t)}(a,o);return Ls(l,i,r)}}),gs={flipLeftRight:AN,grayscaleToRGB:ON,resizeNearestNeighbor:Wg,resizeBilinear:Bg,rotateWithOffset:PN,cropAndResize:EN,nonMaxSuppression:VN,nonMaxSuppressionAsync:function HN(n,t,e){return Od.apply(this,arguments)},nonMaxSuppressionWithScore:KN,nonMaxSuppressionWithScoreAsync:function XN(n,t,e){return Fd.apply(this,arguments)},nonMaxSuppressionPadded:QN,nonMaxSuppressionPaddedAsync:function JN(n,t,e){return Pd.apply(this,arguments)},threshold:uk,transform:hk},sT={bandPart:fk,gramSchmidt:yk,qr:bk},rT={absoluteDifference:Ik,computeWeightedLoss:Ls,cosineDistance:Ck,hingeLoss:kk,huberLoss:_k,logLoss:Ek,meanSquaredError:Rk,sigmoidCrossEntropy:Pk,softmaxCrossEntropy:zk},Rr=class aT{static sgd(t){return new qh(t)}static momentum(t,e,s=!1){return new Qm(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,a=!1){return new Jm(t,e,s,r,a)}static adam(t=.001,e=.9,s=.999,r=null){return new Zm(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new Km(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,a=0){return new Ym(t,e,s,r,a)}static adagrad(t,e=.1){return new Xm(t,e)}},oT="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:n=>n();function Kg(){return new Promise(n=>oT(()=>n()))}function Ld(n,t){const e=n[0].length;n.forEach((r,a)=>{S(r.length===e,()=>`Error in concat${e}D: rank of tensors[${a}] must be the same as the rank of the rest (${e})`)}),S(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,a)=>{for(let o=0;o<e;o++)S(o===t||r[o]===s[o],()=>`Error in concat${e}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function ys(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}var qn=(()=>{return(n=qn||(qn={}))[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS",qn;var n})();function Xg(n,t,e){let s=new Array;if(null==e&&null==t)return s;if(null==t)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(null==e)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let r=1;r<e.length;++r){const a=e[r],o=s[s.length-e.length+r],i=s[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+n}] = ${a} but shape[${r+n}] = ${i}`)}else s[o]=a}return s}function Zg(n){const t={FIRST_DIM_SIZE:qn.FIRST_DIM_SIZE,VALUE_ROWIDS:qn.VALUE_ROWIDS,ROW_LENGTHS:qn.ROW_LENGTHS,ROW_SPLITS:qn.ROW_SPLITS,ROW_LIMITS:qn.ROW_LIMITS,ROW_STARTS:qn.ROW_STARTS},e=[];for(const s of n){if(!(s in t))break;e.push(t[s])}return e}function Yg(n){return 0===n.length?0:n[0]===qn.FIRST_DIM_SIZE?n.length-1:n.length}function Qg(n,t){if(null==n||null==t)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(e,s-1);++r){const a=n[r],o=t[r+1];if(a>=0&&o>=0&&1!==a&&a!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-n.length}] = ${a} but ragged tensor input.flatValues.shape[${r-n.length}] = ${o}`)}}const Vd=30;function fu(n){return n<=Vd?n:Ri(n,Math.floor(Math.sqrt(n)))}function Md(n,t,e){return[e*("number"==typeof n?n:n[0]),t*("number"==typeof n?n:n[1])]}function ei(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const a=t.length;for(let o=0;o<a;++o)r=r.concat([n[o+1]/t[o],t[o]]);r=r.concat(n.slice(a+1))}return r}function ti(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],a=[];for(let o=1;o<n;++o)o>=2*t+1||o%2==1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function ni(n,t,e,s=!0){const r=[];r.push(s?n[0]/e:n[0]*e);for(let a=1;a<n.length;++a)r.push(a<=t.length?s?t[a-1]*n[a]:n[a]/t[a-1]:n[a]);return r}function zd(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function Bd(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}function Wd(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(0===I(n.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,a=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=n.shape,l=r.slice();l.pop();let u=1;for(let h=a;h<e;++h)u*=i[h],l.push(i[h]);const c=[...Te(n.shape).map(h=>h/u),1].slice(0,a);return[l,o,u,c]}function Jg(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(a+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(a+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(a+" update.rank != "+(r+n.length-s));for(let o=0;o<r;++o)if(e.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${e.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<e.rank-r;++o)if(e.shape[o+r]!==n[o+s])throw new Error(a+` updates.shape[${o+r}] (${e.shape[o+r]}) != shape[${o+r}] (${n[o+r]})`)}function iT(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(0===e.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===n.size)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Jg(e,t,n)}function Or(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=e.length;let o=1;for(let h=r;h<a;++h)o*=e[h];const i=r<1?1:r;return{sliceRank:r,numUpdates:I(t.shape)/i,sliceSize:o,strides:[...Te(e.slice(0,r)),1],outputSize:I(e)}}const mu=1.7580993408473768,gu=1.0507009873554805,Ud=.3275911,Gd=.254829592,Hd=-.284496736,jd=1.421413741,qd=-1.453152027,Kd=1.061405429;function Vs(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(2*n.length);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function ey(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function ty(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function ny(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Xd(n,t){return{real:n[2*t],imag:n[2*t+1]}}function sy(n,t,e,s){n[2*s]=t,n[2*s+1]=e}function ry(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const a=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:e,imag:s}}function ay(n,t,e){const s=(e?2:-2)*Math.PI*(n/t);return{real:Math.cos(s),imag:Math.sin(s)}}const lT=/->/g;function Yd(n,t){const e=((n=n.replace(/\s/g,"")).length-n.replace(lT,"").length)/"->".length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=n.split("->");S(-1===s.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const a=s.split(","),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const p=r[d];if(!a.some(f=>-1!==f.indexOf(p)))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);-1===i.indexOf(p)&&i.push(p)}for(let d=0;d<s.length;++d){const p=s[d];-1===i.indexOf(p)&&","!==p&&i.push(p)}const l=new Array(a.length);for(let d=0;d<o;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<a[d].length;++p)l[d].push(i.indexOf(a[d][p]))}const u=i.length,h=[];for(let d=r.length;d<u;++d)h.push(d);return{allDims:i,summedDims:h,idDims:l}}function Qd(n,t){let e=new Array(n);e.fill(-1);for(let r=0;r<t.length;++r)e[t[r]]=r;const s=[];for(let r=0;r<n;++r)-1===e[r]&&s.push(r);return e=e.filter(r=>-1!==r),{permutationIndices:e,expandDims:s}}function Jd(n,t,e){const s=new Array(n);for(let r=0;r<e.length;++r){const a=e[r].shape;for(let o=0;o<t[r].length;++o)void 0===s[t[r][o]]?s[t[r][o]]=a[o]:S(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function ep(n,t){const e=n,s=[];let r=0;0===n.length&&e.push(-1),r=n.length+1;for(let o=0;o<r;++o)s.push([]);const a=[];for(let o=0;o<e.length;++o){const l=uT(t,e[o]);for(const u of l)-1===a.indexOf(u)&&(s[o].push(u),a.push(u))}return{path:e,steps:s}}function tp(n){return n.every((t,e)=>t===e)}function uT(n,t){const e=[];for(let s=0;s<n.length;++s)(0===n[s].length||-1!==n[s].indexOf(t)||-1===t)&&e.push(s);return e}function np(n,t,e=0){let s=[];if("number"==typeof t)S(n.shape[e]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{S(t.reduce((o,i)=>(-1===i&&(o+=1),o),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const o=t.reduce((i,l)=>l>0?i+l:i);t[a]=n.shape[e]-o}S(n.shape[e]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function ly(n){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${n}`}function uy(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function cy(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}function hy(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function dy(n,t){return`size ${n} must be non-negative, not ${t}`}function py(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function fy(n,t){return`Input to reshape is a SparseTensor with ${I(n)}\n  dense values, but the requested shape requires a multiple of ${I(t)}. inputShape=${n} outputShape= ${t}`}function my(n,t){return`Input to reshape is a tensor with ${I(n)} dense values, but the requested shape has ${I(t)}. inputShape=${n} outputShape=${t}`}function sp(){return"segment ids must be >= 0"}function gy(){return"segment ids are not increasing"}function yy(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function xy(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}function by(n,t){let s,e=!1;for(n<=Vd?(s=n,e=!0):s=Ri(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Ri(n,s+1);return s}function wy(n,t,e){const s=[],r=n.length;for(let a=0;a<r;a++)s.push(a!==t?n[a]:e);return s}function rp(n,t,e,s){const r=t.shape.length,a=n.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let h=0;h<s;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=n.shape[e],i=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)i.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<e;h++)i.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<r;h++)i.push(t.shape[h]);for(let h=e+1;h<a;h++)i.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function Ms(n){try{return n.map(t=>Es(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function vy(n){return n.map(t=>$s(t))}function Iy(n,t){const e=[];for(let a=0;a<t.length;a++)t[a]&&e.push(a);const s=je(n,"int32"),r=je([e.length,n.length],"int32");for(let a=0;a<e.length;a++){const o=s.indexToLoc(e[a]);r.values.set(o,a*n.length)}return r.toTensor()}!function VI(){for(const n of LI)te(n)}();const Sy={kernelName:Pi,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,Jo(me(e,"float32"),-1))}}},cT={kernelName:Va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=pt(me(e,"float32")),r=fn(Ie(Me(1),s));return xt(_e(n,r))}}}},hT={kernelName:Ma,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=fn(Ie(pt(me(e,"float32")),1));return _e(n,s)}}}},dT={kernelName:ea,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=ze(e.shape,s.shape);return{a:()=>{let i=n;const l=Bt(e.shape,r);return l.length>0&&(i=Se(i,l)),F(i,e.shape)},b:()=>{let i=n;const l=Bt(s.shape,r);return l.length>0&&(i=Se(i,l)),F(i,s.shape)}}}},pT={kernelName:$c,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}},fT={kernelName:Li,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Qe(e)}}},mT={kernelName:Vi,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Qe(e)}}},gT={kernelName:za,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>_e(n,fn(Ie(Me(1),pt(me(e,"float32")))))}}},yT={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=fn(oe(Me(1),pt(me(e,"float32"))));return _e(n,s)}}}},xT={kernelName:Ga,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=ze(e.shape,s.shape);return{a:()=>{const i=oe(pt(e),pt(s));let l=D(n,_e(s,i));const u=Bt(e.shape,r);return u.length>0&&(l=Se(l,u)),F(l,e.shape)},b:()=>{const i=oe(pt(e),pt(s));let l=xt(D(n,_e(e,i)));const u=Bt(s.shape,r);return u.length>0&&(l=Se(l,u)),F(l,s.shape)}}}},bT={kernelName:Wa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>_e(n,oe(pt(me(e,"float32")),1))}}},wT={kernelName:Ua,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>_e(n,Ie(Me(1),pt(me(e,"float32"))))}}},IT=O({avgPool3dGrad_:function vT(n,t,e,s,r,a){const o=N(n,"dy","avgPool3dGrad"),i=N(t,"input","avgPool3dGrad");let l=o,u=i,c=!1;4===i.rank&&(c=!0,l=F(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),S(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),S(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),mn("avgPool3dGrad",r,a);const p=R.runKernel(Rc,{dy:l,input:u},{filterSize:e,strides:s,pad:r,dimRoundingMode:a});return c?F(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ST={kernelName:zi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=e;return{x:()=>IT(n,s,r,a,o,i)}}},NT=O({avgPoolGrad_:function CT(n,t,e,s,r){const a=N(n,"dy","avgPoolGrad"),o=N(t,"input","avgPoolGrad");S(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,u=!1;3===o.rank&&(u=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),S(4===i.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const d=R.runKernel(Ac,{dy:l,input:i},{filterSize:e,strides:s,pad:r});return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),kT={kernelName:Mi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:a,pad:o}=e;return{x:()=>NT(n,s,r,a,o)}}},TT={kernelName:Bi,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:a,transposeB:o}=e;return a||o?!a&&o?{a:()=>st(n,r,!1,!1),b:()=>st(n,s,!0,!1)}:a&&!o?{a:()=>st(r,n,!1,!0),b:()=>st(s,n,!1,!1)}:{a:()=>st(r,n,!0,!0),b:()=>st(n,s,!0,!0)}:{a:()=>st(n,r,!1,!0),b:()=>st(s,n,!0,!1)}}},ap=O({spaceToBatchND_:function _T(n,t,e){const s=N(n,"x","spaceToBatchND");return S(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),S(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),S(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+e[l-1][0]+e[l-1][1])%t[l-1]==0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`),R.runKernel(El,{x:s},{blockShape:t,paddings:e})}}),$T={kernelName:Wi,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>ap(n,s,r)}}},ET={kernelName:"BroadcastTo",gradFunc:(n,t,e)=>{const r=e.inputShape,a=e.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>Se(n,i,!0)}}},DT={kernelName:Ha,gradFunc:n=>({x:()=>n.clone()})},AT={kernelName:ja,gradFunc:n=>({x:()=>Qe(n)})},RT={kernelName:qa,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=e;return{x:()=>gn(Os(Er(s,r),ma(s,a)),n,Qe(n))}}},OT={kernelName:Ui,inputsToSave:["x"],gradFunc:Sy.gradFunc},FT={kernelName:Gi,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:r}=e,a=ke(r,t[0].shape)[0],o=s.map(l=>l[a]);return Pn(n,o,a).map(l=>()=>l)}},PT={kernelName:Hi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=e;return S(Ys(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>cd(s.shape,n,r,o,i,l),filter:()=>$d(s,n,r.shape,o,i,l)}}},LT={kernelName:ji,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=e;return{dy:()=>$r(n,r,a,o,i,1,l),filter:()=>$d(n,s,r.shape,a,o,i,l)}}},MT=O({conv3DBackpropFilter_:function VT(n,t,e,s,r){let a=n;4===n.rank&&(a=F(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let o=t;return 4===o.rank&&(o=F(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),S(5===a.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),S(5===o.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),S(5===e.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),S(a.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${e[3]}.`),S(o.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${e[4]}).`),R.runKernel(Lc,{x:a,dy:o},{strides:s,pad:r,filterShape:e})}}),zT={kernelName:qi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:a}=e;S(Ys(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,i]=t;return{x:()=>vg(o.shape,n,i,r,a),filter:()=>MT(o,n,i.shape,r,a)}}},Cy=O({sin_:function BT(n){const e={x:N(n,"x","sin","float32")};return R.runKernel(So,e)}}),WT={kernelName:Ka,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(xt(Cy(me(e,"float32"))),n)}}},Ny=O({sinh_:function UT(n){const e={x:N(n,"x","sinh")};return R.runKernel(Co,e)}}),GT={kernelName:Xa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(Ny(me(e,"float32")),n)}}},ky=O({cumsum_:function HT(n,t=0,e=!1,s=!1){const a={x:N(n,"x","cumsum")};return R.runKernel(Ki,a,{axis:t,exclusive:e,reverse:s})}}),jT={kernelName:Ki,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:a,reverse:o}=e;return{x:()=>{const i=kt([r],s.rank);let l=ky(n,r,a,!o);return null!=i&&(l=Je(l,i)),l}}}},qT={kernelName:Xi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:o}=e,i=null==s?[1,1]:s;S(Ys(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[l,u]=t;return S(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),S(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),S(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),S(sn(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),mn("depthwiseConv2d",a,o),{x:()=>Fg(l.shape,n,u,r,a,i,o),filter:()=>Og(l,n,u.shape,r,a,i,o)}}},KT={kernelName:Zi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,a={x:s,filter:r,dy:n},o={x:s,filter:r,dy:n};return{x:()=>R.runKernel(Hc,a,e),filter:()=>R.runKernel(jc,o,e)}}},XT={kernelName:Ya,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>R.runKernel(qc,s)}}},ZT={kernelName:Qa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=D(Gn(xt(pt(e))),2/Math.sqrt(Math.PI));return{x:()=>D(n,s)}}},YT={kernelName:Ja,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,e)}}},QT={kernelName:Qi,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>F(n,e.shape)}}},JT={kernelName:eo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,Gn(e))}}},e_={kernelName:to,gradFunc:n=>({x:()=>Qe(n)})},t_={kernelName:no,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=ze(e.shape,s.shape);return{a:()=>{const i=_e(n,me(s,"float32")),l=Bt(e.shape,r);return l.length>0?F(Se(i,l),e.shape):i},b:()=>{let i=D(n,me(e,"float32"));const l=Bt(s.shape,r);l.length>0&&(i=F(Se(i,l),s.shape));const u=pt(s);return xt(_e(i,me(u,"float32")))}}}},Ty=O({rsqrt_:function n_(n){const e={x:N(n,"x","rsqrt","float32")};return R.runKernel(vo,e)}}),s_={kernelName:Ji,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,a,o,i]=t,l=null==i?Me(1):i,u=Bt(a.shape,r.shape),c=[];if(1===a.rank){for(let w=0;w<r.shape.length-1;++w)c.push(r.shape[w]);c.push(1)}const h=Ie(r,a),d=D(n,l),p=Ty(oe(o,Me(s))),f=D(D(D(p,p),p),Me(-.5));return{x:()=>F(D(D(n,1===a.rank?ts(F(p,[1,1,1,a.shape[0]]),c):p),l),r.shape),mean:()=>{let w=D(D(p,Me(-1)),d);return 1===a.rank&&(w=Se(w,u)),F(w,a.shape)},variance:()=>{let w=D(D(f,h),d);return 1===a.rank&&(w=Se(w,u)),F(w,a.shape)},scale:()=>{const w=D(h,p);let v=D(n,w);return 1===a.rank&&(v=Se(v,u)),F(v,a.shape)},offset:()=>{let w=n;return 1===a.rank&&(w=Se(w,u)),F(w,a.shape)}}}},_y=O({unsortedSegmentSum_:function r_(n,t,e){const s=N(n,"x","unsortedSegmentSum"),r=N(t,"segmentIds","unsortedSegmentSum","int32");return S(We(e),()=>"numSegments must be of dtype int"),R.runKernel(Fl,{x:s,segmentIds:r},{numSegments:e})}}),a_={kernelName:el,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:a}=e,o=ke(a,s.shape)[0];return{x:()=>{const l=s.shape,u=r.size,c=l.slice(0,o),h=c.length,d=l.slice(a,l.length).slice(1),p=d.length,f=$y(0,h),g=$y(h+1,h+1+p),m=Ey([c,[u],d]),y=F(n,m),x=F(r,[u]),b=Ey([[h],f,g]),w=Je(y,b);let v=_y(w,x,s.shape[o]);const C=Qs(b);return v=Je(v,C),v},indices:()=>r}}};function $y(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function Ey(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}const o_={kernelName:so,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Qe(e),b:()=>Qe(s)}}},i_={kernelName:ro,gradFunc:n=>({x:()=>me(n,"float32")})},l_={kernelName:ao,gradFunc:n=>({x:()=>Qe(n)})},u_={kernelName:oo,gradFunc:n=>({x:()=>Qe(n)})},c_={kernelName:lo,gradFunc:n=>({x:()=>Qe(n)})},h_={kernelName:nl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,a=Fn(s,0);return{x:()=>gn(a,n,D(n,r))}}},d_={kernelName:co,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>_e(n,oe(e,1))}}},p_={kernelName:uo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>_e(n,me(e,"float32"))}}},f_={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const o=Gn(s);return Ie(n,D(Se(n,r,!0),o))}}}},g_=O({localResponseNormalizationBackprop_:function m_(n,t,e,s=5,r=1,a=1,o=.5){return R.runKernel(Jc,{x:n,y:t,dy:e},{depthRadius:s,bias:r,alpha:a,beta:o})}}),y_={kernelName:ll,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=e;return{x:()=>g_(s,r,n,a,o,i,l)}}};function Dy(n,t,e,s){return t.rank<e.rank&&(t=F(t,Pt(t.shape,s))),n.rank<e.rank&&(n=F(n,Pt(n.shape,s))),{x:()=>D(n,me(ms(e,t),n.dtype))}}const Ay={kernelName:ul,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,a=t[0],l=Dy(n,t[1],a,ke(r,a.shape));return{x:()=>l.x()}}},x_={kernelName:ho,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>D(n,me(Er(e,s),"float32")),b:()=>D(n,me(du(e,s),"float32"))}}},w_=O({maxPool3dGrad_:function b_(n,t,e,s,r,a,o){const i=N(n,"dy","maxPool3dGrad"),l=N(t,"input","maxPool3dGrad"),u=N(e,"output","maxPool3dGrad");let c=i,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=F(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=F(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=F(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),S(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),S(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),S(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),mn("maxPool3dGrad",a,o);const m=R.runKernel(th,{dy:c,input:h,output:d},{filterSize:s,strides:r,pad:a,dimRoundingMode:o});return p?F(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),v_={kernelName:hl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=e;return{x:()=>w_(n,s,r,a,o,i,l)}}},S_=O({maxPoolGrad_:function I_(n,t,e,s,r,a,o){const i=N(n,"dy","maxPoolGrad"),l=N(t,"input","maxPoolGrad"),u=N(e,"output","maxPoolGrad");return S(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),S(4===i.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),S(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),mn("maxPoolGrad",a,o),R.runKernel(eh,{dy:i,input:l,output:u},{filterSize:s,strides:r,pad:a,dimRoundingMode:o})}}),C_={kernelName:cl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:a,strides:o,pad:i}=e;return{x:()=>S_(n,s,r,a,o,i)}}},N_={kernelName:dl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,a=ke(r,s.shape),l=I(Yt(s.shape,a)[1]);return{x:()=>{const c=s.shape.slice();a.forEach(p=>{c[p]=1});const h=F(n,c);return _e(D(h,Js(s.shape,"float32")),l)}}}},k_={kernelName:pl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[a,o]=t,l=Dy(n,o,a,ke(r,a.shape));return{x:()=>l.x()}}},T_={kernelName:po,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>D(n,me(ma(e,s),"float32")),b:()=>D(n,me(Fn(e,s),"float32"))}}},__={kernelName:fl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,a=r.map(o=>o[0]);return{x:()=>lt(n,a,s.shape)}}},$_={kernelName:fo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=ze(e.shape,s.shape);return{a:()=>{const i=Bt(e.shape,r);return i.length>0?F(Se(n,i),e.shape):n},b:()=>{const i=D(n,xt(nu(_e(e,s)))),l=Bt(s.shape,r);return l.length>0?F(Se(i,l),s.shape):i}}}},E_={kernelName:mo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=ze(e.shape,s.shape);return{a:()=>{const i=D(n,me(s,"float32")),l=Bt(e.shape,r);return l.length>0?F(Se(i,l),e.shape):i},b:()=>{const i=D(n,me(e,"float32")),l=Bt(s.shape,r);return l.length>0?F(Se(i,l),s.shape):i}}}},D_={kernelName:ml,gradFunc:n=>({x:()=>xt(n)})},A_={kernelName:xl,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Wt(e.shape,"float32")}}},R_={kernelName:yl,gradFunc:n=>({x:()=>Qe(n)})},O_={kernelName:bl,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Ar(n,s).map(a=>()=>a)}},Ry={kernelName:wl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,a=r.map(o=>o[0]);return{x:()=>lt(n,a,s.shape)}}},F_={kernelName:go,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,a=e,o=s,i=ze(a.shape,o.shape);return{a:()=>{const c=me(o,"float32");let h=D(n,D(c,la(a,Ie(c,Me(1)))));const d=Bt(a.shape,i);return d.length>0&&(h=Se(h,d)),F(h,a.shape)},b:()=>{const c=Fn(a,0),h=gn(c,Hn(a),Qe(a));let d=D(n,D(r,h));const p=Bt(o.shape,i);return p.length>0&&(d=Se(d,p)),F(d,o.shape)}}}},P_={kernelName:vl,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=Fn(e,0);return{x:()=>gn(r,n,D(n,s)),alpha:()=>{let a=gn(r,Qe(n),D(n,e));const o=Bt(s.shape,n.shape);return o.length>0&&(a=Se(a,o)),F(a,s.shape)}}}},op=O({cumprod_:function L_(n,t=0,e=!1,s=!1){const a={x:N(n,"x","cumprod")};return R.runKernel(Mc,a,{axis:t,exclusive:e,reverse:s})}});const z_={kernelName:Il,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;let a=[];return a=null==r?s.shape.map((o,i)=>i):"number"==typeof r?[r]:r,{x:()=>function M_(n,t,e){const s=n.shape.length,r=s-e.length,a=kt(e,s);let o=n;null!=a&&(o=Je(n,a));const i=o.shape.slice(),u=i.splice(s-e.length,e.length).reduce((d,p)=>d*p,1);i.push(u);let h=function V_(n,t,e){const s=n.shape.slice();s[e]=1;const r=F(t,s),a=op(n,e,!0,!1),o=op(n,e,!0,!0),i=D(a,o);return D(r,i)}(o.reshape(i),t,r);if(h=h.reshape(o.shape),null!=a){const d=Qs(a);h=Je(h,d)}return h}(s,n,a)}}},B_={kernelName:Za,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=ze(e.shape,s.shape);return{a:()=>{const i=_e(n,me(s,"float32")),l=Bt(e.shape,r);return l.length>0?F(Se(i,l),e.shape):i},b:()=>{let i=D(n,me(e,"float32"));const l=Bt(s.shape,r);l.length>0&&(i=F(Se(i,l),s.shape));const u=pt(s);return xt(_e(i,me(u,"float32")))}}}},W_={kernelName:yo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>_e(n,xt(pt(e)))}}},U_={kernelName:bo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=D(ma(e,6),Jo(e));return{x:()=>D(n,me(s,"float32"))}}},G_={kernelName:xo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,me(Jo(e),"float32"))}}},H_={kernelName:Sl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>F(n,e.shape)}}},j_={kernelName:Nl,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>R.runKernel(lh,r,e)}}},q_={kernelName:Cl,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>R.runKernel(ih,r,e)}}},K_={kernelName:kl,gradFunc:(n,t,e)=>{const{dims:s}=e,r=ke(s,n.shape);return{x:()=>Dr(n,r)}}},X_={kernelName:wo,gradFunc:n=>({x:()=>Qe(n)})},Z_={kernelName:vo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>xt(_e(n,D(la(e,1.5),2)))}}},ip=O({logicalNot_:function Y_(n){const e={x:N(n,"x","logicalNot","bool")};return R.runKernel(ol,e)}}),Q_={kernelName:Tl,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>me(Qe(e),"float32"),t:()=>D(n,me(e,n.dtype)),e:()=>D(n,me(ip(e),n.dtype))}}},J_={kernelName:Io,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Fn(e,Me(0)),r=Me(mu),a=Me(gu),o=D(n,a),i=D(D(n,r),Gn(me(e,"float32")));return gn(s,o,i)}}}},e$={kernelName:ko,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,D(e,Ie(Me(1),e)))}}},t$={kernelName:No,gradFunc:n=>({x:()=>Qe(n)})},lp=O({cos_:function n$(n){const e={x:N(n,"x","cos","float32")};return R.runKernel(Ka,e)}}),s$={kernelName:So,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(lp(me(e,"float32")),n)}}},Oy=O({cosh_:function r$(n){const e={x:N(n,"x","cosh","float32")};return R.runKernel(Xa,e)}}),a$={kernelName:Co,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(Oy(me(e,"float32")),n)}}},o$={kernelName:_l,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:a}=e,o=s.shape,[i,l]=Ql(s,r,a),u=[];for(let c=0;c<n.rank;c++)u.push([i[c],o[c]-i[c]-l[c]]);return{x:()=>yd(n,u)}}},i$={kernelName:Al,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,o=D(n,s);return{logits:()=>Ie(o,D(Se(o,[r],!0),s))}}},l$={kernelName:To,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,pa(e))}}},up=O({batchToSpaceND_:function u$(n,t,e){const s=N(n,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);return S(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),S(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),S(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`),R.runKernel(Wi,{x:s},{blockShape:t,crops:e})}}),Fy={kernelName:El,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>up(n,s,r)}}},Py={kernelName:Dl,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>ln(n,s)}}},C$=[Sy,cT,hT,dT,pT,fT,mT,gT,yT,xT,bT,wT,ST,kT,TT,$T,ET,DT,AT,RT,OT,FT,LT,PT,zT,WT,GT,jT,qT,KT,B_,XT,ZT,YT,QT,JT,t_,e_,s_,a_,o_,i_,l_,u_,c_,h_,d_,p_,f_,y_,Ay,Ay,x_,v_,C_,N_,k_,T_,__,$_,E_,D_,A_,R_,O_,Ry,Ry,F_,P_,z_,W_,U_,G_,H_,j_,q_,K_,X_,Z_,Q_,J_,e$,t$,s$,a$,o$,i$,l$,Fy,Fy,Py,Py,{kernelName:_o,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>_e(n,D(fn(me(e,"float32")),2))}}},{kernelName:$o,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Me(2);return{a:()=>D(n,D(r,Ie(e,s))),b:()=>D(n,D(r,Ie(s,e)))}}},{kernelName:ph,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,D(me(e,"float32"),2))}}},{kernelName:Oo,gradFunc:n=>({x:()=>Qe(n)})},{kernelName:Eo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=ze(e.shape,s.shape);return{a:()=>{let i=n;const l=Bt(e.shape,r);return l.length>0&&(i=Se(i,l)),F(i,e.shape)},b:()=>{let i=n;const l=Bt(s.shape,r);return l.length>0&&(i=Se(i,l)),F(xt(i),s.shape)}}}},{kernelName:$l,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:a}=e;ke(a,s.shape).forEach(u=>{r[u]=1});const i=F(n,r),l=D(i,Js(s.shape,"float32"));return{x:()=>l}}},{kernelName:Do,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>_e(n,pt(lp(e)))}}},{kernelName:Ao,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(Ie(Me(1),pt(e)),n)}}},{kernelName:Ro,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let o=Qe(s);if(1===s.rank)for(let i=0;i<r[0];++i)o=oe(o,lt(n,[i*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=oe(o,lt(n,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)o=oe(o,lt(n,[i*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)o=oe(o,lt(n,[i*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return o}}}},{kernelName:ta,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,a=Qs(r);return{x:()=>Je(n,a)}}},{kernelName:Ol,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>Ps(n,r)}}},{kernelName:Fl,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>function I$(n,t){const e=Xs(t,Qe(t)),s=hd(n,e);let r=Er(t,Me(0,"int32"));const a=s.rank-r.rank;for(let i=0;i<a;++i)r=kn(r,i+1);r=Os(r,Js(s.shape,"bool"));const o=Qe(s);return gn(r,s,o)}(n,e)}}},{kernelName:Pl,gradFunc:n=>({x:()=>Qe(n)})}];for(const n of C$)Cv(n);q().prototype.abs=function(){return this.throwIfDisposed(),Xt(this)};const k$=O({acos_:function N$(n){const e={x:N(n,"x","acos")};return R.runKernel(Va,e)}});q().prototype.acos=function(){return this.throwIfDisposed(),k$(this)};const _$=O({acosh_:function T$(n){const e={x:N(n,"x","acosh")};return R.runKernel(Ma,e)}});q().prototype.acosh=function(){return this.throwIfDisposed(),_$(this)},q().prototype.add=function(n){return this.throwIfDisposed(),oe(this,n)},q().prototype.all=function(n,t){return this.throwIfDisposed(),xg(this,n,t)},q().prototype.any=function(n,t){return this.throwIfDisposed(),od(this,n,t)},q().prototype.argMax=function(n){return this.throwIfDisposed(),Go(this,n)};const E$=O({argMin_:function $$(n,t=0){const s={x:N(n,"x","argMin")};return R.runKernel(Vi,s,{axis:t})}});q().prototype.argMin=function(n){return this.throwIfDisposed(),E$(this,n)},q().prototype.asScalar=function(){return this.throwIfDisposed(),S(1===this.size,()=>"The array must have only 1 element."),F(this,[])},q().prototype.asType=function(n){return this.throwIfDisposed(),me(this,n)},q().prototype.as1D=function(){return this.throwIfDisposed(),F(this,[this.size])},q().prototype.as2D=function(n,t){return this.throwIfDisposed(),F(this,[n,t])},q().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),F(this,[n,t,e])},q().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),F(this,[n,t,e,s])},q().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),F(this,[n,t,e,s,r])};const A$=O({asin_:function D$(n){const e={x:N(n,"x","asin")};return R.runKernel(za,e)}});q().prototype.asin=function(){return this.throwIfDisposed(),A$(this)};const O$=O({asinh_:function R$(n){const e={x:N(n,"x","asinh")};return R.runKernel(Ba,e)}});q().prototype.asinh=function(){return this.throwIfDisposed(),O$(this)};const P$=O({atan_:function F$(n){const e={x:N(n,"x","atan")};return R.runKernel(Wa,e)}});q().prototype.atan=function(){return this.throwIfDisposed(),P$(this)};const V$=O({atan2_:function L$(n,t){let e=N(n,"a","atan2"),s=N(t,"b","atan2");return[e,s]=At(e,s),R.runKernel(Ga,{a:e,b:s})}});q().prototype.atan2=function(n){return this.throwIfDisposed(),V$(this,n)};const z$=O({atanh_:function M$(n){const e={x:N(n,"x","atanh")};return R.runKernel(Ua,e)}});q().prototype.atanh=function(){return this.throwIfDisposed(),z$(this)},q().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),ud(this,n,t,e,s)},q().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),up(this,n,t)},q().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),Jl(this,n,t,e,s,r)},q().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Ko(this,n)},q().prototype.cast=function(n){return this.throwIfDisposed(),me(this,n)};const W$=O({ceil_:function B$(n){const e={x:N(n,"x","ceil","float32")};return R.runKernel(ja,e)}});q().prototype.ceil=function(){return this.throwIfDisposed(),W$(this)},q().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),On(this,n,t)},q().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Ot&&(n=[n]),ln([this,...n],t)},q().prototype.conv1d=function(n,t,e,s,r,a){return this.throwIfDisposed(),bg(this,n,t,e,s,r,a)},q().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),wg(this,n,t,e,s,r)},q().prototype.conv2d=function(n,t,e,s,r,a){return this.throwIfDisposed(),$r(this,n,t,e,s,r,a)},q().prototype.cos=function(){return this.throwIfDisposed(),lp(this)},q().prototype.cosh=function(){return this.throwIfDisposed(),Oy(this)},q().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),op(this,n,t,e)},q().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),ky(this,n,t,e)};const G$=O({depthToSpace_:function U$(n,t,e="NHWC"){const s=N(n,"x","depthToSpace","float32"),r="NHWC"===e?s.shape[1]:s.shape[2],a="NHWC"===e?s.shape[2]:s.shape[3],o="NHWC"===e?s.shape[3]:s.shape[1];return S(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),S(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`),S(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`),S(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`),R.runKernel(Wc,{x:s},{blockSize:t,dataFormat:e})}});q().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),G$(this,n,t)},q().prototype.depthwiseConv2d=function(n,t,e,s,r,a){return this.throwIfDisposed(),eu(this,n,t,e,s,r,a)};const j$=O({dilation2d_:function H$(n,t,e,s,r=[1,1],a="NHWC"){const o=N(n,"x","dilation2d"),i=N(t,"filter","dilation2d");S(3===o.rank||4===o.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),S(3===i.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),S("NHWC"===a,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,u=!1;3===o.rank&&(l=F(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0),S(l.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${i.shape[2]}`);const d=R.runKernel(Zi,{x:l,filter:i},{strides:e,pad:s,dilations:r});return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});q().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),j$(this,n,t,e,s,r)};const K$=O({divNoNan_:function q$(n,t){let e=N(n,"a","div"),s=N(t,"b","div");[e,s]=At(e,s);const r=_e(e,s),a=Qe(r),o=ms(s,a);return gn(o,a,r)}});q().prototype.divNoNan=function(n){return this.throwIfDisposed(),K$(this,n)},q().prototype.div=function(n){return this.throwIfDisposed(),_e(this,n)};const Z$=O({dot_:function X$(n,t){const e=N(n,"t1","dot"),s=N(t,"t2","dot");S(!(1!==e.rank&&2!==e.rank||1!==s.rank&&2!==s.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=1===e.rank?e.size:e.shape[1],a=1===s.rank?s.size:s.shape[0];if(S(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),1===e.rank&&1===s.rank){const o=F(e,[1,-1]),i=F(s,[-1,1]),l=st(o,i);return F(l,[])}if(1===e.rank&&2===s.rank){const o=F(e,[1,-1]),i=F(s,[s.shape[0],s.shape[1]]),l=st(o,i);return F(l,[l.size])}if(2===e.rank&&1===s.rank){const o=F(s,[-1,1]),i=st(e,o);return F(i,[i.size])}{const o=F(s,[s.shape[0],s.shape[1]]);return st(e,o)}}});q().prototype.dot=function(n){return this.throwIfDisposed(),Z$(this,n)},q().prototype.elu=function(){return this.throwIfDisposed(),tu(this)},q().prototype.equal=function(n){return this.throwIfDisposed(),ms(this,n)};const Q$=O({erf_:function Y$(n){let t=N(n,"x","erf");return S("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=me(t,"float32")),R.runKernel(Qa,{x:t})}});q().prototype.erf=function(){return this.throwIfDisposed(),Q$(this)};const e2=O({euclideanNorm_:function J$(n,t=null,e=!1){return pu(n,"euclidean",t,e)}});q().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),e2(this,n,t)},q().prototype.exp=function(){return this.throwIfDisposed(),Gn(this)},q().prototype.expandDims=function(n){return this.throwIfDisposed(),kn(this,n)};const n2=O({expm1_:function t2(n){const e={x:N(n,"x","expm1")};return R.runKernel(eo,e)}});q().prototype.expm1=function(){return this.throwIfDisposed(),n2(this)},q().prototype.fft=function(){return this.throwIfDisposed(),Td(this)},q().prototype.flatten=function(){return this.throwIfDisposed(),F(this,[this.size])},q().prototype.floor=function(){return this.throwIfDisposed(),nu(this)},q().prototype.floorDiv=function(n){return this.throwIfDisposed(),qm(this,n)},q().prototype.gather=function(n,t,e){return this.throwIfDisposed(),hd(this,n,t,e)},q().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Er(this,n)},q().prototype.greater=function(n){return this.throwIfDisposed(),Fn(this,n)},q().prototype.ifft=function(){return this.throwIfDisposed(),ou(this)},q().prototype.irfft=function(){return this.throwIfDisposed(),Ag(this)};const r2=O({isFinite_:function s2(n){const e={x:N(n,"x","isFinite")};return R.runKernel(ao,e)}});q().prototype.isFinite=function(){return this.throwIfDisposed(),r2(this)};const o2=O({isInf_:function a2(n){const e={x:N(n,"x","isInf")};return R.runKernel(oo,e)}});q().prototype.isInf=function(){return this.throwIfDisposed(),o2(this)};const l2=O({isNaN_:function i2(n){const e={x:N(n,"x","isNaN")};return R.runKernel(lo,e)}});q().prototype.isNaN=function(){return this.throwIfDisposed(),l2(this)},q().prototype.leakyRelu=function(n){return this.throwIfDisposed(),dd(this,n)},q().prototype.lessEqual=function(n){return this.throwIfDisposed(),ma(this,n)},q().prototype.less=function(n){return this.throwIfDisposed(),du(this,n)};const c2=O({localResponseNormalization_:function u2(n,t=5,e=1,s=1,r=.5){const a=N(n,"x","localResponseNormalization");S(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),S(We(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;3===a.rank&&(i=!0,o=F(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const c=R.runKernel(ll,{x:o},{depthRadius:t,bias:e,alpha:s,beta:r});return i?F(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});q().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),c2(this,n,t,e,s)};const d2=O({logSigmoid_:function h2(n){const t=N(n,"x","logSigmoid");return Ds(s=>({value:xt(Yo(xt(s))),gradFunc:o=>D(o,pa(xt(s)))}))(t)}});q().prototype.logSigmoid=function(){return this.throwIfDisposed(),d2(this)},q().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Cg(this,n)},q().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),qg(this,n,t)},q().prototype.log=function(){return this.throwIfDisposed(),Hn(this)},q().prototype.log1p=function(){return this.throwIfDisposed(),pd(this)},q().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Os(this,n)},q().prototype.logicalNot=function(){return this.throwIfDisposed(),ip(this)};const Ly=O({logicalOr_:function p2(n,t){const e=N(n,"a","logicalOr","bool"),s=N(t,"b","logicalOr","bool");return ze(e.shape,s.shape),R.runKernel(il,{a:e,b:s})}});q().prototype.logicalOr=function(n){return this.throwIfDisposed(),Ly(this,n)};const m2=O({logicalXor_:function f2(n,t){const e=N(n,"a","logicalXor","bool"),s=N(t,"b","logicalXor","bool");return ze(e.shape,s.shape),Os(Ly(n,t),ip(Os(n,t)))}});q().prototype.logicalXor=function(n){return this.throwIfDisposed(),m2(this,n)},q().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),st(this,n,t,e)},q().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),fd(this,n,t,e,s)},q().prototype.max=function(n,t){return this.throwIfDisposed(),ns(this,n,t)},q().prototype.maximum=function(n){return this.throwIfDisposed(),Xs(this,n)},q().prototype.mean=function(n,t){return this.throwIfDisposed(),Ft(this,n,t)},q().prototype.min=function(n,t){return this.throwIfDisposed(),su(this,n,t)},q().prototype.minimum=function(n){return this.throwIfDisposed(),ha(this,n)};const y2=O({mirrorPad_:function g2(n,t,e){S("reflect"===e||"symmetric"===e,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=N(n,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");S(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r="reflect"===e?1:0;for(let i=0;i<s.rank;i++)S(2===t[i].length,()=>"Invalid number of paddings. Must be length of 2 each."),S(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);return R.runKernel(fl,{x:s},{paddings:t,mode:e})}});q().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),y2(this,n,t)};const b2=O({mod_:function x2(n,t){let e=N(n,"a","mod"),s=N(t,"b","mod");return[e,s]=At(e,s),R.runKernel(fo,{a:e,b:s})}});q().prototype.mod=function(n){return this.throwIfDisposed(),b2(this,n)},q().prototype.mul=function(n){return this.throwIfDisposed(),D(this,n)},q().prototype.neg=function(){return this.throwIfDisposed(),xt(this)},q().prototype.norm=function(n,t,e){return this.throwIfDisposed(),pu(this,n,t,e)},q().prototype.notEqual=function(n){return this.throwIfDisposed(),Xo(this,n)},q().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),kg(this,n,t,e)},q().prototype.onesLike=function(){return this.throwIfDisposed(),jn(this)},q().prototype.pad=function(n,t){return this.throwIfDisposed(),yd(this,n,t)};const S2=O({pool_:function w2(n,t,e,s,r,a,o){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=N(n,"x","maxPool");let l=i,u=!1;3===i.rank&&(u=!0,l=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(sn(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);const c=Un(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function I2(n,t){const s=n.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function v2(n,t,e){const s=e.map(c=>c[0]),r=e.map(c=>c[1]),a=n.concat(s,r),o=t.map((c,h)=>(c-a[h]%c)%c),i=r.map((c,h)=>c+o[h]),l=t.map((c,h)=>[s[h],i[h]]),u=t.map((c,h)=>[0,o[h]]);return[l,u]}([c.inHeight,c.inWidth],h,d),m=p?s:"valid",y=p?l:ap(l,h,f),b=("avg"===e?()=>ud(y,t,a,m,o):()=>fd(y,t,a,m,o))(),w=p?b:up(b,h,g);return u?F(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});q().prototype.pool=function(n,t,e,s,r,a){return this.throwIfDisposed(),S2(this,n,t,e,s,r,a)},q().prototype.pow=function(n){return this.throwIfDisposed(),la(this,n)},q().prototype.prelu=function(n){return this.throwIfDisposed(),xd(this,n)};const N2=O({prod_:function C2(n,t=null,e=!1){let s=N(n,"x","prod");return"bool"===s.dtype&&(s=me(s,"int32")),R.runKernel(Il,{x:s},{axis:t,keepDims:e})}});q().prototype.prod=function(n,t){return this.throwIfDisposed(),N2(this,n,t)};const T2=O({reciprocal_:function k2(n){const e={x:N(n,"x","reciprocal")};return R.runKernel(yo,e)}});q().prototype.reciprocal=function(){return this.throwIfDisposed(),T2(this)},q().prototype.relu=function(){return this.throwIfDisposed(),Fs(this)},q().prototype.relu6=function(){return this.throwIfDisposed(),Rg(this)},q().prototype.reshapeAs=function(n){return this.throwIfDisposed(),F(this,n.shape)},q().prototype.reshape=function(n){return this.throwIfDisposed(),F(this,n)},q().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),Bg(this,n,t,e)},q().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),Wg(this,n,t,e)},q().prototype.reverse=function(n){return this.throwIfDisposed(),Dr(this,n)},q().prototype.rfft=function(){return this.throwIfDisposed(),_d(this)},q().prototype.round=function(){return this.throwIfDisposed(),Ug(this)},q().prototype.rsqrt=function(){return this.throwIfDisposed(),Ty(this)},q().prototype.selu=function(){return this.throwIfDisposed(),_g(this)},q().prototype.separableConv2d=function(n,t,e,s,r,a){return this.throwIfDisposed(),$g(this,n,t,e,s,r,a)},q().prototype.sigmoid=function(){return this.throwIfDisposed(),pa(this)};const $2=O({sign_:function _2(n){const e={x:N(n,"x","sign")};return R.runKernel(No,e)}});q().prototype.sign=function(){return this.throwIfDisposed(),$2(this)},q().prototype.sin=function(){return this.throwIfDisposed(),Cy(this)},q().prototype.sinh=function(){return this.throwIfDisposed(),Ny(this)},q().prototype.slice=function(n,t){return this.throwIfDisposed(),lt(this,n,t)},q().prototype.softmax=function(n){return this.throwIfDisposed(),Cd(this,n)},q().prototype.softplus=function(){return this.throwIfDisposed(),Yo(this)},q().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),ap(this,n,t)},q().prototype.split=function(n,t){return this.throwIfDisposed(),Pn(this,n,t)},q().prototype.sqrt=function(){return this.throwIfDisposed(),fn(this)},q().prototype.square=function(){return this.throwIfDisposed(),pt(this)},q().prototype.squaredDifference=function(n){return this.throwIfDisposed(),jg(this,n)},q().prototype.squeeze=function(n){return this.throwIfDisposed(),Qo(this,n)},q().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof Ot?[this,n]:[this,...n];return Ps(e,t)},q().prototype.step=function(n){return this.throwIfDisposed(),Jo(this,n)};const D2=O({stridedSlice_:function E2(n,t,e,s,r=0,a=0,o=0,i=0,l=0){const c={x:N(n,"x","stridedSlice","string_or_numeric")};return R.runKernel(fh,c,{begin:t,end:e,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l})}});q().prototype.stridedSlice=function(n,t,e,s,r,a,o,i){return this.throwIfDisposed(),D2(this,n,t,e,s,r,a,o,i)},q().prototype.sub=function(n){return this.throwIfDisposed(),Ie(this,n)},q().prototype.sum=function(n,t){return this.throwIfDisposed(),Se(this,n,t)};const R2=O({tan_:function A2(n){const e={x:N(n,"x","tan","float32")};return R.runKernel(Do,e)}});q().prototype.tan=function(){return this.throwIfDisposed(),R2(this)},q().prototype.tanh=function(){return this.throwIfDisposed(),Nd(this)},q().prototype.tile=function(n){return this.throwIfDisposed(),ts(this,n)},q().prototype.toBool=function(){return this.throwIfDisposed(),me(this,"bool")},q().prototype.toFloat=function(){return this.throwIfDisposed(),me(this,"float32")},q().prototype.toInt=function(){return this.throwIfDisposed(),me(this,"int32")};const F2=O({topk_:function O2(n,t=1,e=!0){const s=N(n,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},o={k:t,sorted:e},[i,l]=R.runKernel(xh,a,o);return{values:i,indices:l}}});q().prototype.topk=function(n,t){return this.throwIfDisposed(),F2(this,n,t)},q().prototype.transpose=function(n){return this.throwIfDisposed(),Je(this,n)};const L2=O({unique_:function P2(n,t=0){const e=N(n,"x","unique","string_or_numeric");S(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[a,o]=R.runKernel(wh,s,r);return{values:a,indices:o}}});q().prototype.unique=function(n){return this.throwIfDisposed(),L2(this,n)},q().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),_y(this,n,t)},q().prototype.unstack=function(n){return this.throwIfDisposed(),Ar(this,n)},q().prototype.where=function(n,t){return this.throwIfDisposed(),gn(n,this,t)},q().prototype.zerosLike=function(){return this.throwIfDisposed(),Qe(this)};class xs extends Error{constructor(t){super(t),Object.setPrototypeOf(this,xs.prototype)}}class Kn extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kn.prototype)}}class A extends Error{constructor(t){super(t),Object.setPrototypeOf(this,A.prototype)}}class Ue extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ue.prototype)}}class cp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,cp.prototype)}}Error;class My{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}function Fr(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}{const e=new Array(t);return e.fill(n),e}}function Ln(n,t){if(!n)throw new cp(t)}function zy(n,t){let e=0;for(const s of n)s===t&&e++;return e}function In(n){return 1===n.length?n[0]:n}function ft(n){return Array.isArray(n)?n:[n]}function zs(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Pr(n){return n.length<=1||-1===n.indexOf("_")?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Xn={};function hp(n){if(null==n)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function dp(n){if(null!=n&&"object"==typeof n)if(Array.isArray(n))n.forEach(t=>dp(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];null!=s&&"object"==typeof s&&(Array.isArray(s)||"ndarray"!==s.type||"number"!=typeof s.value?dp(s):n[e]=s.value)}}}function si(n,t={},e={},s="object",r=!1){if("string"==typeof n){const a=n;let o;if(a in e)o=e[a];else if(a in Xn)o=Xn[a];else if(o=t[a],null==o)throw new A(`Unknown ${s}: ${n}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}{const a=n;if(null==a.className||null==a.config)throw new A(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const o=a.className;let i,l;if(o in e?[i,l]=e[o]:o in Xn?[i,l]=Xn.className:o in t&&([i,l]=t[o]),null==i)throw new A(`Unknown ${s}: ${o}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const u={};for(const p of Object.keys(Xn))u[p]=Xn[p];for(const p of Object.keys(e))u[p]=e[p];a.config.customObjects=u;const h=Object.assign({},Xn);for(const p of Object.keys(e))Xn[p]=e[p];dp(a.config);const d=l(i,a.config,e,r);return Xn=Object.assign({},h),d}{const u=Object.assign({},Xn);for(const h of Object.keys(e))Xn[h]=e[h];const c=new i(a.config);return Xn=Object.assign({},u),c}}}function yu(n,t){return-1*function V2(n,t){return n<t?-1:n>t?1:0}(n,t)}function er(n){if(null==n)return n;const t=[];for(const e of n)-1===t.indexOf(e)&&t.push(e);return t}function M2(n){if(null==n)throw new A(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function Lr(n,t,e){if(null!=e&&n.indexOf(e)<0)throw new A(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function pp(n,t,e=0,s=1/0){return Ln(e>=0),Ln(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function Qt(n,t){Array.isArray(n)?(S(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Qt(e,`element ${s+1} of ${t}`))):S(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${By(n)}.`)}function By(n){return null===n?"null":Array.isArray(n)?"["+n.map(t=>By(t)).join(",")+"]":"string"==typeof n?`"${n}"`:`${n}`}function Wy(n){return"relu"===n?"relu":"linear"===n?"linear":"elu"===n?"elu":null}let B2=0;function Uy(){return B2++}const xu={};function bu(n=""){return n in xu||(xu[n]=0),xu[n]+=1,n+xu[n].toString()}const W2=["channelsFirst","channelsLast"],U2=["nearest","bilinear"],G2=["valid","same","causal"],H2=["max","avg"],j2=["sum","mul","concat","ave"],ga=new Map;function Vt(n){Lr(W2,"DataFormat",n)}function Vn(n){Lr(G2,"PaddingMode",n)}function Gy(n){Lr(H2,"PoolMode",n)}const ri=[];function Vr(n,t){ri.push(n);try{const e=t();return ri.pop(),e}catch(e){throw ri.pop(),e}}function jy(n){if(!Ky(n))throw new Error("Not a valid tensor name: '"+n+"'");return function K2(){return 0===ri.length?"":ri.join("/")+"/"}()+n}function qy(n){if(!Ky(n))throw new Error("Not a valid tensor name: '"+n+"'");ga.has(n)||ga.set(n,0);const t=ga.get(n);if(ga.set(n,ga.get(n)+1),t>0){const e=`${n}_${t}`;return ga.set(e,1),e}return n}const X2=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ky(n){return!!n.match(X2)}function Z2(n){return n===parseInt(n.toString(),10)}function tr(n,t,e){null==t&&(t=0),null==e&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function ya(n){if(0===n.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function nr(n){if(0===n.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function ss(n,t){if(t<n)throw new A(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}let wu;function Ut(){return null==wu&&(wu=function CI(){return R.backend}().epsilon()),wu}function bs(n,t){return me(n,t)}function ai(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),F(n,e)}function Mr(n,t,e){return V(()=>{switch(n.rank){case 1:return Id(n,t,e);case 2:return Eg(n,[t,0],[e,n.shape[1]]);case 3:return Sd(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return ru(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return lt(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return lt(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new A(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function fp(n,t,e){return V(()=>{switch(n.rank){case 1:return Id(n,t,e);case 2:return Eg(n,[0,t],[n.shape[0],e]);case 3:return Sd(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return ru(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new A(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function vu(n,t,e,s){return V(()=>{switch(n.rank){case 1:return Id(n,t,e);case 2:switch(s){case 1:return Mr(n,t,e);case 2:return fp(n,t,e);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Mr(n,t,e);case 2:return Sd(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return fp(n,t,e);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Mr(n,t,e);case 2:return ru(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return ru(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return fp(n,t,e);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}default:throw new A(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function mp(n,t=-1){let e;return t<0&&(e=n[0].rank,t=0!==e?e:0),t===n[0].rank&&(t=-1),ln(n,t)}function Zy(n,t){switch(n.rank){case 1:return PS([n,t]);case 2:return VS([n,t],0);case 3:return zS([n,t],0);case 4:return WS([n,t],0);default:throw new A(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function gp(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new A(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return ts(n,t)}function Iu(n,t=0,e=1,s,r){return Tg(n,t,e,s,r)}function ws(n,t,e,s){if(n.rank<2||t.rank<2)throw new Ue(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3&&n.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Ue(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`);if(2===n.rank&&2===t.rank)return Pg({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?yp(n.rank,s,"channelsLast"):null,activation:e});{const r=n.shape.slice(),a=r.pop();n=F(n,[-1,a]);const o=t.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:t.rank},(f,g)=>0===g?t.rank-2:g<=t.rank-2?g-1:g);t=F(Je(t,c),[l,-1]);const h=[...r,...u];return F(Pg({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?yp(n.rank,s,"channelsLast"):null,activation:e}),h)}}function Yy(n,t,e){return V(()=>(t=Array.isArray(t)?Tn(t,"int32"):me(t,"int32"),hd(n,t,e)))}function oi(n){return D(n,n)}function yp(n,t,e){const s=t.shape;if(1!==t.rank&&t.rank!==n)throw new A(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(5===n){if("channelsFirst"===e)return F(t,1===s.length?[1,s[0],1,1,1]:[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===e)return F(t,1===s.length?[1,1,1,1,s[0]]:[1].concat(s))}else if(4===n){if("channelsFirst"===e)return F(t,1===s.length?[1,s[0],1,1]:[1,s[2],s[0],s[1]]);if("channelsLast"===e)return F(t,1===s.length?[1,1,1,s[0]]:[1].concat(s))}else if(3===n){if("channelsFirst"===e)return F(t,1===s.length?[1,s[0],1]:[1,s[1],s[0]]);if("channelsLast"===e)return F(t,1===s.length?[1,1,s[0]]:[1].concat(s))}else if(n<3)return t;throw new A(`Unsupported input rank by biasAdd: ${t.rank}`)}function as(n,t,e){return V(()=>(null==e&&(e="channelsLast"),Vt(e),oe(n,yp(n.rank,t,e))))}function Qy(n,t,e,s){return V(()=>lN(n,t,e,s))}function ii(n,t,e=!1){return e?n():t()}const aE=["fanIn","fanOut","fanAvg"],oE=["normal","uniform","truncatedNormal"];class Zn extends kr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}te((()=>{class n extends Zn{apply(e,s){return Wt(e,s)}}return n.className="Zeros",n})());let Jy=(()=>{class n extends Zn{apply(e,s){return Js(e,s)}}return n.className="Ones",n})();te(Jy),te((()=>{class n extends Zn{constructor(e){if(super(),"object"!=typeof e)throw new A(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new A(`config must have value set but got ${e}`);this.value=e.value}apply(e,s){return V(()=>D(Me(this.value),Js(e,s)))}getConfig(){return{value:this.value}}}return n.className="Constant",n})()),te((()=>{class n extends Zn{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,s){return da(e,this.minval,this.maxval,s,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return n.className="RandomUniform",n})()),te((()=>{class n extends Zn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ue(`randomNormal does not support dType ${s}.`);return Iu(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="RandomNormal",n})()),te((()=>{class n extends Zn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ue(`truncatedNormal does not support dType ${s}.`);return Dg(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="TruncatedNormal",n})()),te((()=>{class n extends Zn{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,s){return V(()=>{if(2!==e.length||e[0]!==e[1])throw new A("Identity matrix initializer can only be used for 2D square matrices.");return D(this.gain,Sg(e[0]))})}getConfig(){return{gain:this.gain}}}return n.className="Identity",n})());let Mn=(()=>{class n extends Zn{constructor(e){if(super(),e.scale<0)throw new A(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function iE(n){Lr(aE,"FanMode",n)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function lE(n){Lr(oE,"Distribution",n)}(this.distribution),this.seed=e.seed}apply(e,s){const r=function uE(n,t="channelsLast"){let e,s;if(Vt(t),2===n.length)e=n[0],s=n[1];else if(-1!==[3,4,5].indexOf(n.length)){if("channelsFirst"===t){const r=tr(n,2);e=n[1]*r,s=n[0]*r}else if("channelsLast"===t){const r=tr(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=tr(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}(e),a=r[0],o=r[1];let i=this.scale;if(i/="fanIn"===this.mode?Math.max(1,a):"fanOut"===this.mode?Math.max(1,o):Math.max(1,(a+o)/2),"normal"===this.distribution){const l=Math.sqrt(i);if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ue(`${this.getClassName()} does not support dType ${s}.`);return Dg(e,0,l,s,this.seed)}{const l=Math.sqrt(3*i);return da(e,-l,l,s,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return n.className="VarianceScaling",n})();te(Mn);let ex=(()=>{class n extends Mn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Mn.className}}return n.className="GlorotUniform",n})();te(ex);let tx=(()=>{class n extends Mn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Mn.className}}return n.className="GlorotNormal",n})();te(tx);let nx=(()=>{class n extends Mn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Mn.className}}return n.className="HeNormal",n})();te(nx);let sx=(()=>{class n extends Mn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Mn.className}}return n.className="HeUniform",n})();te(sx);let rx=(()=>{class n extends Mn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Mn.className}}return n.className="LeCunNormal",n})();te(rx);let ax=(()=>{class n extends Mn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Mn.className}}return n.className="LeCunUniform",n})();te(ax),te((()=>{class n extends Zn{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,s){return V(()=>{if(e.length<2)throw new Ue("Shape must be at least 2D.");if("int32"!==s&&"float32"!==s&&void 0!==s)throw new TypeError(`Unsupported data type ${s}.`);const r=I(e.slice(0,-1)),a=e[e.length-1],o=r*a;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const l=Iu([Math.max(a,r),Math.min(a,r)],0,1,s,this.seed),u=sT.qr(l,!1);let c=u[0];const d=u[1].flatten().stridedSlice([0],[Math.min(a,r)*Math.min(a,r)],[Math.min(a,r)+1]);return c=D(c,d.sign()),r<a&&(c=c.transpose()),D(Me(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return n.className="Orthogonal",n})());const ox={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ix(n,t={}){return si(n,Rn.getMap().classNameMap,t,"initializer")}function Tt(n){return hp(n)}function bt(n){if("string"==typeof n){const t=n in ox?ox[n]:n;if("GlorotNormal"===t)return new tx;if("GlorotUniform"===t)return new ex;if("HeNormal"===t)return new nx;if("HeUniform"===t)return new sx;if("LeCunNormal"===t)return new rx;if("LeCunUniform"===t)return new ax;{const e={};return e.className=t,e.config={},ix(e)}}return n instanceof Zn?n:ix(n)}function xp(n){return Array.isArray(n)&&Array.isArray(n[0])}function Su(n){return 0===n.length?[]:Array.isArray(n[0])?n:[n]}function Fe(n){let t;if(Array.isArray(n)){if(1!==n.length)throw new A(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function nt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(1===n.length)return n[0];throw new A(`Expected exactly 1 Shape; got ${n.length}`)}return n}function Cu(n){let t=0;for(const e of n)t+=0===e.shape.length?1:e.shape.reduce((s,r)=>s*r);return t}const lx="Variable";class vs{constructor(t,e="float32",s=lx,r=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Uy(),this.originalName=jy(s=null==s?lx:s),this.name=qy(this.originalName),this.trainable_=r,this.constraint=a,this.val=function tN(n,t=!0,e,s){return R.makeVariable(n,t,e,s)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function cE(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function bp(n){return n.map(t=>t.read())}function wp(n){n.forEach(t=>{t[0].write(t[1])})}class Gt{constructor(t){this.dtype=t.dtype,this.shape=t.shape,this.ndim=null!=t.shape?t.shape.length:t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Is{constructor(t,e,s,r,a,o,i){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Uy(),null!=o&&(this.originalName=jy(o),this.name=qy(this.originalName)),this.rank=e.length}}let hE=0;class Nu{constructor(t,e){this.callArgs=e,this.id=hE++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)null!=s&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)t.push(null!=e?e.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let dE=0;class qe extends kr{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dE++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=zs(s)+"_"+bu(s)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let s;if(null!=t.batchInputShape)s=t.batchInputShape;else if(null!=t.inputShape){let a=null;null!=t.batchSize&&(a=t.batchSize),s=[a].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;null==r&&(r=t.inputDType),null==r&&(r="float32"),this.dtype=r}this.initialWeights=null!=t.weights?t.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Kn(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new A(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return In(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return In(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new xs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new xs(`Layer ${this.name} is not connected, no input to return.`);return In(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new xs(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new xs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return In(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=ft(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=ft(this.inputSpec);if(t.length!==e.length)throw new A(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let s=0;s<t.length;s++){const r=t[s],a=e[s];if(null==a)continue;const o=r.rank;if(null!=a.ndim&&o!==a.ndim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${o}`);if(null!=a.maxNDim&&o>a.maxNDim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${o}`);if(null!=a.minNDim&&o<a.minNDim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${o}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new A(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const i=r.shape;for(const l in a.axes){const u=Number(l),c=a.axes[l],h=u>=0?i[u]:i[i.length+u];if(null!=c&&-1===[c,null].indexOf(h))throw new A(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(null!=a.shape)for(let i=0;i<a.shape.length;++i){const l=a.shape[i],u=r.shape[i];if(null!=l&&null!=u&&l!==u)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=ft(t);let r=!0;for(const o of s)if(!(o instanceof Is)){r=!1;break}let a=!0;for(const o of s)if(o instanceof Is){a=!1;break}if(r===a)throw new A("Arguments to apply() must be all SymbolicTensors or all Tensors");return Vr(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const i of ft(t))o.push(i.shape);this.build(In(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let o=this.call(t,e);const i=ft(o),l=[];for(let u of i)-1!==s.indexOf(u)&&(u=u.clone()),l.push(u);if(o=In(l),null!=this.activityRegularizer)throw new Ue("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}{const o=function pE(n){n=ft(n);const t=[];for(const e of n)t.push(e.shape);return In(t)}(t),i=this.computeOutputShape(o);let l;const u="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),l=null!=i&&i.length>0&&Array.isArray(i[0])?i.map((c,h)=>new Is(u,c,this,ft(t),e,this.name,h)):new Is(u,i,this,ft(t),e,this.name),this.addInboundNode(t,l,null,null,o,i,e),this._refCount++,null!=this.activityRegularizer)throw new Ue("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{null!=s&&null!=t[r]&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new xs(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);-1===t.indexOf(s)&&t.push(s)}if(1===t.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new xs(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Kn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Cu(this.weights)}build(t){this.built=!0}getWeights(t=!1){return bp(t?this.trainableWeights:this.weights)}setWeights(t){V(()=>{const e=this.weights;if(e.length!==t.length)throw new A(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const s=[],r=bp(e);for(let a=0;a<r.length;++a){const o=r[a],i=e[a],l=t[a];if(!we(o.shape,l.shape))throw new A(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);s.push([i,l])}wp(s)})}addWeight(t,e,s,r,a,o,i,l){if(-1!==this._addedWeightNames.indexOf(t))throw new A(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==s&&(s="float32"),this.fastWeightInitDuringBuild&&(r=null!=l?l():bt("zeros"));const u=r.apply(e,s),c=new vs(u,s,t,o,i);return u.dispose(),null!=a&&this.addLoss(()=>a.apply(c.read())),null==o&&(o=!0),o?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=ft(t),null!=this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(s=>{if(null!=s)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,s,r,a,o,i=null){const l=ft(t);e=ft(e),s=ft(s),r=ft(r),a=Su(a),o=Su(o);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Nu({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:a,outputShapes:o},i);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function ux(n,t,e){if((null==t||null!=e&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),0===t.inboundNodes.length)return[n];{const s=t.inboundNodes[e];if(0===s.inboundLayers.length)return s.inputTensors;{const r=[];for(let a=0;a<s.inboundLayers.length;a++){const u=ux(s.inputTensors[a],s.inboundLayers[a],s.nodeIndices[a]);for(const c of u)-1===r.indexOf(c)&&r.push(c)}return r}}}let li=(()=>{class n extends qe{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:bu("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new A("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let s=e.batchInputShape;if(null==s){if(null==e.inputShape)throw new A("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");s=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new A("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=s,this.dtype=r,this.inputSpec=[{shape:s}];const a=new Is(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Nu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[s],outputShapes:[s]})}apply(e,s){throw new A(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return n.className="InputLayer",n})();function cx(n){if(null==n.batchShape&&null==n.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=n.batchShape&&null!=n.shape)throw new A("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;null!=n.shape&&null==t&&(t=[null].concat(n.shape));let e=n.dtype;return null==e&&(e="float32"),new li({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}te(li);class sr{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof sr)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(null!=this.id2Value[t.id])throw new A(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function mE(n,t){if(null==n.dtype||n.dtype===t.dtype)return t;try{return me(t,n.dtype)}catch(e){throw new A(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=s&&(this.id2Mask[t.id]=s),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Is){if(null==this.id2Value[t.id])throw new A(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new A(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Is){if(null==this.id2Value[t.id])throw new A(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new A(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Ge(this.id2Mask)}}const ku=new My,Tu=new My;function ui(n,t,e,s){const r=null!=e&&e.training,a=Array.isArray(n),o=a?n:[n],i=o.map(f=>f.name),l=[],u=t.names();for(const f of i)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=i.join(",")+"|"+t.names().sort().join(",");let d,h=ku.get(c);if(null==h){const f=function yE(n,t){S(null!=n&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(1===n.length){const r=hx(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of n){const{sorted:o,recipientMap:i}=hx(a,t);for(const l of o)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in i)null==s[l]&&(s[l]=new Set),i[l].forEach(u=>s[l].add(u))}}return{sorted:e,recipientCounts:xE(s)}}(o,t);h=f.sorted,d=f.recipientCounts,ku.put(c,h),Tu.put(c,d)}d={},r||Object.assign(d,Tu.get(c));const p=new sr(t);for(let f=0;f<h.length;++f){if(null!=s){const $=jh().numTensors;$>s.maxNumTensors&&(s.maxNumTensors=$),$<s.minNumTensors&&(s.minNumTensors=$)}const g=h[f],m=g.sourceLayer;if(m instanceof li)continue;const y=[],x=[],b=[];let w=!1;for(const $ of g.inputs){const E=p.getValue($),P=p.getMask($);y.push(E),x.push(P),null!=P&&(w=!0),r||(d[$.name]--,0===d[$.name]&&!t.hasKey($)&&-1===i.indexOf($.name)&&!E.isDisposed&&!0!==$.sourceLayer.stateful&&b.push(E))}w&&((e=e||{}).mask=x[0]);const v=ft(m.apply(y,e));let C=null;m.supportsMasking&&(C=m.computeMask(y,x));const k=bE(g),_=Array.isArray(k)?k:[k];for(let $=0;$<_.length;++$){p.hasKey(_[$])||p.add(_[$],v[$],Array.isArray(C)?C[0]:C);const E=i.indexOf(_[$].name);-1!==E&&(l[E]=v[$])}r||Ge(b)}return p.disposeMasks(),a?l:l[0]}function xE(n){const t={};for(const e in n)t[e]=n[e].size;return t}function hx(n,t){const e=new Set,s=[],r={};for(const i of t.names())e.add(i);const a=[],o=[];for(a.push(n);a.length>0;){const i=a[a.length-1];if(e.has(i.name)){a.pop();continue}const l=o[o.length-1]===a.length-1;if(0===i.inputs.length||l)a.pop(),s.push(i),e.add(i.name),l&&o.pop();else{o.push(a.length-1);for(const u of i.inputs)null==r[u.name]&&(r[u.name]=new Set),r[u.name].add(i.name),!e.has(u.name)&&a.push(u)}}return{sorted:s,recipientMap:r}}function bE(n){let t;if(1===n.sourceLayer.inboundNodes.length)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}function vp(n,t){return V(()=>fn(Se(D(n,n),t,!0)))}z().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function gE(n){null!=ku&&ku.setMaxEntries(n),null!=Tu&&Tu.setMaxEntries(n)});class ci extends kr{getConfig(){return{}}}te((()=>{class n extends ci{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return V(()=>{const s=vp(e,this.axis),r=On(s,0,this.maxValue);return D(e,_e(r,oe(Ut(),s)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return n.className="MaxNorm",n})()),te((()=>{class n extends ci{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return V(()=>_e(e,oe(Ut(),vp(e,this.axis))))}getConfig(){return{axis:this.axis}}}return n.className="UnitNorm",n})()),te((()=>{class n extends ci{apply(e){return Fs(e)}}return n.className="NonNeg",n})()),te((()=>{class n extends ci{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return V(()=>{const s=vp(e,this.axis),r=oe(D(this.rate,On(s,this.minValue,this.maxValue)),D(1-this.rate,s));return D(e,_e(r,oe(Ut(),s)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return n.className="MinMaxNorm",n})());const dx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ht(n){return hp(n)}function px(n,t={}){return si(n,Rn.getMap().classNameMap,t,"constraint")}function jt(n){return null==n?null:"string"==typeof n?px({className:n in dx?dx[n]:n,config:{}}):n instanceof ci?n:px(n)}function rr(n){return Ip.apply(this,arguments)}function Ip(){return(Ip=(0,T.Z)(function*(n){if(null==n)return;const t=[],e=[],s=[];for(const r in n){const a=n[r];if("number"!=typeof a){const o=a;t.push(o.data()),e.push(r),s.push(o)}}if(t.length>0){const r=yield Promise.all(t);for(let a=0;a<r.length;++a)n[e[a]]=r[a][0];Ge(s)}})).apply(this,arguments)}function fx(n){if(null!=n)for(const t in n){const e=n[t];"number"!=typeof e&&e.dispose()}}class xa{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return(0,T.Z)(function*(){})()}onEpochEnd(t,e){return(0,T.Z)(function*(){})()}onBatchBegin(t,e){return(0,T.Z)(function*(){})()}onBatchEnd(t,e){return(0,T.Z)(function*(){})()}onTrainBegin(t){return(0,T.Z)(function*(){})()}onTrainEnd(t){return(0,T.Z)(function*(){})()}setModel(t){}}class vE{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochBegin(t,e)})()}onEpochEnd(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochEnd(t,e)})()}onBatchBegin(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchBegin(t,e)})()}onBatchEnd(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchEnd(t,e)})()}onTrainBegin(t){var e=this;return(0,T.Z)(function*(){null==t&&(t={});for(const s of e.callbacks)yield s.onTrainBegin(t)})()}onTrainEnd(t){var e=this;return(0,T.Z)(function*(){null==t&&(t={});for(const s of e.callbacks)yield s.onTrainEnd(t)})()}}class IE extends xa{constructor(){super()}onEpochBegin(t){var e=this;return(0,T.Z)(function*(){e.seen=0,e.totals={}})()}onBatchEnd(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={});const r=null==e.size?0:e.size;s.seen+=r;for(const a in e){const o=e[a];if("number"==typeof o)s.totals.hasOwnProperty(a)||(s.totals[a]=0),s.totals[a]=s.totals[a]+o*r;else{let i;a in s.totals?i=s.totals[a]:s.totals[a]=0;const l=V(()=>oe(s.totals[a],D(o,r)));s.totals[a]=l,null!=i&&i.dispose()}}})()}onEpochEnd(t,e){var s=this;return(0,T.Z)(function*(){if(null!=e)for(const r of s.params.metrics)null!=s.totals[r]&&("number"==typeof s.totals[r]?e[r]=s.totals[r]/s.seen:V(()=>{const a=D(_e(1,s.seen),s.totals[r]);e[r]=a,s.totals[r].dispose(),fs(e[r])}))})()}}class SE extends xa{onTrainBegin(t){var e=this;return(0,T.Z)(function*(){e.epoch=[],e.history={}})()}onEpochEnd(t,e){var s=this;return(0,T.Z)(function*(){null==e&&(e={}),s.epoch.push(t);for(const r in e)null==s.history[r]&&(s.history[r]=[]),s.history[r].push(e[r])})()}syncData(){var t=this;return(0,T.Z)(function*(){const e=[],s=[],r=[];for(const o in t.history){const i=t.history[o];for(let l=0;l<i.length;++l)"number"!=typeof i[l]&&(e.push(i[l].data()),s.push(o),r.push(l))}const a=yield Promise.all(e);for(let o=0;o<a.length;++o)t.history[s[o]][r[o]].dispose(),t.history[s[o]][r[o]]=a[o][0]})()}}class CE extends xa{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Kg,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Di(this.yieldEvery)&&(this.maybeWait=function z2(n,t,e){let r,s=null!=e?e():dn();return(...o)=>{const i=null!=e?e():dn();return i-s<t||(s=i,r=n(...o)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,s){var r=this;return(0,T.Z)(function*(){const a=[];null!=r.yield&&(yield rr(s),a.push(r.yield(t,e,s))),a.push(r.nextFrameFunc()),yield Promise.all(a)})()}onEpochBegin(t,e){var s=this;return(0,T.Z)(function*(){s.currentEpoch=t,null!=s.epochBegin&&(yield rr(e),yield s.epochBegin(t,e))})()}onEpochEnd(t,e){var s=this;return(0,T.Z)(function*(){const r=[];null!=s.epochEnd&&(yield rr(e),r.push(s.epochEnd(t,e))),"epoch"===s.yieldEvery&&r.push(s.nextFrameFunc()),yield Promise.all(r)})()}onBatchBegin(t,e){var s=this;return(0,T.Z)(function*(){null!=s.batchBegin&&(yield rr(e),yield s.batchBegin(t,e))})()}onBatchEnd(t,e){var s=this;return(0,T.Z)(function*(){const r=[];null!=s.batchEnd&&(yield rr(e),r.push(s.batchEnd(t,e))),"batch"===s.yieldEvery?r.push(s.nextFrameFunc()):Di(s.yieldEvery)&&r.push(s.maybeWait(s.currentEpoch,t,e)),yield Promise.all(r)})()}onTrainBegin(t){var e=this;return(0,T.Z)(function*(){null!=e.trainBegin&&(yield rr(t),yield e.trainBegin(t))})()}onTrainEnd(t){var e=this;return(0,T.Z)(function*(){null!=e.trainEnd&&(yield rr(t),yield e.trainEnd(t))})()}}function mx(n,t){return null==n&&(n={}),n instanceof xa?[n]:Array.isArray(n)&&n[0]instanceof xa?n:ft(n).map(s=>new CE(s,t))}let NE=(()=>{class n{constructor(){}static registerCallbackConstructor(e,s){S(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),n.checkForDuplicate(s),null==n.constructors[e]&&(n.constructors[e]=[]),n.constructors[e].push(s)}static checkForDuplicate(e){for(const s in n.constructors)n.constructors[+s].forEach(a=>{if(a===e)throw new A("Duplicate callback constructor.")})}static clear(){n.constructors={}}static createCallbacks(e){const s=[];for(const r in n.constructors){const a=+r;e>=a&&s.push(...n.constructors[a])}return s.map(r=>new r)}}return n.constructors={},n})();function gx(n,t,e,s,r,a,o,i,l){const u=new SE,c=[new IE,...NE.createCallbacks(t)];null!=n&&c.push(...n),c.push(u);const h=new vE(c);return h.setParams({epochs:e,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:h,history:u}}function Ss(n,t={},e=!1){return si(n,Rn.getMap().classNameMap,t,"layer",e)}function _u(n,t){return V(()=>{"float32"!==n.dtype&&(n=me(n,"float32"));const e=Se(oi(n),t,!0),s=Uo(e.shape,Ut()),r=fn(Xs(e,s));return _e(n,r)})}function $u(n,t){return V(()=>Ft(oi(Ie(t,n)),-1))}function Sp(n,t){return V(()=>Ft(Xt(Ie(t,n)),-1))}function Cp(n,t){return V(()=>{const e=Ie(n,t),s=On(Xt(n),Ut(),Number.MAX_VALUE),r=Xt(_e(e,s));return D(100,Ft(r,-1))})}function hi(n,t,e=!1){return V(()=>{if(e)t=Cd(t);else{const s=Se(t,t.shape.length-1,!0);t=_e(t,s)}return t=On(t,Ut(),1-Ut()),xt(Se(D(me(n,"float32"),Hn(t)),t.shape.length-1))})}function Eu(n,t,e=!1){return V(()=>{const s=me(nu(function eE(n){const t=[tr(n.shape)];return F(n,t)}(n)),"int32"),r=(t=On(t,Ut(),1-Ut())).shape;return hi(F(kg(s,r[r.length-1]),r),t,e)})}function Du(n,t){return V(()=>{let e;return e=On(t,Ut(),1-Ut()),e=Hn(_e(e,Ie(1,e))),Ft(function DE(n,t){if(!we(n.shape,t.shape))throw new A(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return V(()=>{const e=Fs(t),s=xt(Xt(t));return oe(Ie(e,D(t,n)),pd(Gn(s)))})}(n,e),-1)})}function yx(n,t){return V(()=>{const e=_u(n,-1),s=_u(t,-1),r=D(e,s);return xt(Se(r,-1))})}const Au={meanSquaredError:$u,meanAbsoluteError:Sp,meanAbsolutePercentageError:Cp,meanSquaredLogarithmicError:function kE(n,t){return V(()=>{const e=On(t,Ut(),Number.MAX_VALUE),s=Hn(oe(1,e)),r=On(n,Ut(),Number.MAX_VALUE),a=Hn(oe(1,r));return Ft(oi(Ie(s,a)),-1)})},squaredHinge:function TE(n,t){return V(()=>{const e=Xs(0,Ie(1,D(n,t)));return Ft(oi(e),-1)})},hinge:function _E(n,t){return V(()=>{const e=Xs(0,Ie(1,D(n,t)));return Ft(e,-1)})},categoricalHinge:function $E(n,t){return V(()=>{const e=Se(D(n,t),-1),s=ns(D(Ie(1,n),t),-1);return Xs(0,oe(1,Ie(s,e)))})},logcosh:function EE(n,t){return V(()=>{const e=Math.log(2),s=Ie(t,n),r=Ie(oe(s,Yo(D(-2,s))),e);return Ft(r,-1)})},categoricalCrossentropy:hi,sparseCategoricalCrossentropy:Eu,binaryCrossentropy:Du,kullbackLeiblerDivergence:function AE(n,t){return V(()=>{const e=On(n,Ut(),1),s=On(t,Ut(),1);return Se(D(n,Hn(_e(e,s))),-1)})},poisson:function RE(n,t){return V(()=>{const e=Hn(oe(Ut(),t));return Ft(Ie(t,D(n,e)),-1)})},cosineProximity:yx};function Np(n){if("string"==typeof n){if(n in Au)return Au[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new A(t)}return n}function xx(n,t){return V(()=>{const e=D(.5,jn(t)),s=bs(Fn(t,e),n.dtype);return Ft(ms(n,s),-1)})}function bx(n,t){return V(()=>bs(ms(Go(n,-1),Go(t,-1)),"float32"))}function LE(n,t){return Du(n,t)}function VE(n,t){return n.rank===t.rank&&(n=Qo(n,[n.rank-1])),(t=Go(t,-1)).dtype!==n.dtype&&(t=me(t,n.dtype)),me(ms(n,t),"float32")}const vx=hi,Ix=Eu,Ru={binaryAccuracy:xx,categoricalAccuracy:bx,precision:function PE(n,t){return V(()=>{const e=function wx(n,t){return V(()=>me(Se(Os(ms(n,1),ms(t,1))),"float32"))}(n,t),s=function FE(n,t){return V(()=>me(Se(Os(ms(n,0),ms(t,1))),"float32"))}(n,t),r=oe(e,s);return me(gn(Fn(r,0),_e(e,r),0),"float32")})},categoricalCrossentropy:vx,sparseCategoricalCrossentropy:Ix,mse:$u,MSE:$u,mae:Sp,MAE:Sp,mape:Cp,MAPE:Cp,cosine:yx};function jE(n){if("string"==typeof n&&n in Ru)return Ru[n];if("string"!=typeof n&&null!=n)return n;throw new A(`Unknown metric ${n}`)}function Ou(n){if(Ln(null!==n,`Unknown LossOrMetricFn ${n}`),"string"==typeof n)return n;{let t;for(const e of Object.keys(Au))if(Au[e]===n){t=e;break}if(void 0!==t)return t;for(const e of Object.keys(Ru))if(Ru[e]===n){t=e;break}return void 0!==t?t:n.name}}function Cx(n,t,e=!1){if(null==n||"object"!=typeof n||Object.getPrototypeOf(n)!==Object.prototype||!kp(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function kp(n){if(null===n)return!0;if("object"==typeof n){if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if("string"!=typeof e||!kp(n[e]))return!1;return!0}if(Array.isArray(n)){for(const t of n)if(!kp(t))return!1;return!0}return!1}{const t=typeof n;return"string"===t||"number"===t||"boolean"===t}}function Fu(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function YE(n,t,e){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch(l){r="multiple"}try{s=JSON.stringify(n.outputShape)}catch(l){s="multiple"}Fu([`${n.name} (${n.getClassName()})`,r,s,n.countParams().toString()],t,e)}function QE(n,t,e,s){let r,a;try{a=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch(h){a="multiple"}try{r=JSON.stringify(n.outputShape)}catch(h){r="multiple"}const o=[];for(const h of n.inboundNodes)if(!(null!=e&&e.length>0&&-1===e.indexOf(h)))for(let d=0;d<h.inboundLayers.length;++d)o.push(`${h.inboundLayers[d].name}[${h.nodeIndices[d]}][${h.tensorIndices[d]}]`);const i=n.name,l=n.getClassName(),u=0===o.length?"":o[0];Fu([`${i} (${l})`,a,r,n.countParams().toString(),u],t,s);for(let h=1;h<o.length;++h)Fu(["","","","",o[h]],t,s)}function Nx(n,t,e){return("inboundNodes"===n||"outputLayers"===n||"inputLayers"===n)&&0===t&&"string"==typeof e}function Pu(n,t){if(null===n)return null;if("string"==typeof n)return Pr(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const a=n[r];Nx(t,r,a)?e.push(a):e.push(Pu(a,t))}return e}{const e={};for(const s of Object.keys(n)){const r=n[s];if("name"===s&&"string"==typeof r)e[s]=r;else{const a=Pr(s);e[a]=Pu(r,a)}}return e}}function Tp(n,t){if(null==n)return null;if("string"==typeof n)return zs(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const a=n[r];Nx(t,r,a)?e.push(a):e.push(Tp(a,t))}return e}{const e={};for(const s of Object.keys(n)){const r=n[s];e[zs(s)]="name"!==s&&"className"!==s||"string"!=typeof r?Tp(r,s):r}return e}}class os extends qe{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const x=this.getClassName().toLowerCase();this.name=bu(x)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(t.inputs)?t.inputs.slice():[t.inputs],this.outputs=Array.isArray(t.outputs)?t.outputs.slice():[t.outputs],er(this.inputs).length!==this.inputs.length)throw new A(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);er(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const w=x.nodeIndex,v=x.tensorIndex;this.outputLayers.push(x.sourceLayer),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(v)}for(const x of this.inputs){const b=x.sourceLayer,w=x.nodeIndex,v=x.tensorIndex;Ln(0===w,"input layer has >1 nodes"),Ln(0===v,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const b=this.inputLayers[x];if(!(b instanceof li))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${x} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const e={},s={},r={},a={},o={},i=[],l=(x,b,w,v,C,k)=>{(null==v||null==C||null==k)&&(v=x.sourceLayer,C=x.nodeIndex,k=x.tensorIndex);const _=v.inboundNodes[C];if(-1!==w.indexOf(_))throw new Kn(`The tensor ${x.name} at layer "${v.name}" is part of a cycle.`);if(-1!==b.indexOf(_))return;this.containerNodes.add(os.nodeKey(v,C)),v.id in o||(o[v.id]=Object.keys(o).length),-1===w.indexOf(_)&&w.push(_);const $=_.inboundLayers.length;for(let E=0;E<$;E++)l(_.inputTensors[E],b,w,_.inboundLayers[E],_.nodeIndices[E],_.tensorIndices[E]);for(b.push(_);w.indexOf(_)>=0;)w.splice(w.indexOf(_),1);i.push(_)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=i.slice().reverse();for(const x of h){s[x.id]=x,x.id in e||(e[x.id]=0);let b=e[x.id];b=Math.max(b,null==r[x.outboundLayer.id]?0:r[x.outboundLayer.id]),r[x.outboundLayer.id]=b,a[x.outboundLayer.id]=x.outboundLayer,e[x.id]=b;for(let v=0;v<x.inboundLayers.length;v++){const _=x.inboundLayers[v].inboundNodes[x.nodeIndices[v]];e[_.id]=Math.max(b+1,null==e[_.id]?0:e[_.id]),s[_.id]=_}}const d={};for(const x in e){const b=e[x];b in d||(d[b]=[]),d[b].push(s[x])}const p={};for(const x in r){const b=r[x];b in p||(p[b]=[]),p[b].push(a[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(yu);this.layers=[];for(const x of f){const b=p[x];b.sort((w,v)=>{const C=o[w.id],k=o[v.id];return C<k?-1:C>k?1:0});for(const w of b)w instanceof os&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(yu);const g=this.inputs.slice(),m=[];for(const x of f)for(const b of d[x]){const w=b.outboundLayer;if(null!=w){for(const v of b.inputTensors)if(-1===g.indexOf(v))throw new Kn(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${w.name}". The following previous layers were accessed without issue: ${m}`);for(const v of b.outputTensors)g.push(v);m.push(w.name)}}this.nodesByDepth=d;const y=this.layers.map(x=>x.name);for(const x of y){const b=y.filter(w=>w===x).length;if(1!==b)throw new Kn(`The name "${x}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Nu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new A("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;for(const o of this.layers)for(const i of o.weights){if(null!=s[i.originalName])throw new A(`Duplicate weight name: ${i.originalName}`);s[i.originalName]=i,r++}const a=[];for(const o in t){let i=o;if(null==s[o]){const l=o.split("/");i=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(null!=s[i])a.push([s[i],t[o]]);else if(e)throw new A(`Provided weight data has no target variable: ${o}`);delete s[i]}if(e){const o=[];for(const i in s)o.push(i);if(o.length>0)throw new A(`${o.length} of ${r} weights are not set: ${o}`)}wp(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 4.5.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=Tp(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return V(()=>{t=ft(t);const s=new sr;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return ui(this.outputs,s,e)})}computeMask(t,e){return V(()=>{let s;return t=ft(t),s=null==e?Fr(null,t.length):ft(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Su(t);if(e.length!==this.inputLayers.length)throw new A(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<e.length;i++)s[this.inputLayers[i].name+"_0_0"]=e[i];const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(yu);if(r.length>1)for(const i of r){const l=this.nodesByDepth[i];for(const u of l){const c=u.outboundLayer;if(-1!==this.inputLayers.map(g=>g.id).indexOf(c.id))continue;const h=[];for(let g=0;g<u.inboundLayers.length;g++)h.push(s[`${u.inboundLayers[g].name}_${u.nodeIndices[g]}_${u.tensorIndices[g]}`]);const p=Su(c.computeOutputShape(In(h))),f=c.inboundNodes.indexOf(u);for(let g=0;g<p.length;g++)s[`${c.name}_${f}_${g}`]=p[g]}}const a=[],o=[];for(let i=0;i<this.outputLayers.length;i++)o.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<o.length;i++){const l=o[i];Ln(l in s),a.push(s[l])}return In(a)}runInternalGraph(t,e){null==e&&(e=Fr(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l)s[this.inputs[l].id]=[t[l],e[l]];const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(yu);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const g of d)g.id in s&&f.push(s[g.id]);if(f.length===d.length){let m,y,x,b,g={};if(null!=c.callArgs&&(g=c.callArgs),1===f.length){const[w,v]=f[0];null==g.mask&&(g.mask=v),x=ft(h.call(w,g)),b=ft(h.computeMask(w,v)),m=[w],y=[v]}else m=f.map(w=>w[0]),y=f.map(w=>w[1]),null==g.mask&&(g.mask=y),x=ft(h.call(m,g)),b=ft(h.computeMask(m,y));if(h.activityRegularizer)throw new Ue("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w)s[p[w].id]=[x[w],b[w]]}}}const a=[],o=[],i=[];for(const l of this.outputs){Ln(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];i.push(u.shape),a.push(u),o.push(c)}return[a,o,i]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof os?1:0;for(let a=0;a<r.inboundNodes.length;a++){const o=os.nodeKey(r,a);this.containerNodes.has(o)&&(e[o]=s,s+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new A(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new A("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===t)return s;throw new A(`No such layer: ${t}`)}calculateLosses(){return V(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=os.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const i=o.getClassName(),l=o.getConfig(),u=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],p=os.nodeKey(o,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch(g){console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const y=d.inboundLayers[m],b=d.tensorIndices[m];let v=e[os.nodeKey(y,d.nodeIndices[m])];null==v&&(v=0),g.push([y.name,v,b,f])}u.push(g)}}}const c={};c.name=o.name,c.className=i,c.config=l,c.inboundNodes=u,s.push(c)}t.layers=s;const r=[];for(let o=0;o<this.inputLayers.length;o++){const i=this.inputLayers[o],u=os.nodeKey(i,this.inputLayersNodeIndices[o]);if(!this.containerNodes.has(u))continue;let c=e[u];null==c&&(c=0),r.push([i.name,c,this.inputLayersTensorIndices[o]])}t.inputLayers=r;const a=[];for(let o=0;o<this.outputLayers.length;o++){const i=this.outputLayers[o],u=os.nodeKey(i,this.outputLayersNodeIndices[o]);if(!this.containerNodes.has(u))continue;let c=e[u];null==c&&(c=0),a.push([i.name,c,this.outputLayersTensorIndices[o]])}return t.outputLayers=a,t}static fromConfig(t,e,s={},r=!1){const a={},o={};function i(m,y){m.name in o?o[m.name].push(y):o[m.name]=[y]}function l(m,y){const x=[];let b;for(const w of y){const v=w[0],C=w[1],k=w[2];if(b=null==w[3]?{}:w[3],!(v in a))return void i(m,y);const _=a[v];if(_.inboundNodes.length<=C)return void i(m,y);x.push(_.inboundNodes[C].outputTensors[k])}x.length>0&&m.apply(In(x),b)}function u(m){const y=m.name,x=Ss(m,null!=e.customObjects?e.customObjects:{});x.setFastWeightInitDuringBuild(r),a[y]=x,m.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new A(`Corrupted configuration, expected array for nodeData: ${w}`);i(x,w)})}const c=e.name,h=e.layers;for(const m of h)u(m);for(;!M2(o);)for(const m of h){const y=a[m.name];if(y.name in o){const x=o[y.name];delete o[y.name];for(const b of x)l(y,b)}}const d=[],p=[],f=e.inputLayers;for(const m of f){const y=m[0],x=m[1],b=m[2];Ln(y in a),d.push(a[y].inboundNodes[x].outputTensors[b])}const g=e.outputLayers;for(const m of g){const y=m[0],x=m[1],b=m[2];Ln(y in a),p.push(a[y].inboundNodes[x].outputTensors[b])}return new t({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new A("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function Tx(n,t){return function kx(n,t,e){const s=t.length;if(null==n||Array.isArray(n)&&0===n.length)return t.map(r=>null);if(1===s)return Array.isArray(n)&&1===n.length?n:"object"==typeof n&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}if("object"==typeof n&&Object.keys(n).length>0&&"object"==typeof n[Object.keys(n)[0]]){const r=[];return t.forEach(a=>{r.push(a in n?n[a]:null)}),r}throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}(n,t,"classWeight")}function _x(n,t,e,s){return $p.apply(this,arguments)}function $p(){return($p=(0,T.Z)(function*(n,t,e,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=e){const r=V(()=>{if(1===n.shape.length)return Nr(n);if(2===n.shape.length){if(n.shape[1]>1)return Go(n,1);if(1===n.shape[1])return F(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(yield r.data());Ge(r);const o=[];return a.forEach(i=>{if(null==e[i])throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(e[i])}),Tn(o,"float32")}return null})).apply(this,arguments)}function JE(n,t){return D(n,t)}function $x(n,t){let e,s;e=t.xs,s=t.ys,S(null!=e&&null!=s,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=Ex("input",n.inputNames,e),o=Ex("output",n.outputNames,s),i=a[0].shape[0];S(a.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),S(o.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<a.length;l++)S(a[l].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let l=0;l<o.length;l++)S(o[l].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:a,ys:o}}function Ex(n,t,e){if(e instanceof Ot)return[e];if(Array.isArray(e))return S(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(null==e[r])throw new A(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function tD(n){if(3===n.length)throw new Ue("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}function Ep(){return(Ep=(0,T.Z)(function*(n,t,e){const s=null!=e.batchesPerEpoch;if(S(null!=n.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),S(null!=e,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),S(null!=e.epochs&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),S(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),S(null==e.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=null!=e.validationData;let a,o;if(r)if(Dx(e.validationData))S(null==e.validationBatches||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const m=tD(e.validationData);a=m.xs,o=m.ys}const i=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map(m=>"val_"+m)):l.slice();const c=mx(e.callbacks,e.yieldEvery),h=null==e.verbose?1:e.verbose,{callbackList:d,history:p}=gx(c,h,e.epochs,null,null,sD(t,e),null,r,u);d.setModel(n),n.history=p,yield d.onTrainBegin(),n.stopTraining_=!1;let f=null==e.initialEpoch?0:e.initialEpoch,g=yield t.iterator();for(;f<e.epochs;){const m={};yield d.onEpochBegin(f);let y=0,x=0;for(s||(g=yield t.iterator());!s||y<e.batchesPerEpoch;){const b=yield g.next();if(s&&b.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=b.value){const{xs:w,ys:v}=$x(n,b.value),C={};C.batch=x,C.size=w[0].shape[0],yield d.onBatchBegin(x,C);const k=[];if(null!=e.classWeight){const E=Tx(e.classWeight,n.outputNames);for(let P=0;P<E.length;++P)k.push(yield _x(v[P],null,E[P]))}const _=w.concat(v).concat(k),$=i(_);Ge(_);for(let E=0;E<l.length;++E){const B=$[E];C[l[E]]=B,fs(B)}yield d.onBatchEnd(x,C),fx(C),x++,y++}if(s?y>=e.batchesPerEpoch:b.done){if(r){let w;w=Dx(e.validationData)?ft(yield n.evaluateDataset(e.validationData,{batches:e.validationBatches})):ft(n.evaluate(a,o,{batchSize:null==e.validationBatchSize?32:e.validationBatchSize,verbose:0}));for(let v=0;v<n.metricsNames.length;++v)m[`val_${n.metricsNames[v]}`]=w[v]}break}if(n.stopTraining_)break}if(yield d.onEpochEnd(f,m),f++,n.stopTraining_)break}return yield d.onTrainEnd(),yield n.history.syncData(),n.history}finally{n.isTraining=!1}})).apply(this,arguments)}function sD(n,t){let e=null;return null!=t.batchesPerEpoch?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function Dx(n){return"function"==typeof n.iterator}function rD(n){return"function"==typeof n.next}function Dp(){return(Dp=(0,T.Z)(function*(n,t,e){const s=null!=(e=e||{}).batches,r=n.testFunction;let a=[];if(e.verbose>0)throw new Ue("Verbose mode is not implemented yet.");S(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const o=rD(t)?t:yield t.iterator();let i=0,l=0;for(;!s||l<e.batches;){const u=yield o.next();if(a=V(()=>{if(u.value){const{xs:c,ys:h}=$x(n,u.value),d=c.concat(h),p=V(()=>r(d));if(Ge(d),0===l)for(let g=0;g<p.length;++g)a.push(Me(0));const f=d[0].shape[0];for(let g=0;g<p.length;++g){const m=p[g],y=a[g];a[g]=V(()=>oe(a[g],D(f,m))),l>0&&Ge(y)}Ge(p),i+=f,++l}return a}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){const c=a[u];a[u]=_e(a[u],i),Ge(c)}return In(a)})).apply(this,arguments)}function Ap(n){S(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function di(n,t,e){return null==n?[null]:Array.isArray(n)?n.map(s=>Mr(s,t,e-t)):Mr(n,t,e-t)}function Rp(n,t){return V(()=>null==n?null:Array.isArray(n)?n.map(e=>Rp(e,t)):Yy(n,"int32"===t.dtype?t:me(t,"int32")))}function Op(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function Ax(n){const t=[];n instanceof Ot&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(1===s.rank)t.push(ai(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function is(n,t){if(null==n)return;const e=[];if(t instanceof Ot)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(null!=t)for(const r in t)e.push(t[r].id);const s=[];if(n instanceof Ot)-1===e.indexOf(n.id)&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{-1===e.indexOf(r.id)&&s.push(r)});else if(null!=n)for(const r in n){const a=n[r];-1===e.indexOf(a.id)&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function Fp(n){return Array.isArray(n)}function Rx(n){return!function oD(n){return n instanceof Ot}(n)&&!Fp(n)}function Ox(n,t,e,s=!0,r=""){if(null==t||0===t.length){if(null!=n){let o=!1;if(Fp(n)&&n.length>0)o=!0;else if(Rx(n)){for(const i in n)if(n.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new A(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(null==n)return t.map(o=>null);let a;if(Rx(n)){a=[];for(const o of t){if(null==n[o])throw new A(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(n[o])}}else if(Fp(n)){if(n.length!==t.length)throw new A(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);a=n}else{if(t.length>1)throw new A(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);a=[n]}if(a=Ax(a),null!=e)for(let o=0;o<t.length;++o){if(null==e[o])continue;const i=a[o];if(i.shape.length!==e[o].length)throw new A(`Error when checking ${r}: expected ${t[o]} to have ${e[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<e[o].length;++l){if(0===l&&!s)continue;const u=i.shape[l],c=e[o][l];if(null!=c&&c>=0&&u!==c)throw new A(`${r} expected a batch of elements where each example has shape [${e[o].slice(1,e[o].length)}] (i.e.,tensor shape [*,${e[o].slice(1,e[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Fx(n,t,e,s=!0,r=""){let a;if(Array.isArray(n)){if(n.length!==t.length)throw new A(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);a=n}else{if(t.length>1)throw new A(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);a=[n]}if(null!=e)for(let o=0;o<t.length;++o){if(null==e[o])continue;const i=a[o];if(i.shape.length!==e[o].length)throw new A(`Error when checking ${r}: expected ${t[o]} to have ${e[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<e[o].length;++l){if(0===l&&!s)continue;const u=i.shape[l],c=e[o][l];if(null!=c&&c!==u)throw new A(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(e[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}let zr=(()=>{class n extends os{constructor(e){super(e),this.isTraining=!1}summary(e,s,r=console.log){if(!this.built)throw new A("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function KE(n,t,e,s=console.log){const r=function ZE(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let a=!1;for(const o of r.inboundNodes)if(-1!==s.indexOf(o)){if(a){t=!1;break}a=!0}if(!t)break}return t}(n),a=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(c=>Math.floor(t*c))),!r){a.push("Receives inputs"),o=[];for(const c in n.nodesByDepth)o.push(...n.nodesByDepth[c])}s("_".repeat(t)),Fu(a,e,s),s("=".repeat(t));const i=n.layers;for(let c=0;c<i.length;++c)r?YE(i[c],e,s):QE(i[c],e,o,s),s((c===i.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=function XE(n){let t;return t=Cu(null!=n.collectedTrainableWeights?n.collectedTrainableWeights:n.trainableWeights),t}(n),u=Cu(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,s,r)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function qE(n){const t={Adagrad:()=>Rr.adagrad(.01),Adadelta:()=>Rr.adadelta(1,.95,Ut()),Adam:()=>Rr.adam(.001,.9,.999,Ut()),Adamax:()=>Rr.adamax(.002,.9,.999,Ut(),0),RMSProp:()=>Rr.rmsprop(.001,.9,0,Ut()),SGD:()=>Rr.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new A(`Unknown Optimizer ${n}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ks))throw new A("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let s=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new A(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);s=e.loss.map(l=>Np(l))}else{const i=Np(e.loss);this.outputs.forEach(l=>{s.push(i)})}else{e.loss=e.loss;for(const i in e.loss)if(-1===this.outputNames.indexOf(i))throw new A(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)null==e.loss[i]&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),s.push(Np(e.loss[i]))}this.lossFunctions=s,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i];this.feedOutputNames.push(this.outputNames[i]),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Vr("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==r.indexOf(i))continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=function uD(n,t){if(null==n||Array.isArray(n)&&0===n.length)return t.map(s=>[]);let e;if("string"==typeof n||"function"==typeof n)e=[n];else{if(!Array.isArray(n)&&"object"!=typeof n)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);e=n}if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let a=e.hasOwnProperty(r)?e[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}(e.metrics,this.outputNames),o=(i,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,i])};Vr("metric",()=>{for(let i=0;i<this.outputs.length;++i)-1===r.indexOf(i)&&(c=>{let d,p,f;for(const g of c){if("string"==typeof g&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(g)){const y=this.internalOutputShapes[i];let x;1===y[y.length-1]||this.lossFunctions[i]===Du?-1!==["accuracy","acc"].indexOf(g)?p=xx:-1!==["crossentropy","ce"].indexOf(g)&&(p=LE):this.lossFunctions[i]===Eu?-1!==["accuracy","acc"].indexOf(g)?p=VE:-1!==["crossentropy","ce"].indexOf(g)&&(p=Ix):-1!==["accuracy","acc"].indexOf(g)?p=bx:-1!==["crossentropy","ce"].indexOf(g)&&(p=vx),-1!==["accuracy","acc"].indexOf(g)?x="acc":-1!==["crossentropy","ce"].indexOf(g)&&(x="ce"),f=p,d=""+x}else f=jE(g),d=""+Ou(g);let m;Vr(d,()=>{m=f}),o(i,d,m)}})(a[i])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,s,r={}){const a=null==r.batchSize?32:r.batchSize;Ap(a);const i=this.standardizeUserDataXY(e,s,!0,a);try{const l=i[0].concat(i[1]);return this.makeTestFunction(),In(this.testLoop(this.testFunction,l,a,r.verbose,r.steps))}finally{is(i[0],e),is(i[1],s)}}evaluateDataset(e,s){var r=this;return(0,T.Z)(function*(){return r.makeTestFunction(),function aD(n,t,e){return Dp.apply(this,arguments)}(r,e,s)})()}checkNumSamples(e,s,r,a="steps"){let o;if(null!=r){if(o=null,null!=s)throw new A(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${s}`)}else{if(null==e)throw new A(`Either the input data should have a defined shape, or ${a} shoud be specified.`);o=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return o}execute(e,s){if(Array.isArray(s)&&0===s.length)throw new A("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(s),o=this.retrieveSymbolicTensors(r?s:[s]),i=new sr;if(e instanceof Ot&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new A(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],e[u])}else for(const u of this.inputs){const c=e[u.name];if(null==c)throw new A(`No value is provided for the model's input ${u.name}`);i.add(u,c)}const l=ui(o,i);return r?l:l[0]}retrieveSymbolicTensors(e){const s=Fr(null,e.length);let r=e.length;for(const a of this.layers){const o=Array.isArray(a.output)?a.output:[a.output],i=o.map(l=>l.name);for(let l=0;l<e.length;++l){const u=i.indexOf(e[l]);if(-1!==u&&(s[l]=o[u],r--),0===r)break}if(0===r)break}if(r>0){const a=[];throw s.forEach((o,i)=>{null==o&&a.push(e[i])}),new A(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return s}predictLoop(e,s=32,r=!1){return V(()=>{const a=this.checkNumSamples(e);if(r)throw new Ue("Verbose predictLoop() is not implemented yet.");const o=Op(a,s),i=this.outputs.map(l=>[]);for(let l=0;l<o.length;++l)V(()=>{const d=di(e,o[l][0],o[l][1]),p=[];if(Array.isArray(d))for(let g=0;g<d.length;++g)p.push({key:this.inputs[g],value:d[g]});else p.push({key:this.inputs[0],value:d});const f=new sr(p);return ui(this.outputs,f)}).forEach((c,h)=>i[h].push(c));return In(i.map(l=>ln(l,0)))})}predict(e,s={}){const r=Ax(e);Fx(r,this.inputNames,this.feedInputShapes,!1);try{const a=null==s.batchSize?32:s.batchSize;return Ap(a),this.predictLoop(r,a)}finally{is(r,e)}}predictOnBatch(e){Fx(e,this.inputNames,this.feedInputShapes,!0);const s=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,s)}standardizeUserDataXY(e,s,r=!0,a){if(null==this.optimizer_)throw new Kn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];o.push(this.feedLossFns[i]===Eu?l.slice(0,l.length-1).concat([1]):l)}if(function iD(n,t,e){const s=er(n.map(a=>a.shape[0]));s.sort();const r=er(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new A(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(a=>a.shape))}`);if(r.length>1)throw new A(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!we(s,r))throw new A(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Ox(e,this.feedInputNames,this.feedInputShapes,!1,"input"),s=Ox(s,this.feedOutputNames,o,!1,"target")),function lD(n,t,e){const s=[$u,Du,hi];for(let r=0;r<n.length;++r){const a=n[r],o=t[r],i=e[r];if(null!=o){if(o===hi&&1===a.shape[a.shape.length-1])throw new A(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(o)){const l=a.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(null!=d&&h!==d)throw new A(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(s,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new A(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,s]}standardizeUserData(e,s,r,a,o=!0,i){var l=this;return(0,T.Z)(function*(){const[u,c]=l.standardizeUserDataXY(e,s,o,i);if(null!=r)throw new Error("sample weight is not supported yet.");let h=null;if(null!=a){const d=Tx(a,l.outputNames);h=[];for(let p=0;p<d.length;++p)h.push(yield _x(c[p],null,d[p]))}return[u,c,h]})()}testLoop(e,s,r,a=0,o){return V(()=>{const i=this.checkNumSamples(s,r,o,"steps"),l=[];if(a>0)throw new Ue("Verbose mode is not implemented yet.");if(null!=o)throw new Ue("steps mode in testLoop() is not implemented yet");{const u=Op(i,r),c=Tn(ss(0,i));for(let h=0;h<u.length;++h){const d=u[h][0],p=u[h][1],f=Mr(c,d,p-d),g=Rp(s,f),m=e(g);if(0===h)for(let y=0;y<m.length;++y)l.push(Me(0));for(let y=0;y<m.length;++y)l[y]=oe(l[y],D(p-d,m[y]))}for(let h=0;h<l.length;++h)l[h]=_e(l[h],i)}return l})}getDedupedMetricsNames(){const e=this.metricsNames,s=[];for(let r=0;r<e.length;++r){const a=e[r];let o=a;zy(e,a)>1&&(o+=`_${zy(e.slice(0,r),a)}`),s.push(o)}return s}makeTrainFunction(){return e=>{const s=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],u=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:r[m]});const p=new sr(d),f=ui(this.outputs,p,{training:!0});let g;for(let m=0;m<this.lossFunctions.length;++m){let x=(0,this.lossFunctions[m])(a[m],f[m]);null!=o[m]&&(x=JE(x,o[m]));const b=Ft(x);s.push(b),g=0===m?x:oe(g,x)}for(let m=0;m<this.metricsTensors.length;++m){let y;if(this.outputs.length>1&&m<this.outputs.length)y=s[m];else{const b=this.metricsTensors[m][1];y=Ft((0,this.metricsTensors[m][0])(a[b],f[b]))}fs(y),i.push(y)}return g=Ft(g),this.calculateLosses().forEach(m=>{g=oe(g,m)}),g},!0,u)].concat(i)}}makeTestFunction(){this.testFunction=e=>V(()=>{const s=[];let r;const a=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:a[c]});const l=new sr(i),u=ui(this.outputs,l);for(let c=0;c<this.lossFunctions.length;++c){const d=Ft((0,this.lossFunctions[c])(o[c],u[c]));r=0===c?d:oe(r,d),s.push(r)}for(let c=0;c<this.metricsTensors.length;++c){const d=this.metricsTensors[c][1],p=Ft((0,this.metricsTensors[c][0])(o[d],u[d]));s.push(p)}return s})}fit(e,s,r={}){var a=this;return(0,T.Z)(function*(){if(a.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let o,i,l,u,c,h,d,p,f;a.isTraining=!0;try{const g=null==r.batchSize?32:r.batchSize;Ap(g);const m=!1,y=yield a.standardizeUserData(e,s,r.sampleWeight,r.classWeight,m,g);o=y[0],i=y[1],f=y[2];let b,x=!1;if(null!=r.validationData&&r.validationData.length>0){if(x=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Ue("validationData including sample weights is not supported yet."):new A(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);c=r.validationData[0],h=r.validationData[1];const P=!0,B=yield a.standardizeUserData(c,h,null,null,P,g);d=B[0],p=B[1],b=d.concat(p)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){x=!0;const P=Math.floor(o[0].shape[0]*(1-r.validationSplit)),B=o[0].shape[0];d=di(o,P,B),l=o,o=di(o,0,P),p=di(i,P,B),u=i,i=di(i,0,P),b=d.concat(p)}else null!=r.validationSteps&&(x=!0);const w=o.concat(i).concat(f);a.checkTrainableWeightsConsistency();const v=a.makeTrainFunction(),C=a.getDedupedMetricsNames();let k,_;x?(a.makeTestFunction(),k=a.testFunction,_=C.slice().concat(C.map(P=>"val_"+P))):(k=null,b=[],_=C.slice());const $=mx(r.callbacks,r.yieldEvery);return yield a.fitLoop(v,w,C,g,r.epochs,r.verbose,$,k,b,r.shuffle,_,r.initialEpoch,null,null)}finally{a.isTraining=!1,is(o,e),is(i,s),is(l,e),is(u,s),is(d,c),is(p,h),null!=f&&Ge(f)}})()}fitLoop(e,s,r,a,o,i,l,u,c,h,d,p,f,g){var m=this;return(0,T.Z)(function*(){null==a&&(a=32),null==o&&(o=1),null==h&&(h=!0),null==p&&(p=0);let y=!1;if(null!=u&&null!=c&&(y=!0),null!=g&&(y=!0,null==f))throw new A("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const x=m.checkNumSamples(s,a,f,"steps_per_epoch");let b;null!=x&&(b=ss(0,x)),null==i&&(i=1);const{callbackList:w,history:v}=gx(l,i,o,p,x,f,a,y,d);w.setModel(m),m.history=v,yield w.onTrainBegin(),m.stopTraining_=!1;for(let C=p;C<o;++C){yield w.onEpochBegin(C);const k={};if(null!=f)throw new Ue("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new Ue("batch shuffling is not implemneted yet");h&&Y(b);const _=Tn(b),$=Op(x,a);for(let E=0;E<$.length;++E){const P={};if(yield w.onBatchBegin(E,P),V(()=>{const B=$[E][0],U=$[E][1],G=Mr(_,B,U-B);P.batch=E,P.size=U-B;const H=Rp(s,G),K=e(H);for(let X=0;X<r.length;++X){const Z=K[X];P[r[X]]=Z,fs(Z)}if(E===$.length-1&&y){const X=m.testLoop(u,c,a);for(let j=0;j<r.length;++j){const Z=r[j],ae=X[j];fs(ae),k["val_"+Z]=ae}}}),yield w.onBatchEnd(E,P),fx(P),m.stopTraining_)break}_.dispose()}if(yield w.onEpochEnd(C,k),m.stopTraining_)break}return yield w.onTrainEnd(),yield m.history.syncData(),m.history})()}fitDataset(e,s){var r=this;return(0,T.Z)(function*(){return function nD(n,t,e){return Ep.apply(this,arguments)}(r,e,s)})()}trainOnBatch(e,s){var r=this;return(0,T.Z)(function*(){const a=yield r.standardizeUserData(e,s),o=a[0],i=a[1],u=r.makeTrainFunction()(o.concat(i)),c=[];for(const h of u){const d=yield h.data();c.push(d[0])}return Ge(u),is(a[0],e),is(a[1],s),In(c)})()}getNamedWeights(e){const s=[],r=null!=e&&e.trainableOnly,a=r?this.trainableWeights:this.weights,o=this.getWeights(r);for(let i=0;i<a.length;++i)r&&!a[i].trainable||s.push({name:a[i].originalName,tensor:o[i]});return s}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const s=jh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=s-jh().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=zs(this.loss);else if(Array.isArray(this.loss)){for(const s of this.loss)if("string"!=typeof s)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(s=>zs(s))}else{const s=Object.keys(this.loss);e={};const r=this.loss;for(const a of s){if("string"!=typeof r[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=zs(r[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[zs(Ou(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>zs(Ou(e)));{const e={};for(const s in this.metrics)e[s]=zs(Ou(this.metrics[s]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const r=Ss(Pu(e.optimizer_config));let a,o;if("string"==typeof e.loss)a=Pr(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(i=>Pr(i));else if(null!=e.loss){a={};for(const i in e.loss)a[i]=Pr(e.loss[i])}if(Array.isArray(e.metrics))o=e.metrics.map(i=>Pr(i));else if(null!=e.metrics){o={};for(const i in e.metrics)o[i]=Pr(e.metrics[i])}this.compile({loss:a,metrics:o,optimizer:r})}save(e,s){var r=this;return(0,T.Z)(function*(){if("string"==typeof e){const h=(n=>Nt.getSaveHandlers(n))(e);if(0===h.length)throw new A(`Cannot find any save handlers for URL '${e}'`);if(h.length>1)throw new A(`Found more than one (${h.length}) save handlers for URL '${e}'`);e=h[0]}if(null==e.save)throw new A("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=yield Rm(r.getNamedWeights(s)),u={modelTopology:r.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v4.5.0",convertedBy:null};if(null!=s&&s.includeOptimizer&&null!=r.optimizer){u.trainingConfig=r.getTrainingConfig();const h="optimizer",{data:d,specs:p}=yield Rm(yield r.optimizer.getWeights(),h);a.specs.push(...p),a.data=Fh([a.data,d])}return null!=r.userDefinedMetadata&&(Cx(r.userDefinedMetadata,r.name,!0),u.userDefinedMetadata=r.userDefinedMetadata),u.weightData=a.data,u.weightSpecs=a.specs,e.save(u)})()}setUserDefinedMetadata(e){Cx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}return n.className="Model",n})();function hD(n,t){return Lp.apply(this,arguments)}function Lp(){return(Lp=(0,T.Z)(function*(n,t){if(null==t&&(t={}),"string"==typeof n){const e=oI(n,t);if(0===e.length)e.push(YI(n,t));else if(e.length>1)throw new A(`Found more than one (${e.length}) load handlers for URL '${n}'`);n=e[0]}return dD(n,void 0,t)})).apply(this,arguments)}function dD(n,t,e){return Vp.apply(this,arguments)}function Vp(){return(Vp=(0,T.Z)(function*(n,t,e){if(null==e&&(e={}),null==n.load)throw new A("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=yield n.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==e.strict||e.strict,o=null!=s.weightData&&null!=s.weightSpecs&&a,i=Ss(Pu(r),t,o),l=s.trainingConfig;if(null!=l&&i.loadTrainingConfig(l),null!=s.userDefinedMetadata&&i.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new A("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:c}=pD(s.weightData,s.weightSpecs);i.loadWeights(u,a),null!=i.optimizer&&c.length>0&&(yield i.optimizer.setWeights(c)),Ge(u),Ge(c.map(h=>h.tensor))}return i})).apply(this,arguments)}function pD(n,t){const e=function Om(n,t){const e={};let s,r=0;for(const a of t){const o=a.name,i=a.dtype,l=a.shape,u=I(l);let c;if("quantization"in a){const h=a.quantization;if("uint8"===h.dtype||"uint16"===h.dtype){if(!("min"in h)||!("scale"in h))throw new Error(`Weight ${a.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==h.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${i}.`)}const d=Ah[h.dtype],p=n.slice(r,r+u*d),f="uint8"===h.dtype?new Uint8Array(p):new Uint16Array(p);if("float32"===i)if("uint8"===h.dtype||"uint16"===h.dtype){c=new Float32Array(f.length);for(let g=0;g<f.length;g++)c[g]=f[g]*h.scale+h.min}else{if("float16"!==h.dtype)throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);void 0===s&&(s=rI()),c=s(f)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${o}': ${i}`);if("uint8"!==h.dtype&&"uint16"!==h.dtype)throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let g=0;g<f.length;g++)c[g]=Math.round(f[g]*h.scale+h.min)}r+=u*d}else if("string"===i){const h=I(a.shape);c=[];for(let d=0;d<h;d++){const p=new Uint32Array(n.slice(r,r+4))[0];r+=4;const f=new Uint8Array(n.slice(r,r+p));c.push(f),r+=p}}else{const h=Ah[i],d=n.slice(r,r+u*h);if("float32"===i)c=new Float32Array(d);else if("int32"===i)c=new Int32Array(d);else if("bool"===i)c=new Uint8Array(d);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${o}': ${i}`);{c=new Float32Array(d);const p=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let y=0;y<p.length;y++)p[y]=c[2*y],f[y]=c[2*y+1];const g=Wo(p,l,"float32"),m=Wo(f,l,"float32");e[o]=Ir(g,m),g.dispose(),m.dispose()}}r+=u*h}"complex64"!==i&&(e[o]=Wo(c,l,i))}return e}(n,t),s={},r=[];return t.forEach(a=>{"optimizer"===a.group?r.push({name:a.name,tensor:e[a.name]}):s[a.name]=e[a.name]}),{modelWeights:s,optimizerWeights:r}}function fD(n){return new zr(n)}function Px(n){return cx(n)}te(zr),te((()=>{class n extends zr{}return n.className="Functional",n})()),te((()=>{class n extends zr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:bu("sequential_"),null!=e.layers)for(const s of e.layers)this.add(s)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new A(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const s=e instanceof n||e instanceof zr;let r;if(s){if(r=e,1!==r.outputs.length)throw new A("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new A("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new A("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=cx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(s)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==e.inboundNodes.length)throw new A(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new A("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ux(this.outputs[0])}this.inboundNodes=[],new Nu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Fr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,s){return null==this.model&&this.build(),this.model.call(e,s)}build(e){if(nt(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,s,r=console.log){this.built||this.build(),super.summary(e,s,r)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,s,r={}){if(!this.built)throw new Kn("The model needs to be compiled before being used.");return this.model.evaluate(e,s,r)}evaluateDataset(e,s){var r=this;return(0,T.Z)(function*(){if(!r.built)throw new Kn("The model needs to be compiled before being used.");return r.model.evaluateDataset(e,s)})()}predict(e,s={}){return null==this.model&&this.build(),this.model.predict(e,s)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}fit(e,s,r={}){var a=this;return(0,T.Z)(function*(){if(!a.built)throw new Kn("The model needs to be compiled before being used.");return a.model.fit(e,s,r)})()}fitDataset(e,s){var r=this;return(0,T.Z)(function*(){if(!r.built)throw new Kn("The model needs to be compiled before being used.");return r.model.fitDataset(e,s)})()}trainOnBatch(e,s){var r=this;return(0,T.Z)(function*(){return r.model.trainOnBatch(e,s)})()}static fromConfig(e,s,r={},a=!1){let o,i={};if(s instanceof Array){if(null==s[0].className||"Merge"===s[0].className)throw new A("Legacy serialization format not supported yet.");o=s}else S(null!=s.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=s.layers,delete s.layers,i=s;const l=new e(i);if(!(l instanceof n))throw new Ue(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const u of o){const h=Ss(u,void 0,a);a&&h.setFastWeightInitDuringBuild(!0),l.add(h)}return l}set stopTraining(e){if(null==this.model)throw new A("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new A("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const s of this.layers){const r={};r.className=s.getClassName(),r.config=s.getConfig(),e.push(r)}return{name:this.name,layers:e}}}return n.className="Sequential",n})());class Sn extends kr{getConfig(){return{}}}te((()=>{class n extends Sn{apply(e,s=1){return function nE(n,t=1){if(1!==t)throw new Ue(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return tu(n)}(e,s)}}return n.className="elu",n})()),te((()=>{class n extends Sn{apply(e){return _g(e)}}return n.className="selu",n})()),te((()=>{class n extends Sn{apply(e){return Fs(e)}}return n.className="relu",n})()),te((()=>{class n extends Sn{apply(e){return V(()=>ha(6,Fs(e)))}}return n.className="relu6",n})()),te((()=>{class n extends Sn{apply(e){return e}}return n.className="linear",n})()),te((()=>{class n extends Sn{apply(e){return pa(e)}}return n.className="sigmoid",n})()),te((()=>{class n extends Sn{apply(e){return function rE(n){return V(()=>{const t=oe(.5,D(.2,n));return On(t,0,1)})}(e)}}return n.className="hardSigmoid",n})()),te((()=>{class n extends Sn{apply(e){return Yo(e)}}return n.className="softplus",n})()),te((()=>{class n extends Sn{apply(e){return function sE(n){return V(()=>_e(n,oe(Xt(n),1)))}(e)}}return n.className="softsign",n})()),te((()=>{class n extends Sn{apply(e){return Nd(e)}}return n.className="tanh",n})());let Lx=(()=>{class n extends Sn{apply(e,s=-1){return Cd(e,s)}}return n.className="softmax",n})();function ar(n){return n.getClassName()}function Mp(n,t={}){return si(n,Rn.getMap().classNameMap,t,"activation")}function or(n){if(null==n){return Mp({className:"linear",config:{}})}if("string"==typeof n){const t={};return t.className=n,t.config={},Mp(t)}return n instanceof Sn?n:Mp(n)}te(Lx),te((()=>{class n extends Sn{apply(e,s=-1){return Cg(e,s)}}return n.className="logSoftmax",n})()),te((()=>{class n extends Sn{apply(e,s=1){return V(()=>D(pa(D(e,s)),e))}}return n.className="swish",n})()),te((()=>{class n extends Sn{apply(e){return V(()=>D(e,Nd(Yo(e))))}}return n.className="mish",n})());class Vx extends kr{}te((()=>{class n extends Vx{constructor(e){super(),function zp(n){if(null!=n&&"object"!=typeof n)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return V(()=>{let s=Wt([1]);return this.hasL1&&(s=oe(s,Se(D(this.l1,Xt(e))))),this.hasL2&&(s=oe(s,Se(D(this.l2,oi(e))))),F(s,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,s){return new e({l1:s.l1,l2:s.l2})}}return n.className="L1L2",n})());const Mx={l1l2:"L1L2"};function ht(n){return hp(n)}function zx(n,t={}){return si(n,Rn.getMap().classNameMap,t,"regularizer")}function wt(n){return null==n?null:"string"==typeof n?zx({className:n in Mx?Mx[n]:n,config:{}}):n instanceof Vx?n:zx(n)}let Bx=(()=>{class n extends qe{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,s){e=Fe(e);let r=Fs(e);return null!=this.maxValue&&(r=On(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ReLU",n})();te(Bx);let Wx=(()=>{class n extends qe{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,s){const r=Fe(e);return dd(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return n.className="LeakyReLU",n})();te(Wx);let Ux=(()=>{class n extends qe{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=bt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=wt(e.alphaRegularizer),this.alphaConstraint=jt(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new A(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const s=(e=nt(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)s[a-1]=1;this.alpha=this.addWeight("alpha",s,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)r[a]=e[a];this.inputSpec=[new Gt({ndim:e.length,axes:r})],this.built=!0}call(e,s){return e=Fe(e),xd(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Tt(this.alphaInitializer),alphaRegularizer:ht(this.alphaRegularizer),alphaConstraint:Ht(this.alphaConstraint),sharedAxes:this.sharedAxes},s=super.getConfig();return Object.assign(e,s),e}}return n.className="PReLU",n})();te(Ux);let Gx=(()=>{class n extends qe{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Ue(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,s){const r=Fe(e);return tu(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ELU",n})();te(Gx);let Hx=(()=>{class n extends qe{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,s){const r=Fe(e);return D(r,me(Fn(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ThresholdedReLU",n})();te(Hx);let jx=(()=>{class n extends qe{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Lx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,s){const r=Fe(e);return this.softmax(r,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Softmax",n})();function ba(n,t,e){if("number"==typeof n)return Fr(n,t);if(n.length!==t)throw new A(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!Z2(r))throw new A(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function ls(n,t,e,s,r=1){if(null==n)return n;let o;return o="same"===e?n:n-(t+(t-1)*(r-1))+1,Math.floor((o+s-1)/s)}function Cs(n,t,e,s){if(null==n)return null;if("valid"===s)n=n*t+nr([e-t,0]);else{if("same"!==s)throw new A(`Unsupport padding mode: ${s}.`);n*=t}return n}function Wp(n,t){return V(()=>(Vt(t),"channelsFirst"===t?Je(n,[0,2,3,1]):n))}function qx(n,t){return V(()=>(Vt(t),"channelsFirst"===t?Je(n,[0,2,3,4,1]):n))}function Up(n,t,e,s=[1,1],r="valid",a,o,i=null){return V(()=>{if(null==a&&(a="channelsLast"),Vt(a),3!==n.rank&&4!==n.rank)throw new A(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(3!==t.rank&&4!==t.rank)throw new A(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=Wp(n,a);if("causal"===r)throw new Ue("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=yN({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:e,activation:i}),"channelsFirst"===a&&(l=Je(l,[0,3,1,2])),l})}te(jx);class Lu extends qe{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Lu.verifyArgs(e),this.rank=t,Qt(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ue(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ba(e.kernelSize,t,"kernelSize"),this.strides=ba(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Vn(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vt(this.dataFormat),this.activation=or(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jt(e.biasConstraint),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.dilationRate=ba(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new A(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new A(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new A(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Ln("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!pp(t.kernelSize,"number",1,3))throw new A(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ar(this.activation),useBias:this.useBias,biasInitializer:Tt(this.biasInitializer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),biasConstraint:Ht(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class wa extends Lu{constructor(t,e){super(t,e),this.kernel=null,wa.verifyArgs(e),this.filters=e.filters,Qt(this.filters,"filters"),this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.kernelRegularizer=wt(e.kernelRegularizer)}build(t){t=nt(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new A(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return V(()=>{let s;t=Fe(t);const r=null==this.bias?null:this.bias.read(),a=Wy(this.activation.getClassName());if(null!=a&&2===this.rank)s=Up(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)s=function Kx(n,t,e,s=1,r="valid",a,o=1){return V(()=>{if(null==a&&(a="channelsLast"),Vt(a),3!==n.shape.length)throw new A(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(3!==t.shape.length)throw new A(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=e&&1!==e.shape.length)throw new A(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(n=Je(n,[0,2,1])),"causal"===r)throw new Ue("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=bg(n,t,s,"same"===r?"same":"valid","NWC",o);return null!=e&&(i=as(i,e)),i})}(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)s=Up(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ue("convolutions greater than 3D are not implemented yet.");s=function Xx(n,t,e,s=[1,1,1],r="valid",a,o){return V(()=>{if(null==a&&(a="channelsLast"),Vt(a),4!==n.rank&&5!==n.rank)throw new A(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(4!==t.rank&&5!==t.rank)throw new A(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=qx(n,a);if("causal"===r)throw new Ue("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=KS(i,t,s,"same"===r?"same":"valid","NDHWC",o),null!=e&&(i=as(i,e)),"channelsFirst"===a&&(i=Je(i,[0,4,1,2,3])),i})}(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=nt(t);const e=[],s="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<s.length;++a){const o=ls(s[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(o)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Tt(this.kernelInitializer),kernelRegularizer:ht(this.kernelRegularizer),kernelConstraint:Ht(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new A(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}let Gp=(()=>{class n extends wa{constructor(e){super(2,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!pp(e.kernelSize,"number",1,2))throw new A(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv2D",n})();te(Gp);let Hp=(()=>{class n extends wa{constructor(e){super(3,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new A(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv3D",n})();te(Hp);let Zx=(()=>{class n extends Gp{constructor(e){if(super(e),this.inputSpec=[new Gt({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new A(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=nt(e)).length)throw new A("Input should have rank 4; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new A("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Gt({ndim:4,axes:{[s]:r}})],this.built=!0}call(e,s){return V(()=>{let r=Fe(e);if(4!==r.shape.length)throw new A(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const a=r.shape;let i,l;"channelsFirst"===this.dataFormat?(i=2,l=3):(i=1,l=2);const c=a[l],d=this.kernelSize[1],f=this.strides[1],y=[a[0],Cs(a[i],this.strides[0],this.kernelSize[0],this.padding),Cs(c,f,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=Je(r,[0,2,3,1]));let x=wg(r,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(x=Je(x,[0,3,1,2])),null!=this.bias&&(x=as(x,this.bias.read(),this.dataFormat)),null!=this.activation&&(x=this.activation.apply(x)),x})}computeOutputShape(e){const s=(e=nt(e)).slice();let r,a,o;"channelsFirst"===this.dataFormat?(r=1,a=2,o=3):(r=3,a=1,o=2);const i=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return s[r]=this.filters,s[a]=Cs(s[a],u,i,this.padding),s[o]=Cs(s[o],c,l,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv2DTranspose",n})();te(Zx);let Yx=(()=>{class n extends Hp{constructor(e){if(super(e),this.inputSpec=[new Gt({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new A(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=nt(e)).length)throw new A("Input should have rank 5; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new A("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],a=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Gt({ndim:5,axes:{[s]:r}})],this.built=!0}call(e,s){return V(()=>{let r=Fe(e);if(5!==r.shape.length)throw new A(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const a=r.shape;let i,l,u;"channelsFirst"===this.dataFormat?(u=2,i=3,l=4):(u=1,i=2,l=3);const h=a[i],d=a[l],f=this.kernelSize[1],g=this.kernelSize[2],y=this.strides[1],x=this.strides[2],C=[a[0],Cs(a[u],this.strides[0],this.kernelSize[0],this.padding),Cs(h,y,f,this.padding),Cs(d,x,g,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=Je(r,[0,2,3,4,1]));let k=YS(r,this.kernel.read(),C,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(k=Je(k,[0,4,1,2,3])),null!==this.bias&&(k=as(k,this.bias.read(),this.dataFormat)),null!==this.activation&&(k=this.activation.apply(k)),k})}computeOutputShape(e){const s=(e=nt(e)).slice();let r,a,o,i;"channelsFirst"===this.dataFormat?(r=1,a=2,o=3,i=4):(r=4,a=1,o=2,i=3);const l=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],h=this.strides[0],d=this.strides[1],p=this.strides[2];return s[r]=this.filters,s[a]=Cs(s[a],h,l,this.padding),s[o]=Cs(s[o],d,u,this.padding),s[i]=Cs(s[i],p,c,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv3DTranspose",n})();te(Yx);let mD=(()=>{class n extends wa{constructor(e,s){if(super(e,s),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==s.filters)throw new A("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=s.kernelInitializer||null!=s.kernelRegularizer||null!=s.kernelConstraint)throw new A("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=s.padding&&"same"!==s.padding&&"valid"!==s.padding)throw new A(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(s.padding)}`);this.depthMultiplier=null==s.depthMultiplier?1:s.depthMultiplier,this.depthwiseInitializer=bt(s.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=wt(s.depthwiseRegularizer),this.depthwiseConstraint=jt(s.depthwiseConstraint),this.pointwiseInitializer=bt(s.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=wt(s.pointwiseRegularizer),this.pointwiseConstraint=jt(s.pointwiseConstraint)}build(e){if((e=nt(e)).length<this.rank+2)throw new A(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s]||e[s]<0)throw new A(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[s])}`);const r=e[s],a=this.kernelSize.concat([r,this.depthMultiplier]),o=[];for(let l=0;l<this.rank;++l)o.push(1);o.push(r*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):null,this.inputSpec=[new Gt({ndim:this.rank+2,axes:{[s]:r}})],this.built=!0}call(e,s){return V(()=>{let r;if(e=Fe(e),1===this.rank)throw new Ue("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Je(e,[0,2,3,1])),r=$g(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=as(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),"channelsFirst"===this.dataFormat&&(r=Je(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.pointwiseInitializer=Tt(this.pointwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.pointwiseRegularizer=ht(this.pointwiseRegularizer),e.depthwiseConstraint=Ht(this.depthwiseConstraint),e.pointwiseConstraint=Ht(this.pointwiseConstraint),e}}return n.className="SeparableConv",n})(),Qx=(()=>{class n extends mD{constructor(e){super(2,e)}}return n.className="SeparableConv2D",n})();te(Qx);let Jx=(()=>{class n extends wa{constructor(e){super(1,e),n.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!pp(e.kernelSize,"number",1,1))throw new A(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv1D",n})();te(Jx);let eb=(()=>{class n extends qe{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,s){return V(()=>{if(e=Fe(e),"channelsLast"===this.dataFormat){const r=vu(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return vu(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const r=vu(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return vu(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Cropping2D",n})();te(eb);let tb=(()=>{class n extends qe{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vt(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function q2(n){Lr(U2,"InterpolationFormat",n)}(this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,s){return V(()=>{let r=Fe(e);const a=r.shape;if("channelsFirst"===this.dataFormat){r=Je(r,[0,2,3,1]);const o=this.size[0]*a[2],i=this.size[1]*a[3],l="nearest"===this.interpolation?gs.resizeNearestNeighbor(r,[o,i]):gs.resizeBilinear(r,[o,i]);return Je(l,[0,3,1,2])}{const o=this.size[0]*a[1],i=this.size[1]*a[2];return"nearest"===this.interpolation?gs.resizeNearestNeighbor(r,[o,i]):gs.resizeBilinear(r,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}}return n.className="UpSampling2D",n})();te(tb);let nb=(()=>{class n extends Lu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=bt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jt(e.depthwiseConstraint),this.depthwiseRegularizer=wt(e.depthwiseRegularizer)}build(e){if((e=nt(e)).length<4)throw new A(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const s="channelsFirst"===this.dataFormat?1:3;if(null==e[s]||e[s]<0)throw new A(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[s]}).`);const r=e[s];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return V(()=>{let r=function gD(n,t,e=[1,1],s="valid",r,a){return V(()=>{null==r&&(r="channelsLast"),Vt(r);let o=Wp(n,r);if(4!==n.rank)throw new A(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(4!==t.rank)throw new A(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=eu(o,t,e,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(o=Je(o,[0,3,1,2])),o})}(e=Fe(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=as(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=nt(e);const r="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=ls("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),i=ls(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,o,i]:[e[0],o,i,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Tt(this.depthwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.depthwiseConstraint=Ht(this.depthwiseRegularizer),e}}return n.className="DepthwiseConv2D",n})();function sb(n,t,e,s){if(Array.isArray(n)){if(null!=t||null!=e)throw new A("When inputs is an array, neither initialState or constants should be provided");null!=s&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(a){return null==a||Array.isArray(a)?a:[a]}return{inputs:n,initialState:t=r(t),constants:e=r(e)}}function rb(n,t,e,s=!1,r,a,o=!1,i=!1){return V(()=>{const l=t.shape.length;if(l<3)throw new A(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(ss(2,l));if(t=Je(t,u),null!=a)throw new Ue("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=me(me(r,"bool"),"float32")).rank===l-1&&(r=kn(r,-1)),r=Je(r,u)),s&&(t=Dr(t,0),null!=r&&(r=Dr(r,0)));const c=[];let h,d=e;const p=t.shape[0],f=Ar(t);let g,m;null!=r&&(g=Ar(r));for(let y=0;y<p;++y){const x=f[y],b=V(()=>n(x,d));if(null==r)h=b[0],d=b[1];else{const w=V(()=>{const v=g[y],C=Ie(jn(v),v);return{output:oe(D(b[0],v),D(d[0],C)),newStates:d.map(($,E)=>oe(D(b[1][E],v),D($,C)))}});h=w.output,d=w.newStates}i&&c.push(h)}return i&&(m=Ps(c,1)),[h,m,d]})}te(nb);let Br=(()=>{class n extends qe{constructor(e){let s;if(super(e),null==e.cell)throw new A("cell property is missing for the constructor of RNN.");if(s=Array.isArray(e.cell)?new Kp({cells:e.cell}):e.cell,null==s.stateSize)throw new A("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=s,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Gt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ss(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(s=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){xp(e)&&(e=e[0]);let s=this.cell.stateSize;Array.isArray(s)||(s=[s]);const r=s[0];let a;if(a=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){const o=[];for(const i of s)o.push([e[0],i]);return[a].concat(o)}return a}computeMask(e,s){return V(()=>{Array.isArray(s)&&(s=s[0]);const r=this.returnSequences?s:null;if(this.returnState){const a=this.states.map(o=>null);return[r].concat(a)}return r})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,s=[];for(let r=0;r<e;++r)s.push(null);return s}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Ue("Constants support is not implemented in RNN yet.");xp(e)&&(e=e[0]);const r=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new Gt({shape:[r,null,...a]});const o=[e[0]].concat(e.slice(2));let i;if(this.cell.build(o),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!we(this.stateSpec.map(l=>l.shape[l.shape.length-1]),i))throw new A(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(l=>new Gt({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(e,s=!1){V(()=>{if(!this.stateful)throw new xs("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(null==r)throw new A("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>Wt([r,a])):[Wt([r,this.cell.stateSize])];else if(null==e)Ge(this.states_),null!=this.keptStates&&(Ge(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>Wt([r,a])):this.states_[0]=Wt([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new A(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===s?this.keptStates.push(this.states_.slice()):Ge(this.states_);for(let a=0;a<this.states_.length;++a){const o=e[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,l=[r,i];if(!we(o.shape,l))throw new A(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${o.shape}`);this.states_[a]=o}}this.states_=this.states_.map(a=>fs(a.clone()))})}apply(e,s){let r=null==s?null:s.initialState,a=null==s?null:s.constants;null==s&&(s={});const o=sb(e,r,a,this.numConstants);e=o.inputs,r=o.initialState,a=o.constants;let i=[],l=[];if(null!=r){s.initialState=r,i=i.concat(r),this.stateSpec=[];for(const c of r)this.stateSpec.push(new Gt({shape:c.shape}));l=l.concat(this.stateSpec)}if(null!=a&&(s.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof Is){const c=[e].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(c,s);return this.inputSpec=d,p}return super.apply(e,s)}call(e,s){return V(()=>{const r=null==s?null:s.mask,a=null==s?null:s.training;let o=null==s?null:s.initialState;e=Fe(e),null==o&&(o=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new A(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:a},c=rb((g,m)=>{const y=this.cell.call([g].concat(m),l);return[y[0],y.slice(1)]},e,o,this.goBackwards,r,null,this.unroll,this.returnSequences),h=c[0],d=c[1],p=c[2];this.stateful&&this.resetStates(p,a);const f=this.returnSequences?d:h;return this.returnState?[f].concat(p):f})}getInitialState(e){return V(()=>{let s=Wt(e.shape);return s=Se(s,[1,2]),s=ai(s),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?gp(s,[1,r]):s):this.cell.stateSize>1?[gp(s,[1,this.cell.stateSize])]:[s]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),s={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(s.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===n.className&&(s.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),s)}static fromConfig(e,s,r={}){const o=Ss(s.cell,r);return new e(Object.assign(s,{cell:o}))}}return n.className="RNN",n})();te(Br);class pi extends qe{}let jp=(()=>{class n extends pi{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Qt(this.units,"units"),this.activation=or(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ya([1,nr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ya([1,nr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return V(()=>{if(2!==e.length)throw new A(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const a=null!=s.training&&s.training;let o;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ir({ones:()=>jn(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ir({ones:()=>jn(r),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,l=this.recurrentDropoutMask;o=ws(null!=i?D(e,i):e,this.kernel.read()),null!=this.bias&&(o=as(o,this.bias.read())),null!=l&&(r=D(r,l));let u=oe(o,ws(r,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:ar(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),s)}}return n.className="SimpleRNNCell",n})();te(jp);let ab=(()=>{class n extends Br{constructor(e){e.cell=new jp(e),super(e)}call(e,s){return V(()=>(null!=this.cell.dropoutMask&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return new e(s)}}return n.className="SimpleRNN",n})();te(ab);let qp=(()=>{class n extends pi{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new A("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Qt(this.units,"units"),this.activation=or(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=or(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ya([1,nr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ya([1,nr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return V(()=>{if(2!==e.length)throw new A(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=null!=s.training&&s.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ir({ones:()=>jn(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ir({ones:()=>jn(a),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const i=this.recurrentDropoutMask;let l,u,c;0<this.dropout&&this.dropout<1&&(e=D(e,this.dropoutMask[0]));let h=ws(e,this.kernel.read());this.useBias&&(h=as(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=D(a,i[0]));const d=this.recurrentKernel.read(),[p,f]=Pn(d,[2*this.units,this.units],d.rank-1),g=ws(a,p),[m,y,x]=Pn(h,3,h.rank-1),[b,w]=Pn(g,2,g.rank-1);l=this.recurrentActivation.apply(oe(m,b)),u=this.recurrentActivation.apply(oe(y,w));const v=ws(D(u,a),f);c=this.activation.apply(oe(x,v));const C=oe(D(l,a),D(oe(1,xt(l)),c));return[C,C]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:ar(this.activation),recurrentActivation:ar(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),s)}}return n.className="GRUCell",n})();te(qp);let ob=(()=>{class n extends Br{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new qp(e),super(e)}call(e,s){return V(()=>(null!=this.cell.dropoutMask&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return n.className="GRU",n})();te(ob);let Vu=(()=>{class n extends pi{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Qt(this.units,"units"),this.activation=or(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=or(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ya([1,nr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ya([1,nr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;let a;if(e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;a=new((s=class extends Zn{apply(u,c){const h=o.apply([i]),d=(new Jy).apply([i]),p=o.apply([2*i]);return Zy(Zy(h,d),p)}}).className="CustomInit",s)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,s){return V(()=>{const r=null!=s.training&&s.training;if(3!==e.length)throw new A(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ir({ones:()=>jn(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ir({ones:()=>jn(a),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const l=this.recurrentDropoutMask;let u,c,h,d;0<this.dropout&&this.dropout<1&&(e=D(e,this.dropoutMask[0]));let p=ws(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=D(a,l[0])),p=oe(p,ws(a,this.recurrentKernel.read())),this.useBias&&(p=as(p,this.bias.read()));const[f,g,m,y]=Pn(p,4,p.rank-1);u=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(g),h=oe(D(c,o),D(u,this.activation.apply(m))),d=this.recurrentActivation.apply(y);const x=D(d,this.activation.apply(h));return[x,x,h]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:ar(this.activation),recurrentActivation:ar(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),recurrentInitializer:Tt(this.recurrentInitializer),biasInitializer:Tt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),recurrentConstraint:Ht(this.recurrentConstraint),biasConstraint:Ht(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),s)}}return n.className="LSTMCell",n})();te(Vu);let ib=(()=>{class n extends Br{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Vu(e),super(e)}call(e,s){return V(()=>(null!=this.cell.dropoutMask&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return n.className="LSTM",n})();te(ib);let Kp=(()=>{class n extends pi{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const s of this.cells.slice().reverse())Array.isArray(s.stateSize)?e.push(...s.stateSize):e.push(s.stateSize);return e}call(e,s){return V(()=>{let r=e.slice(1);const a=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?a.push(r.splice(0,l.stateSize.length)):a.push(r.splice(0,1));a.reverse();const o=[];let i;for(let l=0;l<this.cells.length;++l){const u=this.cells[l];r=a[l],i=0===l?[e[0]].concat(r):[i[0]].concat(r),i=u.call(i,s),o.push(i.slice(1))}r=[];for(const l of o.slice().reverse())r.push(...l);return[i[0]].concat(r)})}build(e){let s;xp(e)&&(e=e[0]),this.cells.forEach((r,a)=>{Vr(`RNNCell_${a}`,()=>{r.build(e),s=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,e=[e[0],s]})}),this.built=!0}getConfig(){const e=super.getConfig(),a={cells:this.cells.map(o=>({className:o.getClassName(),config:o.getConfig()}))};return Object.assign(Object.assign({},e),a)}static fromConfig(e,s,r={}){const a=[];for(const o of s.cells)a.push(Ss(o,r));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const s of this.cells)e.push(...s.nonTrainableWeights);if(!this.trainable){const s=[];for(const r of this.cells)s.push(...r.trainableWeights);return s.concat(e)}return e}getWeights(){const e=[];for(const s of this.cells)e.push(...s.weights);return bp(e)}setWeights(e){const s=[];for(const r of this.cells){const o=e.splice(r.weights.length);for(let i=0;i<r.weights.length;++i)s.push([r.weights[i],o[i]])}wp(s)}}return n.className="StackedRNNCells",n})();function ir(n){const{ones:t,rate:e,training:s=!1,count:r=1,dropoutFunc:a}=n,o=()=>null!=a?a(t(),e):Qy(t(),e),i=()=>ii(o,t,s);return!r||r<=1?fs(i().clone()):Array(r).fill(void 0).map(i).map(u=>fs(u.clone()))}te(Kp);let xD=(()=>{class n extends Br{constructor(e){if(e.unroll)throw new Ue("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ue("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Gt({ndim:5})]}call(e,s){return V(()=>{if(null!=this.cell.dropoutMask&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),s&&s.constants)throw new A("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})})}computeOutputShape(e){let s=this.computeSingleOutputShape(e);return this.returnSequences||(s=[s[0],...s.slice(2)]),this.returnState&&(s=[s,...Array(2).fill([e[0],...s.slice(-3)])]),s}getInitialState(e){return V(()=>{const{stateSize:s}=this.cell,a=this.computeSingleOutputShape(e.shape),i=Wt([a[0],...a.slice(2)]);return Array.isArray(s)?Array(s.length).fill(i):[i]})}resetStates(e,s=!1){V(()=>{if(!this.stateful)throw new xs("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,a=this.computeSingleOutputShape(r),o=[a[0],...a.slice(2)];if(null==r[0])throw new A("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>Wt(o)):[Wt(o)];else if(null==e)Ge(this.states_),null!=this.keptStates&&(Ge(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Wt(o)):this.states_[0]=Wt(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new A(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);s?this.keptStates.push(this.states_.slice()):Ge(this.states_);for(let l=0;l<this.states_.length;++l){const u=e[l],c=o;if(!we(u.shape,c))throw new A(`State ${l} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>fs(l.clone()))})}computeSingleOutputShape(e){const{dataFormat:s,filters:r,kernelSize:a,padding:o,strides:i,dilationRate:l}=this.cell,u="channelsFirst"===s,h=e[u?4:3],d=ls(e[u?3:2],a[0],o,i[0],l[0]),p=ls(h,a[1],o,i[1],l[1]);return[...e.slice(0,2),...u?[r,d,p]:[d,p,r]]}}return n.className="ConvRNN2D",n})(),Xp=(()=>{class n extends Vu{constructor(e){const{filters:s,kernelSize:r,strides:a,padding:o,dataFormat:i,dilationRate:l}=e;super(Object.assign(Object.assign({},e),{units:s})),this.filters=s,Qt(this.filters,"filters"),this.kernelSize=ba(r,2,"kernelSize"),this.kernelSize.forEach(u=>Qt(u,"kernelSize")),this.strides=ba(a||1,2,"strides"),this.strides.forEach(u=>Qt(u,"strides")),this.padding=o||"valid",Vn(this.padding),this.dataFormat=i||"channelsLast",Vt(this.dataFormat),this.dilationRate=ba(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>Qt(u,"dilationRate"))}build(e){var s;e=nt(e);const r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new A(`The channel dimension of the input should be defined. Found ${e[r]}`);const i=this.kernelSize.concat([e[r],4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,h=this.filters;u=new((s=class extends Zn{apply(p,f){return mp([c.apply([h]),Js([h]),c.apply([2*h])])}}).className="CustomInit",s)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,s){return V(()=>{if(3!==e.length)throw new A(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=s.training||!1,a=e[0],o=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ir({ones:()=>jn(a),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(ie,ue,le)=>ue&&ue[le]?D(ue[le],ie):ie;let h=c(a,u,0),d=c(a,u,1),p=c(a,u,2),f=c(a,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ir({ones:()=>jn(o),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const g=this.recurrentDropoutMask;let m=c(o,g,0),y=c(o,g,1),x=c(o,g,2),b=c(o,g,3);const[v,C,k,_]=Pn(this.kernel.read(),4,3),[$,E,P,B]=this.useBias?Pn(this.bias.read(),4):[null,null,null,null];h=this.inputConv(h,v,$,this.padding),d=this.inputConv(d,C,E,this.padding),p=this.inputConv(p,k,P,this.padding),f=this.inputConv(f,_,B,this.padding);const[U,G,H,K]=Pn(this.recurrentKernel.read(),4,3);m=this.recurrentConv(m,U),y=this.recurrentConv(y,G),x=this.recurrentConv(x,H),b=this.recurrentConv(b,K);const X=this.recurrentActivation.apply(oe(h,m)),j=this.recurrentActivation.apply(oe(d,y)),Z=oe(D(j,i),D(X,this.activation.apply(oe(p,x)))),ae=D(this.recurrentActivation.apply(oe(f,b)),this.activation.apply(Z));return[ae,ae,Z]})}getConfig(){const r=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]])}return e}(super.getConfig(),["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),a)}inputConv(e,s,r,a){const o=$r(e,s,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?as(o,r,this.dataFormat):o}recurrentConv(e,s){return $r(e,s,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}return n.className="ConvLSTM2DCell",n})();te(Xp);let lb=(()=>{class n extends xD{constructor(e){const s=new Xp(e);super(Object.assign(Object.assign({},e),{cell:s}))}static fromConfig(e,s){return new e(s)}}return n.className="ConvLSTM2D",n})();te(lb);let Zp=(()=>{class n extends qe{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const s=e.shape,r=[];for(let a=0;a<this.noiseShape.length;++a)r.push(null==this.noiseShape[a]?s[a]:this.noiseShape[a]);return r}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e);if(0<this.rate&&this.rate<1){const a=null!=s.training&&s.training,o=this.getNoiseShape(r);return ii(()=>Qy(r,this.rate,o,this.seed),()=>r,a)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},s=super.getConfig();return Object.assign(e,s),e}dispose(){return super.dispose()}}return n.className="Dropout",n})();te(Zp);let ub=(()=>{class n extends Zp{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const s=e.shape;return[s[0],1,s[2]]}}return n.className="SpatialDropout1D",n})();te(ub);let cb=(()=>{class n extends qe{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=[s,e.inputDim]}this.units=e.units,Qt(this.units,"units"),this.activation=or(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.biasConstraint=jt(e.biasConstraint),this.kernelRegularizer=wt(e.kernelRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const s=(e=nt(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[s,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:s}}],this.built=!0}computeOutputShape(e){const s=(e=nt(e)).slice();return s[s.length-1]=this.units,s}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e),a=Wy(this.activation.getClassName());let o;return null!=a?o=ws(r,this.kernel.read(),a,this.bias?this.bias.read():null):(o=ws(r,this.kernel.read()),null!=this.bias&&(o=as(o,this.bias.read())),null!=this.activation&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:ar(this.activation),useBias:this.useBias,kernelInitializer:Tt(this.kernelInitializer),biasInitializer:Tt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:Ht(this.kernelConstraint),biasConstraint:Ht(this.biasConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Dense",n})();te(cb);let hb=(()=>{class n extends qe{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=nt(e);for(const s of e.slice(1))if(null==s)throw new A(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],tr(e,1)]}call(e,s){return V(()=>{this.invokeCallHook(e,s);let r=Fe(e);if("channelsFirst"===this.dataFormat&&r.rank>1){const a=[0];for(let o=2;o<r.rank;++o)a.push(o);a.push(1),r=Je(r,a)}return function tE(n){if(n.rank<=1)throw new A(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],tr(n.shape,1)];return F(n,t)}(r)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const s=super.getConfig();return Object.assign(e,s),e}}return n.className="Flatten",n})();te(hb);let db=(()=>{class n extends qe{constructor(e){super(e),this.supportsMasking=!0,this.activation=or(e.activation)}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e);return this.activation.apply(r)})}getConfig(){const e={activation:ar(this.activation)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Activation",n})();te(db);let pb=(()=>{class n extends qe{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,s){return V(()=>function J2(n,t){return V(()=>{if(2!==n.shape.length)throw new A(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);return gp(ai(n,1),[1,t,1])})}(e=Fe(e),this.n))}getConfig(){const e={n:this.n},s=super.getConfig();return Object.assign(e,s),e}}return n.className="RepeatVector",n})();te(pb);let fb=(()=>{class n extends qe{constructor(e){super(e),this.targetShape=e.targetShape;for(let s=0;s<this.targetShape.length;++s)this.isUnknown(this.targetShape[s])&&(this.targetShape[s]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,s){const r="Total size of new array must be unchanged.",a=s.slice();let o=1,i=null;for(let u=0;u<a.length;++u){const c=a[u];if(this.isUnknown(c)){if(null!==i)throw new A("Can only specifiy one unknown dimension.");i=u}else o*=c}const l=tr(e);if(null!==i){if(0===o||l%o!=0)throw new A(r);a[i]=l/o}else if(l!==o)throw new A(r);return a}computeOutputShape(e){let s=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){s=!0;break}return s?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e),a=r.shape,o=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return F(r,o)})}getConfig(){const e={targetShape:this.targetShape},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Reshape",n})();te(fb);let mb=(()=>{class n extends qe{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const s=ss(1,e.dims.length+1);if(!we(e.dims.slice().sort(),s))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Gt({ndim:this.dims.length+1})]}computeOutputShape(e){const s=(e=nt(e)).slice();return this.dims.forEach((r,a)=>{s[a+1]=e[r]}),s}call(e,s){return Je(Fe(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Permute",n})();te(mb);let gb=(()=>{class n extends qe{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={maskValue:this.maskValue};return Object.assign(s,e),s}computeMask(e,s){const r=Fe(e);return od(Xo(r,this.maskValue),-1)}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e),i=od(Xo(r,this.maskValue),-1,!0);return D(r,me(i,r.dtype))})}}return n.className="Masking",n})();te(gb);let yb=(()=>{class n extends qe{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=null==e.inputLength?[s,null]:[s].concat(ft(e.inputLength))}this.inputDim=e.inputDim,Qt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Qt(this.outputDim,"outputDim"),this.embeddingsInitializer=bt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=wt(e.embeddingsRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.embeddingsConstraint=jt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,s){return V(()=>this.maskZero?(e=Fe(e),Xo(e,Qe(e))):null)}computeOutputShape(e){if(e=nt(e),null==this.inputLength)return[...e,this.outputDim];const s=ft(this.inputLength);if(s.length!==e.length-1)throw new A(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let a=0;a<s.length;++a){const o=s[a],i=e[a+1];if(null!=o&&null!=i&&o!==i)throw new A(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==o&&(s[r]=i),r++}}return[e[0],...s,this.outputDim]}call(e,s){return V(()=>{this.invokeCallHook(e,s);let r=Fe(e);"int32"!==r.dtype&&(r=bs(r,"int32"));const a=Yy(this.embeddings.read(),F(r,[r.size]));return F(a,nt(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Tt(this.embeddingsInitializer),embeddingsRegularizer:ht(this.embeddingsRegularizer),activityRegularizer:ht(this.activityRegularizer),embeddingsConstraint:Ht(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Embedding",n})();te(yb);class Wr extends qe{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ue}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],o=e[r];if(null==a||null==o||a<0||o<0)s.push(null);else if(1===a)s.push(o);else if(1===o)s.push(a);else{if(a!==o)throw new A("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(a)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[nt(t)]),t.length<2)throw new A(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=er(e),e.length>1)throw new A(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const o=null==t[a]?null:t[a].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const r=t.map(a=>a.length);this.reshapeRequired=-1!==t.indexOf(null)||1!==er(r).length}call(t,e){return V(()=>{if(this.reshapeRequired){const s=[],r=t.map(a=>a.rank);if(-1===r.indexOf(null)){const a=nr(r);for(let o of t){const i=o.rank;for(let l=0;l<a-i;++l)o=ai(o,1);s.push(o)}return this.mergeFunction(s)}{let a=!1;for(const l of t){const u=l.rank;if(null==u){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=F(l,[h].concat(tr(c.slice(1))));p=Je(p,[1,0]),p=F(p,d),s.push(p),a=!0}else if(u>1){const c=ss(1,u).concat([0]);s.push(Je(l,c)),a=!0}else s.push(l)}let o=this.mergeFunction(s);const i=o.rank;if(a)if(null==i){const l=o.shape,c=l[l.length-1],h=[c].concat(l.slice(0,l.length-1));o=F(Je(F(o,[-1,c]),[1,0]),h)}else if(i>1){const l=[i-1].concat(ss(0,i-1));o=Je(o,l)}return o}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const a=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,a)}let s=[];for(const r of t)null!=r&&null!==r[0]&&s.push(r[0]);return s=er(s),e=1===s.length?s.concat(e):[null].concat(e),e}computeMask(t,e){return V(()=>{if(null==e)return null;if(!Array.isArray(e))throw new A("`mask` should be an Array");if(!Array.isArray(t))throw new A("`inputs` should be an Array");if(e.length!==t.length)throw new A(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>null==r))return null;let s=(e=e.map(r=>null==r?r:kn(r,0)))[0];for(let r=1;r<e.length-1;++r)s=Os(s,e[r]);return s})}}let Mu=(()=>{class n extends Wr{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=oe(s,e[r]);return s})}}return n.className="Add",n})();te(Mu);let zu=(()=>{class n extends Wr{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=D(s,e[r]);return s})}}return n.className="Multiply",n})();te(zu);let Bu=(()=>{class n extends Wr{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=oe(s,e[r]);return D(1/e.length,s)})}}return n.className="Average",n})();te(Bu);let Wu=(()=>{class n extends Wr{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=Xs(s,e[r]);return s})}}return n.className="Maximum",n})();te(Wu);let Uu=(()=>{class n extends Wr{constructor(e){super(e)}mergeFunction(e){return V(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=ha(s,e[r]);return s})}}return n.className="Minimum",n})();te(Uu);let Gu=(()=>{class n extends Wr{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new A("A `Concatenate` layer should be called on a list of at least 2 inputs");let s=!0;for(const a of e)if(null!=a){s=!1;break}if(s)return;const r=[];for(let a=0;a<e.length;++a){const o=e[a].slice();o.splice(this.axis,1);let i=!1;for(const l of r)if(we(l,o)){i=!0;break}i||r.push(o)}if(r.length>1)throw new A("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return V(()=>mp(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new A("A `Concatenate` layer should be called on a list of inputs.");const s=e,r=s[0].slice(),a=this.axis<0?r.length+this.axis:this.axis;for(const o of s.slice(1)){if(null==r[a]||null==o[a]){r[a]=null;break}r[a]+=o[a]}return r}computeMask(e,s){if(null==s)return null;if(!Array.isArray(s))throw new A("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new A("`inputs` should be an array for Concatenate");if(s.length!==e.length)throw new A(`Mismatch in the length of mask (${s.length}) and the legnth of inputs (${e.length})`);return V(()=>{let r=!0;if(s.forEach(i=>{null==i||(r=!1)}),r)return null;const a=[];for(let i=0;i<e.length;++i)a.push(null==s[i]?me(jn(e[i]),"bool"):s[i].rank<e[i].rank?kn(s[i],-1):s[i]);const o=ln(a,this.axis);return xg(o,-1,!1)})}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Concatenate",n})();function fi(n,t){for(;n<0;)n+=t;return n}te(Gu);let xb=(()=>{class n extends Wr{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){S(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0],r=e[1];if(s.length>3||r.length>3)throw new Ue("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(s,r);if(s[a[0]]!==r[a[1]])throw new A(`Dimension incompatibility: ${s[a[0]]} !== ${r[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new A(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let a,s=e[0],r=e[1];return a=Array.isArray(this.axes)?this.axes.map((o,i)=>fi(o,e[i].shape.length)):[fi(this.axes,s.shape.length),fi(this.axes,r.shape.length)],this.normalize&&(s=_u(s,a[0]),r=_u(r,a[1])),function bD(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Ue("batchDot is not implemented for tensors of 4D or higher rank yet");if(S(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),S(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof e&&(e=[e,e]),"complex64"===n.dtype||"complex64"===t.dtype)throw new Ue("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;null==e&&(e=[s-1,r-2]);const a=e;return V(()=>{let o,i;if(s>r){o=s-r;const l=[];for(let u=0;u<o;++u)l.push(1);t=F(t,t.shape.concat(l))}else if(r>s){o=r-s;const l=[];for(let u=0;u<o;++u)l.push(1);n=F(n,n.shape.concat(l))}else o=0;if(i=2===n.shape.length&&2===t.shape.length?a[0]===a[1]?Se(D(n,t),a[0]):Se(D(Je(n,[1,0]),t),a[1]):st(n,t,a[0]!==n.shape.length-1,a[1]===t.shape.length-1),o>0){let l;l=s>r?s+r-3:s-1;const u=[];for(let c=l;c<l+o;++c)u.push(c);i=Qo(i,u)}return 1===i.shape.length&&(i=kn(i,1)),i})}(s,r,a)}interpretAxes(e,s){let r;return r=Array.isArray(this.axes)?this.axes:[fi(this.axes,e.length),fi(this.axes,s.length)],r}computeOutputShape(e){S(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0].slice(),r=e[1].slice();if(s.length>3||r.length>3)throw new Ue("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(s,r);s.splice(a[0],1),r.splice(a[1],1),r.splice(0,1);const o=s.concat(r);return 1===o.length&&o.push(1),o}computeMask(e,s){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Dot",n})();te(xb);let bb=(()=>{class n extends qe{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={stddev:this.stddev};return Object.assign(s,e),s}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e);return ii(()=>oe(Iu(r.shape,0,this.stddev),r),()=>r,s.training||!1)})}}return n.className="GaussianNoise",n})();te(bb);let wb=(()=>{class n extends qe{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return V(()=>{this.invokeCallHook(e,s);const r=Fe(e);return this.rate>0&&this.rate<1?ii(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return D(r,Iu(r.shape,1,o))},()=>r,s.training||!1):r})}}return n.className="GaussianDropout",n})();te(wb);let vb=(()=>{class n extends qe{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Fe(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return V(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return ii(()=>{const o=Fe(e),u=-1.7580993408473766;let c=Er(da(r),this.rate);c=bs(c,"float32");const h=((1-this.rate)*(1+this.rate*u**2))**-.5,d=-h*u*this.rate,p=oe(D(o,c),D(oe(c,-1),u));return oe(D(p,h),d)},()=>Fe(e),s.training||!1)}return e})}}return n.className="AlphaDropout",n})();function mi(n,t,e,s,r,a=.001){let o;if(2===n.rank)o=TS(n,t,e,s,r,a);else if(3===n.rank)o=$S(n,t,e,s,r,a);else{if(4!==n.rank)throw new Ue(`batchNormalization is not implemented for array of rank ${n.rank} yet`);o=DS(n,t,e,s,r,a)}return o}te(vb);let Ib=(()=>{class n extends qe{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=bt(e.betaInitializer||"zeros"),this.gammaInitializer=bt(e.gammaInitializer||"ones"),this.movingMeanInitializer=bt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=bt(e.movingVarianceInitializer||"ones"),this.betaConstraint=jt(e.betaConstraint),this.gammaConstraint=jt(e.gammaConstraint),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer)}build(e){e=nt(e);const s=this.axis>=0?this.axis:this.axis+e.length,r=e[s];if(null==r)throw new A(`Axis ${s} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Gt({ndim:e.length,axes:{[s]:r}})];const a=[r];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,s){return V(()=>{const r=null!=s.training&&s.training,a=Fe(e),o=a.shape,i=o.length,l=ss(0,i),u=this.axis>=0?this.axis:this.axis+i;l.splice(u,1);const c=Fr(1,i);c[u]=o[u];const h=l.slice();h.sort();const d=!we(h,ss(0,i).slice(0,i-1));if(!r)return(()=>{if(d){const b=F(this.movingMean.read(),c),w=F(this.movingVariance.read(),c),v=this.center?F(this.beta.read(),c):null,C=this.scale?F(this.gamma.read(),c):null;return mi(a,b,w,v,C,this.epsilon)}return mi(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[f,g,m]=function ID(n,t,e,s,r=.001){return we(s.slice().sort(),ss(0,n.rank-1))?function wD(n,t,e,s,r=.001){return V(()=>{const a=gd(n,s),o=a.mean,i=a.variance;return[mi(n,o,i,e,t,r),o,i]})}(n,t,e,s,r):function vD(n,t,e,s,r=.001){return V(()=>{const a=gd(n,s),o=a.mean,i=a.variance,l=[];for(const f of ss(0,n.rank))-1!==s.indexOf(f)?l.push(1):l.push(n.shape[f]);const u=F(o,l),c=F(i,l),h=null==t?null:F(t,l),d=null==e?null:F(e,l);return[mi(n,u,c,d,h,r),o,i]})}(n,t,e,s,r)}(a,this.gamma.read(),this.beta.read(),l,this.epsilon),y=(b,w,v)=>{V(()=>{const C=1-v,k=b.read(),_=D(Ie(k,w),C);b.write(Ie(k,_))})};return(()=>{y(this.movingMean,g,this.momentum),y(this.movingVariance,m,this.momentum)})(),f})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),movingMeanInitializer:Tt(this.movingMeanInitializer),movingVarianceInitializer:Tt(this.movingVarianceInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer),betaConstraint:Ht(this.betaConstraint),gammaConstraint:Ht(this.gammaConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="BatchNormalization",n})();te(Ib);let Sb=(()=>{class n extends qe{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const s of this.axis)if(!Number.isInteger(s))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=bt(e.betaInitializer||"zeros"),this.gammaInitializer=bt(e.gammaInitializer||"ones"),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer),this.supportsMasking=!0}build(e){const s=(e=nt(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=s);for(const o of this.axis)if(o<0||o>=s)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==er(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(o=>e[o]);this.gamma=this.scale?this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,s){const r=Fe(e),a=r.shape,o=a.length;return V(()=>{let{mean:l,variance:u}=gd(r,this.axis,!0);const c=Fr(1,o);for(const m of this.axis)c[m]=a[m];const h=m=>null!=m&&m.shape.length!==o?F(m,c):m;let d=this.scale?h(this.gamma.read()):null,p=this.center?h(this.beta.read()):null;const f=[],g=[];for(let m=0;m<o;++m)-1!==this.axis.indexOf(m)?(f.push(a[m]),g.push(1)):(f.push(1),g.push(a[m]));return l=ts(l,f),u=ts(u,f),null!=d&&(d=ts(d,g)),null!=p&&(p=ts(p,g)),mi(r,l,u,p,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Tt(this.betaInitializer),gammaInitializer:Tt(this.gammaInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="LayerNormalization",n})();te(Sb);let Cb=(()=>{class n extends qe{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new A(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let s,r;if("number"==typeof e.padding[0])s=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new A(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(s=e.padding[0],2!==e.padding[1].length)throw new A(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[s,r]}this.inputSpec=[new Gt({ndim:4})]}computeOutputShape(e){let s,r;return e=nt(e),"channelsFirst"===this.dataFormat?(s=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],s,r]):(s=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],s,r,e[3]])}call(e,s){return V(()=>function SD(n,t,e){return V(()=>{if(4!==n.rank)throw new A(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new A("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==e&&(e="channelsLast"),"channelsLast"!==e&&"channelsFirst"!==e)throw new A(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===e?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],yd(n,s)})}(Fe(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ZeroPadding2D",n})();function Hu(n,t,e,s,r,a){return V(()=>{let o;Vt(r),Gy(a),Vn(s),null==e&&(e=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),n=Wp(n,r);const i="same"===s?"same":"valid";return o="max"===a?fd(n,t,e,i):ud(n,t,e,i),"channelsFirst"===r&&(o=Je(o,[0,3,1,2])),o})}function Nb(n,t,e,s,r,a){return V(()=>{let o;Vt(r),Gy(a),Vn(s),null==e&&(e=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),n=qx(n,r);const i="same"===s?"same":"valid";return o="max"===a?wC(n,t,e,i):SS(n,t,e,i),"channelsFirst"===r&&(o=Je(o,[0,4,1,2,3])),o})}te(Cb);class kb extends qe{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new A(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Qt(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new A(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Qt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Vn(this.padding),this.inputSpec=[new Gt({ndim:3})]}computeOutputShape(t){const e=ls((t=nt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return V(()=>{this.invokeCallHook(t,e),t=ai(Fe(t),2);const s=this.poolingFunction(Fe(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Qo(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}let Tb=(()=>{class n extends kb{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Vt(o),Vn(a),Hu(e,s,r,a,o,"max")}}return n.className="MaxPooling1D",n})();te(Tb);let _b=(()=>{class n extends kb{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Vt(o),Vn(a),Hu(e,s,r,a,o,"avg")}}return n.className="AveragePooling1D",n})();te(_b);class $b extends qe{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new A(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Qt(this.poolSize,"poolSize"),Qt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Vt(this.dataFormat),Vn(this.padding),this.inputSpec=[new Gt({ndim:4})]}computeOutputShape(t){t=nt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],s="channelsFirst"===this.dataFormat?t[3]:t[2];return e=ls(e,this.poolSize[0],this.padding,this.strides[0]),s=ls(s,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return V(()=>(this.invokeCallHook(t,e),this.poolingFunction(Fe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let Eb=(()=>{class n extends $b{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Vt(o),Vn(a),Hu(e,s,r,a,o,"max")}}return n.className="MaxPooling2D",n})();te(Eb);let Db=(()=>{class n extends $b{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Vt(o),Vn(a),Hu(e,s,r,a,o,"avg")}}return n.className="AveragePooling2D",n})();te(Db);class Ab extends qe{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new A(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Qt(this.poolSize,"poolSize"),Qt(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Vt(this.dataFormat),Vn(this.padding),this.inputSpec=[new Gt({ndim:5})]}computeOutputShape(t){t=nt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],s="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=ls(e,this.poolSize[0],this.padding,this.strides[0]),s=ls(s,this.poolSize[1],this.padding,this.strides[1]),r=ls(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return V(()=>(this.invokeCallHook(t,e),this.poolingFunction(Fe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let Rb=(()=>{class n extends Ab{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Vt(o),Vn(a),Nb(e,s,r,a,o,"max")}}return n.className="MaxPooling3D",n})();te(Rb);let Ob=(()=>{class n extends Ab{constructor(e){super(e)}poolingFunction(e,s,r,a,o){return Vt(o),Vn(a),Nb(e,s,r,a,o,"avg")}}return n.className="AveragePooling3D",n})();te(Ob);class Fb extends qe{constructor(t){super(t),this.inputSpec=[new Gt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ue}}let Pb=(()=>{class n extends Fb{constructor(e){super(e||{})}call(e,s){return V(()=>{const r=Fe(e);return Ft(r,1)})}}return n.className="GlobalAveragePooling1D",n})();te(Pb);let Lb=(()=>{class n extends Fb{constructor(e){super(e||{})}call(e,s){return V(()=>{const r=Fe(e);return ns(r,1)})}}return n.className="GlobalMaxPooling1D",n})();te(Lb);class Vb extends qe{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Vt(this.dataFormat),this.inputSpec=[new Gt({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ue}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}let Mb=(()=>{class n extends Vb{call(e,s){return V(()=>{const r=Fe(e);return Ft(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalAveragePooling2D",n})();te(Mb);let zb=(()=>{class n extends Vb{call(e,s){return V(()=>{const r=Fe(e);return ns(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalMaxPooling2D",n})();te(zb);class Bb extends qe{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const a=Ss(e.layer,s);delete e.layer;const o={layer:a};return Object.assign(o,e),new t(o)}}let Wb=(()=>{class n extends Bb{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=nt(e)).length<3)throw new A(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const s=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(s),this.layer.built=!0),super.build(e)}computeOutputShape(e){const s=[(e=nt(e))[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(s);return[r[0],e[1]].concat(r.slice(1))}call(e,s){return V(()=>rb((i,l)=>[Fe(this.layer.call(i,s)),[]],e=Fe(e),[],!1,null,null,!1,!0)[1])}}return n.className="TimeDistributed",n})();te(Wb);let Ub=(()=>{class n extends Bb{constructor(e){super(e);const s=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=s,this.forwardLayer=Ss(r),s.goBackwards=!0!==s.goBackwards;const a={};if(a.className=e.layer.getClassName(),a.config=s,this.backwardLayer=Ss(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function CD(n){Lr(j2,"BidirectionalMergeMode",n)}(this.mergeMode),e.weights)throw new Ue("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const r=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let r,a,o,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState&&(o=s.slice(1)),r=s[0],"concat"===this.mergeMode?(r[r.length-1]*=2,a=[r]):a=null==this.mergeMode?[r,r.slice()]:[r],this.returnState?null==this.mergeMode?a.concat(o).concat(o.slice()):[r].concat(o).concat(o.slice()):In(a)}apply(e,s){let r=null==s?null:s.initialState,a=null==s?null:s.constants;null==s&&(s={});const o=sb(e,r,a,this.numConstants);if(e=o.inputs,r=o.initialState,a=o.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(null==r||0===r.length)&&null==a)return super.apply(e,s);const i=[],l=[];if(null!=r){const c=r.length;if(c%2>0)throw new A("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");s.initialState=r,i.push(...r);const h=r.map(d=>new Gt({shape:d.shape}));this.forwardLayer.stateSpec=h.slice(0,c/2),this.backwardLayer.stateSpec=h.slice(c/2),l.push(...h)}if(null!=a)throw new Ue("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof Is;for(const c of i)if(c instanceof Is!==u)throw new A("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[e].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(c,s);return this.inputSpec=d,p}return super.apply(e,s)}call(e,s){return V(()=>{const r=s.initialState;let a,o,i,l;if(null==r)a=this.forwardLayer.call(e,s),o=this.backwardLayer.call(e,s);else{const u=r.slice(0,r.length/2),c=r.slice(r.length/2);a=this.forwardLayer.call(e,Object.assign(s,{initialState:u})),o=this.backwardLayer.call(e,Object.assign(s,{initialState:c}))}return this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(o.slice(1))),a=a[0],o=o[0]),this.returnSequences&&(o=Dr(o,1)),"concat"===this.mergeMode?l=mp([a,o]):"sum"===this.mergeMode?l=oe(a,o):"ave"===this.mergeMode?l=D(.5,oe(a,o)):"mul"===this.mergeMode?l=D(a,o):null==this.mergeMode&&(l=[a,o]),this.returnState?null==this.mergeMode?l.concat(i):[l].concat(i):l})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Vr(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Vr(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,s){let r;if(Array.isArray(s)&&(s=s[0]),r=this.returnSequences?null==this.mergeMode?[s,s]:s:null==this.mergeMode?[null,null]:null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(r)?r.concat(o).concat(o):[r].concat(o).concat(o)}return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},s=super.getConfig();return Object.assign(e,s),e}static fromConfig(e,s){const r=Ss(s.layer);if(delete s.layer,null!=s.numConstants)throw new Ue("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=s;return a.layer=r,new e(a)}}return n.className="Bidirectional",n})();te(Ub);let Gb=(()=>{class n extends qe{constructor(e){super(e),this.scale=e.scale,this.offset=e.offset?e.offset:0}getConfig(){const e={scale:this.scale,offset:this.offset},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return V(()=>("float32"!==(e=Fe(e)).dtype&&(e=bs(e,"float32")),oe(D(e,this.scale),this.offset)))}}return n.className="Rescaling",n})();te(Gb);const{resizeBilinear:kD,cropAndResize:TD}=gs;let Hb=(()=>{class n extends qe{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,s,r,a,o,i,l,u){return V(()=>{let c,h=!1;const m=[s/i,r/l,(a+s)/i,(o+r)/l],y=[];3===e.rank?(h=!0,c=Ps([e])):c=e;for(let C=0;C<c.shape[0];C++)y.push(m);const x=Wo(y,[y.length,4]),b=Zo(0,y.length,1,"int32"),v=TD(c,x,b,[a,o],"nearest");return bs(h?Fe(Ar(v)):v,u)})}upsize(e,s,r,a){return V(()=>bs(kD(e,[s,r]),a))}call(e,s){return V(()=>{const r=Fe(e),a=r.dtype,o=r.shape,i=o[o.length-3],l=o[o.length-2];let u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let c=0;return l!==this.width&&(c=Math.floor((l-this.width)/2),0===c&&(c=1)),u>=0&&c>=0?this.centerCrop(r,u,c,this.height,this.width,i,l,a):this.upsize(e,this.height,this.width,a)})}getConfig(){const e={height:this.height,width:this.width},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){const r=(e=nt(e)).length-2;return e[e.length-3]=this.height,e[r]=this.width,e}}return n.className="CenterCrop",n})();te(Hb);let jb=(()=>{class n extends qe{constructor(e){super(e),this.numTokens=e.numTokens,this.outputMode=e.outputMode?e.outputMode:"multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){return null==(e=nt(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,s){return V(()=>{let r;if("int32"!==(e=Fe(e)).dtype&&(e=bs(e,"int32")),void 0!==s.countWeights){if("count"!==this.outputMode)throw new A(`countWeights is not used when outputMode !== count.\n              Received countWeights=${s.countWeights}`);r=Fe(s.countWeights)}const a=ns(e),o=su(e),i=Fn(this.numTokens,a).bufferSync().get(0),l=Er(o,0).bufferSync().get(0);if(!i||!l)throw new A(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function _D(n,t,e,s){let r=Fe(n);if("int32"!==r.dtype&&(r=bs(r,"int32")),"int"===t)return r;const a=r.shape;if(0===r.rank&&(r=kn(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=kn(r,-1)),r.rank>2)throw new A(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${r.rank}.`);const o=["multiHot","oneHot"].includes(t);let l;if(l=Ig(r,void 0!==s&&"count"===t?s:[],e,o),"tfIdf"!==t)return l;if(s)return D(l,s);throw new A("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,r)})}}return n.className="CategoryEncoding",n})();te(jb);const qb=new Set(["bilinear","nearest"]);let Kb=(()=>{class n extends qe{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!qb.has(e.interpolation))throw new A(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){return e=nt(e),[this.height,this.width,e[2]]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},s=super.getConfig();return Object.assign(e,s),e}call(e,s){return V(()=>{const r=[this.height,this.width];if("bilinear"===this.interpolation)return gs.resizeBilinear(e,r,!this.cropToAspectRatio);if("nearest"===this.interpolation)return gs.resizeNearestNeighbor(e,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...qb]} are supported`)})}}return n.className="Resizing",n})();te(Kb);let ED=(()=>{class n{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}return n.className="RandomSeed",n})(),DD=(()=>{class n extends qe{constructor(e){super(e),this.randomGenerator=new ED(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},s=super.getConfig();return Object.assign(e,s),e}}return n.className="BaseRandomLayer",n})();const Xb=new Set(["bilinear","nearest"]);let Zb=(()=>{class n extends DD{constructor(e){super(e);const{factor:s,interpolation:r="bilinear"}=e;if(this.factor=s,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new A(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new A(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new A(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(r){if(!Xb.has(r))throw new A(`Invalid interpolation parameter: ${r} is not implemented`);this.interpolation=r}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},s=super.getConfig();return Object.assign(e,s),e}computeOutputShape(e){return e=nt(e),[this.imgHeight,-1,e[2]]}call(e,s){return V(()=>{const r=Fe(e);this.imgHeight=r.shape[r.shape.length-3];const a=r.shape[r.shape.length-2];this.widthFactor=da([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*a;o=Math.round(o);const i=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return gs.resizeBilinear(e,i);case"nearest":return gs.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Xb]} are supported`)}})}}return n.className="RandomWidth",n})();function RD(n){return new li(n)}function OD(n){return new Gx(n)}function FD(n){return new Bx(n)}function PD(n){return new Wx(n)}function LD(n){return new Ux(n)}function VD(n){return new jx(n)}function MD(n){return new Hx(n)}function zD(n){return new Jx(n)}function BD(n){return new Gp(n)}function WD(n){return new Zx(n)}function UD(n){return new Hp(n)}function GD(n){return new Yx(n)}function HD(n){return new Qx(n)}function jD(n){return new eb(n)}function qD(n){return new tb(n)}function KD(n){return new nb(n)}function XD(n){return new db(n)}function ZD(n){return new cb(n)}function YD(n){return new Zp(n)}function QD(n){return new ub(n)}function JD(n){return new hb(n)}function eA(n){return new pb(n)}function tA(n){return new fb(n)}function nA(n){return new mb(n)}function sA(n){return new yb(n)}function rA(n){return new Mu(n)}function aA(n){return new Bu(n)}function oA(n){return new Gu(n)}function iA(n){return new Wu(n)}function lA(n){return new Uu(n)}function uA(n){return new zu(n)}function cA(n){return new xb(n)}function hA(n){return new Ib(n)}function dA(n){return new Sb(n)}function pA(n){return new Cb(n)}function Yp(n){return new _b(n)}function fA(n){return Yp(n)}function mA(n){return Yp(n)}function Qp(n){return new Db(n)}function gA(n){return Qp(n)}function yA(n){return Qp(n)}function Jp(n){return new Ob(n)}function xA(n){return Jp(n)}function bA(n){return Jp(n)}function wA(n){return new Pb(n)}function vA(n){return new Mb(n)}function Yb(n){return new Lb(n)}function Qb(n){return new zb(n)}function Jb(n){return new Tb(n)}function e0(n){return new Eb(n)}function IA(n){return new Rb(n)}function SA(n){return new ob(n)}function CA(n){return new qp(n)}function NA(n){return new ib(n)}function kA(n){return new Vu(n)}function TA(n){return new ab(n)}function _A(n){return new jp(n)}function $A(n){return new lb(n)}function EA(n){return new Xp(n)}function DA(n){return new Br(n)}function AA(n){return new Kp(n)}function RA(n){return new Ub(n)}function OA(n){return new Wb(n)}te(Zb);const FA=Yb,PA=Qb,LA=Jb,VA=e0;function MA(n){return new bb(n)}function zA(n){return new wb(n)}function BA(n){return new vb(n)}function WA(n){return new gb(n)}function UA(n){return new Gb(n)}function GA(n){return new Hb(n)}function HA(n){return new Kb(n)}function jA(n){return new jb(n)}function qA(n){return new Zb(n)}var n0;function ve(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&S("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}z().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(n){let t;var e;(e=t=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(n0||(n0={})),Error,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const FR=Iy;let PR=(()=>{class n extends L{nextDataId(){return n.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new M(this,ps())}write(e,s,r){this.firstUse&&(this.firstUse=!1,z().get("IS_NODE")&&Dn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:r,refCount:1}),a}makeTensorInfo(e,s,r){let a;if("string"===s&&null!=r&&r.length>0&&Jr(r[0])){const o=r.map(i=>$s(i));a=this.write(o,e,s)}else a=this.write(r,e,s);return{dataId:a,shape:e,dtype:s}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,s,r,a,o){this.data.set(e,{values:s,dtype:a,refCount:o})}numDataIds(){return this.data.numDataIds()}read(e){var s=this;return(0,T.Z)(function*(){return s.readSync(e)})()}readSync(e){const{dtype:s,complexTensorInfos:r}=this.data.get(e);return"complex64"===s?Vs(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):qf(this.data.get(e).values,s)}bufferSync(e){const s=this.readSync(e.dataId);if("string"===e.dtype)try{const r=s.map(a=>Es(a));return je(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return je(e.shape,e.dtype,s)}makeOutput(e,s,r){return ps().makeTensorFromTensorInfo(this.makeTensorInfo(s,r,e),this)}disposeData(e,s=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!s&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}time(e){return(0,T.Z)(function*(){const s=dn();return e(),{kernelMs:dn()-s}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ve([e],"where");const s=this.readSync(e.dataId);return FR(e.shape,s)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return n.nextDataId=0,n})();function Ns(n){return(t,e,s)=>{const r=Dt(e,t.length);for(let a=0;a<t.length;++a)r[a]=n(t[a],s);return r}}function ot(n,t,e){return lr(n,Ns(t),e)}function lr(n,t,e){return({inputs:s,attrs:r,backend:a})=>{const{x:o}=s;ve(o,n);const i=a,l=i.data.get(o.dataId).values;let u;if("string"===o.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Ms(l)}else u=l;const c=e||o.dtype,h=t(u,c,r);return i.makeTensorInfo(o.shape,c,h)}}jm("cpu",()=>new PR,1);const O0=ot(Ya,n=>n>=0?n:Math.exp(n)-1),VR={kernelName:Ya,backendName:"cpu",kernelFunc:O0};function ks(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const MR={kernelName:ro,backendName:"cpu",kernelFunc:ks};function F0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:a}=s;ve([r],"leakyRelu");const o=I(r.shape),i=e.data.get(r.dataId).values,l=Et("float32",o);for(let u=0;u<i.length;u++)l[u]=i[u]<0?a*i[u]:i[u];return e.makeTensorInfo(r.shape,"float32",l)}const zR={kernelName:nl,backendName:"cpu",kernelFunc:F0};function Mt(n){return(t,e,s,r,a)=>{const o=ze(t,e),i=o.length,l=Te(o),c=Et(a,I(o)),h=t.length,d=e.length,p=Te(t),f=Te(e),g=ua(t,o),m=ua(e,o);if(g.length+m.length===0)for(let y=0;y<c.length;++y)c[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const x=br(y,i,l),b=x.slice(-h);g.forEach(k=>b[k]=0);const w=Jn(b,h,p),v=x.slice(-d);m.forEach(k=>v[k]=0);const C=Jn(v,d,f);c[y]=n(s[w],r[C])}return[c,o]}}const BR=Mt((n,t)=>n<0?t*n:n);function P0(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;ve([s,r],"prelu");const a=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,[i,l]=BR(s.shape,r.shape,a,o,"float32");return e.makeTensorInfo(l,"float32",i)}const WR={kernelName:vl,backendName:"cpu",kernelFunc:P0},L0=ot(xo,n=>Math.max(0,n)),UR={kernelName:xo,backendName:"cpu",kernelFunc:L0},V0=ot(bo,n=>Math.min(Math.max(0,n),6)),GR={kernelName:bo,backendName:"cpu",kernelFunc:V0},HR=Ns(n=>1/(1+Math.exp(-n))),M0=ot(ko,n=>1/(1+Math.exp(-n))),jR={kernelName:ko,backendName:"cpu",kernelFunc:M0};function Qu(n,t,e,s,r){if("linear"===e)return ks({inputs:{x:t},backend:n});if("relu"===e)return L0({inputs:{x:t},backend:n});if("elu"===e)return O0({inputs:{x:t},backend:n});if("relu6"===e)return V0({inputs:{x:t},backend:n});if("prelu"===e)return P0({inputs:{x:t,alpha:s},backend:n});if("leakyrelu"===e)return F0({inputs:{x:t},backend:n,attrs:{alpha:r}});if("sigmoid"===e)return M0({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function _n(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,a=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,i=e.makeTensorInfo(s.shape,"complex64");return e.data.get(i.dataId).complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",a),imag:e.makeTensorInfo(r.shape,"float32",o)},i}const qR={kernelName:Fc,backendName:"cpu",kernelFunc:_n};function Ju(n,t,e="float32"){if("complex64"===e)return _n({inputs:{real:Ju(n,t,"float32"),imag:Ju(n,t,"float32")},backend:n});const s=tn(I(t),e);return n.makeTensorInfo(t,e,s)}function Gr(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,a=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,a)}const KR={kernelName:oh,backendName:"cpu",kernelFunc:Gr};function z0(n,t,e,s){if("int32"===s)return[t,"int32",Int32Array.from(n)];if("bool"===s){const r=Hs([0],e),[a,o]=Mt((i,l)=>i!==l?1:0)(t,[],n,r,"bool");return[o,"bool",a]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function ur(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return ks({inputs:{x:r},backend:e});const c=Ju(e,r.shape,r.dtype),h=ur({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),d=_n({inputs:{real:h,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),d}if("complex64"===r.dtype){const c=Gr({inputs:{input:r},backend:e}),h=ur({inputs:{x:c},backend:e,attrs:{dtype:a}});return e.disposeIntermediateTensorInfo(c),h}if(!Nc(r.dtype,a)){const c=ks({inputs:{x:r},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:a}}const o=e.data.get(r.dataId).values,[i,l,u]=z0(o,r.shape,r.dtype,a);return e.makeTensorInfo(i,l,u)}const XR={kernelName:Ha,backendName:"cpu",kernelFunc:ur};function qt(n,t,e,s){return null==e?({inputs:r,backend:a})=>{const{a:o,b:i}=r,l=a;ve([o,i],n);const u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,h="string"===o.dtype?Ms(u):u,d="string"===o.dtype?Ms(c):c,p=s||o.dtype,[f,g]=t(o.shape,i.shape,h,d,p);return l.makeTensorInfo(g,p,f)}:({inputs:r,backend:a})=>{const{a:o,b:i}=r,l=a;if("complex64"===o.dtype||"complex64"===i.dtype){const u=ur({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),d=c.complexTensorInfos.imag,p=l.data.get(c.complexTensorInfos.real.dataId).values,f=l.data.get(d.dataId).values,g=ur({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),x=m.complexTensorInfos.imag,b=l.data.get(m.complexTensorInfos.real.dataId).values,w=l.data.get(x.dataId).values,[v,C,k]=e(o.shape,i.shape,p,f,b,w),_=l.makeTensorInfo(k,"float32",v),$=l.makeTensorInfo(k,"float32",C),E=_n({inputs:{real:_,imag:$},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(_),l.disposeIntermediateTensorInfo($),E}{const u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,h=s||o.dtype,[d,p]=t(o.shape,i.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function df(n){return(t,e,s,r,a,o)=>{const i=ze(t,e),l=I(i),u=i.length,c=Te(i),h=Et("float32",l),d=Et("float32",l),p=ua(t,i),f=ua(e,i),g=Vs(s,r),m=Vs(a,o),y=t.length,x=Te(t),b=e.length,w=Te(e);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const C=v%g.length,k=v%m.length,_=n(g[2*C],g[2*C+1],m[2*k],m[2*k+1]);h[v]=_.real,d[v]=_.imag}else for(let v=0;v<h.length;v++){const C=br(v,u,c),k=C.slice(-y);p.forEach(B=>k[B]=0);const _=Jn(k,y,x),$=C.slice(-b);f.forEach(B=>$[B]=0);const E=Jn($,b,w),P=n(g[2*_],g[2*_+1],m[2*E],m[2*E+1]);h[v]=P.real,d[v]=P.imag}return[h,d,i]}}const B0=Mt((n,t)=>n+t),ZR=df((n,t,e,s)=>({real:n+e,imag:t+s})),va=qt(ea,B0,ZR),YR={kernelName:ea,backendName:"cpu",kernelFunc:va};function mt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:a}=s,o=I(r.shape),i=cn(a,o),l=I(i);S(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const u=e.data.get(r.dataId);if(null!=u.complexTensorInfos){const h=u.complexTensorInfos.imag;u.complexTensorInfos.real.shape=i,h.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const QR={kernelName:Sl,backendName:"cpu",kernelFunc:mt};function W0(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;ve([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],h=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],p=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),g=a.shape.slice(0,-2),m=I(f),y=I(g),b=ze(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);S(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);const v=i?[y,p,h]:[y,h,p],C=mt({inputs:{x:r},backend:e,attrs:{shape:o?[m,c,d]:[m,d,c]}}),k=mt({inputs:{x:a},backend:e,attrs:{shape:v}}),_=o?C.shape[1]:C.shape[2],$=o?C.shape[2]:C.shape[1],E=i?k.shape[1]:k.shape[2],P=Math.max(m,y),B=e.data.get(C.dataId).values,U=e.data.get(k.dataId).values,G=Te(C.shape),H=Te(k.shape),[K,X,j]=o?[G[0],1,G[1]]:[G[0],G[1],1],[Z,ae,ie]=i?[1,H[1],H[0]]:[H[1],1,H[0]],ue=$*E,le=je([P,$,E],C.dtype),ge=le.values,ce=e.blockSize;for(let ye=0;ye<P;ye++){const $e=ye%m,Pe=ye%y;for(let Ae=0;Ae<$;Ae+=ce){const He=Math.min(Ae+ce,$);for(let Ke=0;Ke<E;Ke+=ce){const it=Math.min(Ke+ce,E);for(let gt=0;gt<_;gt+=ce){const Rt=Math.min(gt+ce,_);for(let yt=Ae;yt<He;yt++)for(let ct=Ke;ct<it;ct++){let _t=0;for(let vt=gt;vt<Rt;vt++)_t+=B[$e*K+yt*X+vt*j]*U[vt*Z+ct*ae+Pe*ie];ge[ye*ue+(yt*E+ct)]+=_t}}}}}return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(k),e.makeTensorInfo(b,le.dtype,le.values)}const JR={kernelName:Bi,backendName:"cpu",kernelFunc:W0},tO={kernelName:Ll,backendName:"cpu",kernelFunc:function eO(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=W0({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:e}),o&&(p=va({inputs:{a:d,b:o},backend:e}),g.push(d),d=p),c&&(f=Qu(e,d,c,i,h),g.push(d),d=f);for(const y of g)e.disposeIntermediateTensorInfo(y);return d}};function U0(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const nO={kernelName:Pi,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend;ve(t,"abs");let s=new Float32Array(I(t.shape));return s=U0(e.data.get(t.dataId).values),e.makeOutput(s,t.shape,t.dtype)}},sO=ot(Va,n=>Math.acos(n)),rO={kernelName:Va,backendName:"cpu",kernelFunc:sO},aO=ot(Ma,n=>Math.acosh(n)),oO={kernelName:Ma,backendName:"cpu",kernelFunc:aO},lO={kernelName:$c,backendName:"cpu",kernelFunc:function iO(n){const{inputs:t,backend:e}=n,s=t;ve(t,"addN");const r=s.map(i=>e.data.get(i.dataId).values),a=je(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){const l=r[i];for(let u=0;u<o.length;u++)o[u]+=l[u]}return e.makeTensorInfo(a.shape,a.dtype,a.values)}};function pf(n,t,e,s,r){const a=t.length,o=I(t),i=Te(t),l=Te(r),u=Et(e,I(r));for(let c=0;c<o;++c){const h=br(c,a,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];u[Jn(d,a,l)]=n[c]}return u}function Cn(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:a}=e;ve(r,"transpose");const i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[a[h]];const u=pf(s.data.get(r.dataId).values,r.shape,r.dtype,a,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}const uO={kernelName:ta,backendName:"cpu",kernelFunc:Cn},hO={kernelName:"All",backendName:"cpu",kernelFunc:function cO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"all");const i=ke(a,r.shape);let l=i;const u=kt(l,r.shape.length);let c=r;null!=u&&(c=Cn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Lt(l.length,r.shape.length)),rn("all",l,c.shape.length);const[h,d]=Yt(c.shape,l),p=I(d),f=tn(I(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let b=g[x];for(let w=0;w<p;++w){const v=g[x+w];b=b&&v}f[y]=b}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(o){const x=mt({inputs:{x:m},backend:e,attrs:{shape:Pt(h,i)}});return e.disposeIntermediateTensorInfo(m),x}return m}},pO={kernelName:"Any",backendName:"cpu",kernelFunc:function dO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"any");const i=ke(a,r.shape);let l=i;const u=kt(l,r.shape.length);let c=r;null!=u&&(c=Cn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Lt(l.length,r.shape.length)),rn("any",l,c.shape.length);const[h,d]=Yt(c.shape,l),p=I(d),f=tn(I(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let b=g[x];for(let w=0;w<p;++w){const v=g[x+w];b=b||v}f[y]=b}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(o){const x=mt({inputs:{x:m},backend:e,attrs:{shape:Pt(h,i)}});return e.disposeIntermediateTensorInfo(m),x}return m}},mO={kernelName:Li,backendName:"cpu",kernelFunc:function fO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a}=s;ve(r,"argMax");let o=ke(a,r.shape);const i=kt(o,r.shape.length);let l=r;const u=[];null!=i&&(l=Cn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),o=Lt(o.length,l.shape.length)),o=[o[0]],rn("argMax",o,l.shape.length);const[c,h]=Yt(l.shape,o),p=tn(I(c),"int32"),f=I(h),g=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let x=g[y],b=0;for(let w=0;w<f;++w){const v=g[y+w];v>x&&(x=v,b=w)}p[m]=b}return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(c,"int32",p)}},yO={kernelName:Vi,backendName:"cpu",kernelFunc:function gO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a}=s;ve(r,"argMin");let o=ke(a,r.shape);const i=kt(o,r.shape.length);let l=r;const u=[];null!=i&&(l=Cn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),o=Lt(o.length,l.shape.length)),o=[o[0]],rn("argMin",o,l.shape.length);const[c,h]=Yt(l.shape,o),p=tn(I(c),"int32"),f=I(h),g=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let x=g[y],b=0;for(let w=0;w<f;++w){const v=g[y+w];v<x&&(x=v,b=w)}p[m]=b}return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(c,"int32",p)}},xO=ot(za,n=>Math.asin(n)),bO={kernelName:za,backendName:"cpu",kernelFunc:xO},wO=ot(Ba,n=>Math.asinh(n)),vO={kernelName:Ba,backendName:"cpu",kernelFunc:wO},IO=ot(Wa,n=>Math.atan(n)),SO={kernelName:Wa,backendName:"cpu",kernelFunc:IO},CO=Mt((n,t)=>Math.atan2(n,t)),NO=qt(Ga,CO),kO={kernelName:Ga,backendName:"cpu",kernelFunc:NO},TO=ot(Ua,n=>Math.atanh(n)),_O={kernelName:Ua,backendName:"cpu",kernelFunc:TO};function ff(n,t,e,s,r,a){const o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=je(r.outShape,e),m=g.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],b=r.outShape[3];for(let w=0;w<r.batchSize;++w){const v=w*y,C=w*s[0];for(let k=0;k<r.inChannels;++k)for(let _=0;_<r.outHeight;++_){const $=_*o-d,E=Math.max(0,$),P=Math.min(r.inHeight,c+$),B=v+_*x;for(let U=0;U<r.outWidth;++U){const G=U*i-p,H=Math.max(0,G),K=Math.min(r.inWidth,h+G);let X=f,j=0,Z=0;for(let ie=E;ie<P;ie+=l){const ue=C+ie*s[1];for(let le=H;le<K;le+=u){const ce=n[ue+le*s[2]+k];"max"===a&&ce>X?X=ce:"avg"===a&&(j+=ce,Z++)}if(isNaN(X))break}m[B+U*b+k]="avg"===a?j/Z:X}}}return g}function G0(n,t,e,s,r=!1,a=!1){const o=je(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=je(t,e,n);for(let m=0;m<s.batchSize;++m)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){const b=x*i-p;let w=b;for(;w<0;)w+=u;const v=Math.min(s.inHeight,h+b);for(let C=0;C<s.outWidth;++C){const k=C*l-f;let _=k;for(;_<0;)_+=c;const $=Math.min(s.inWidth,d+k);let E=Number.NEGATIVE_INFINITY,P=-1;for(let B=w;B<v;B+=u){const U=B-b;for(let G=_;G<$;G+=c){const H=G-k,K=g.get(m,B,G,y);K>E&&(E=K,P=r?a?((m*s.inHeight+B)*s.inWidth+G)*s.inChannels+y:(B*s.inWidth+G)*s.inChannels+y:U*d+H)}}o.set(P,m,x,C,y)}}return o}function H0(n,t,e,s,r,a){const o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,y=r.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=je(r.outShape,e),w=b.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],_=r.outShape[4];for(let $=0;$<r.batchSize;++$){const E=$*v,P=$*s[0];for(let B=0;B<r.inChannels;++B)for(let U=0;U<r.outDepth;++U){const G=U*o-g;let H=G;for(;H<0;)H+=u;const K=Math.min(r.inDepth,d+G),X=E+U*C;for(let j=0;j<r.outHeight;++j){const Z=j*i-m;let ae=Z;for(;ae<0;)ae+=c;const ie=Math.min(r.inHeight,p+Z),ue=X+j*k;for(let le=0;le<r.outWidth;++le){const ge=le*l-y;let ce=ge;for(;ce<0;)ce+=h;const ye=Math.min(r.inWidth,f+ge),$e=ue+le*_;let Pe=x,Ae=0,He=0;for(let it=H;it<K;it+=u){const gt=P+it*s[1];for(let Rt=ae;Rt<ie;Rt+=c){const yt=gt+Rt*s[2];for(let ct=ce;ct<ye;ct+=h){const vt=n[yt+ct*s[3]+B];if("max"===a&&vt>Pe?Pe=vt:"avg"===a&&(Ae+=vt,He++),isNaN(Pe))break}if(isNaN(Pe))break}if(isNaN(Pe))break}w[$e+B]="avg"===a?Ae/Math.max(He,1):Pe}}}}return b}const DO={kernelName:Mi,backendName:"cpu",kernelFunc:function EO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;ve(r,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s;S(sn(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=Un(r.shape,a,o,1,i,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&we(c.inShape,c.outShape))h=ks({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=Te(r.shape),f=ff(d,0,r.dtype,p,c,"avg");h=e.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}},RO={kernelName:zi,backendName:"cpu",kernelFunc:function AO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;ve(r,"avgPool3d");const c=As(r.shape,a,o,1,i,l,u),d=H0(e.data.get(r.dataId).values,0,r.dtype,Te(r.shape),c,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}},FO={kernelName:Rc,backendName:"cpu",kernelFunc:function OO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;ve([r,a],"avgPool3DGrad");const c=As(a.shape,o,i,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,C=c.effectiveFilterWidth,k=w-1-c.padInfo.front,_=C-1-c.padInfo.left,$=v-1-c.padInfo.top,E=je(a.shape,"float32"),P=1/(f*g*m),B=e.bufferSync(r);for(let U=0;U<c.batchSize;++U)for(let G=0;G<c.inChannels;++G)for(let H=0;H<c.inDepth;++H)for(let K=0;K<c.inHeight;++K)for(let X=0;X<c.inWidth;++X){const j=H-k,Z=K-$,ae=X-_;let ie=0;for(let ue=0;ue<w;ue+=y){const le=(j+ue)/h;if(!(le<0||le>=c.outDepth||Math.floor(le)!==le))for(let ge=0;ge<v;ge+=x){const ce=(Z+ge)/d;if(!(ce<0||ce>=c.outHeight||Math.floor(ce)!==ce))for(let ye=0;ye<C;ye+=b){const $e=(ae+ye)/p;$e<0||$e>=c.outWidth||Math.floor($e)!==$e||(ie+=B.get(U,le,ce,$e,G))}}}E.set(ie*P,U,H,K,X,G)}return e.makeTensorInfo(E.shape,E.dtype,E.values)}},LO={kernelName:Ac,backendName:"cpu",kernelFunc:function PO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,o=a;ve([r,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=s,c=Un(o.shape,i,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,b=x-1-c.padInfo.left,w=y-1-c.padInfo.top,v=je(o.shape,"float32"),C=1/(p*f),k=e.data.get(r.dataId).values,_=je(r.shape,"float32",k);for(let $=0;$<c.batchSize;++$)for(let E=0;E<c.inChannels;++E)for(let P=0;P<c.inHeight;++P)for(let B=0;B<c.inWidth;++B){const U=P-w,G=B-b;let H=0;for(let K=0;K<y;K+=g){const X=(U+K)/h;if(!(X<0||X>=c.outHeight||Math.floor(X)!==X))for(let j=0;j<x;j+=m){const Z=(G+j)/d;Z<0||Z>=c.outWidth||Math.floor(Z)!==Z||(H+=_.get($,X,Z,E))}}v.set(H*C,$,P,B,E)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}},MO={kernelName:Ji,backendName:"cpu",kernelFunc:function VO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:a,offset:o,mean:i,variance:l}=t;S(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(null==o||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(null==a||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ve([r,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=e.data.get(r.dataId).values,h=e.data.get(i.dataId).values,d=e.data.get(l.dataId).values,p=a?e.data.get(a.dataId).values:new Float32Array([1]),f=o?e.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,y=p.length,x=d.length,b=h.length;let w=0,v=0,C=0,k=0;for(let _=0;_<c.length;++_)g[_]=f[w++]+(c[_]-h[v++])*p[C++]/Math.sqrt(d[k++]+u),w>=m&&(w=0),v>=b&&(v=0),C>=y&&(C=0),k>=x&&(k=0);return e.makeTensorInfo(r.shape,r.dtype,g)}};function j0(n,t,e,s,r){const a=sd(s,t,e),o=I(e),i=Te(s);if(a){const h=rd(t,i);return"string"===r?n.slice(h,h+o):n.subarray(h,h+o)}const u=je(s,r,"string"===r?Ms(n):n),c=je(e,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,g)=>f+t[g]);c.set(u.get(...p),...d)}return"string"===r?vy(c.values):c.values}function Hr(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:a,size:o}=s;ve(r,"slice");const[i,l]=Ql(r,a,o);td(r,i,l);const c=j0(e.data.get(r.dataId).values,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,c)}const zO={kernelName:_l,backendName:"cpu",kernelFunc:Hr},WO={kernelName:Wi,backendName:"cpu",kernelFunc:function BO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:a,crops:o}=s;ve([r],"batchToSpaceND");const i=a.reduce((y,x)=>y*x),l=ei(r.shape,a,i),u=ti(l.length,a.length),c=ni(r.shape,a,i),h=zd(o,a.length),d=Bd(c,o,a.length),p=mt({inputs:{x:r},backend:e,attrs:{shape:l}}),f=Cn({inputs:{x:p},backend:e,attrs:{perm:u}}),g=mt({inputs:{x:f},backend:e,attrs:{shape:c}}),m=Hr({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}};function mf(n,t,e,s,r){const a=I(s),o=tn(r,e);for(let i=0;i<n.length;i++){const l=n[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o[l]+=a>0?t[i]:1)}return o}function q0(n,t,e,s=!1){const r=n.shape[0],a=n.shape[1],o=je([r,e],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){const u=n.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||o.set(s?1:t.size>0?o.get(i,u)+t.get(i,l):o.get(i,u)+1,i,u)}return o}const GO={kernelName:Oc,backendName:"cpu",kernelFunc:function UO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:a}=t,{size:o}=s,u=mf(e.data.get(r.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,o);return e.makeTensorInfo([o],a.dtype,u)}},K0=Mt((n,t)=>n&t),jO={kernelName:Yf,backendName:"cpu",kernelFunc:qt(Yf,K0)},KO={kernelName:Qf,backendName:"cpu",kernelFunc:function qO(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,a=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values,i=ze(Array.from(a),Array.from(o));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},X0=Ns(n=>Math.ceil(n)),XO=lr(ja,X0),ZO={kernelName:ja,backendName:"cpu",kernelFunc:XO},YO=ot(qa,(n,t)=>n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n),QO={kernelName:qa,backendName:"cpu",kernelFunc:YO},JO={kernelName:Ui,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(I(t.shape)),r=e.data.get(t.dataId),o=r.complexTensorInfos.imag,i=e.data.get(r.complexTensorInfos.real.dataId).values,l=e.data.get(o.dataId).values;for(let u=0;u<i.length;u++)s[u]=Math.hypot(i[u],l[u]);return e.makeOutput(s,t.shape,"float32")}};function Z0(n,t,e,s){const r=Dt(e,I(t));if(s&&"string"!==e){let a=0;n.forEach(o=>{const i=I(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;n.forEach(o=>{const i="string"===e?Ms(o.vals):o.vals;let l=0;for(let u=0;u<o.shape[0];++u){const c=u*t[1]+a;for(let h=0;h<o.shape[1];++h)r[c+h]=i[l++]}a+=o.shape[1]})}return r}function Ia(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,a=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,a)}const eF={kernelName:Qc,backendName:"cpu",kernelFunc:Ia};function Sa(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,a=ke(r,t[0].shape)[0];Ld(t.map(g=>g.shape),a);let i=ys(t.map(g=>g.shape),a);if(0===I(i))return e.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(g=>I(g.shape)>0);if(1===l.length)return ks({inputs:{x:l[0]},backend:e});if("complex64"===l[0].dtype){const g=l.map(w=>Gr({inputs:{input:w},backend:e})),m=l.map(w=>Ia({inputs:{input:w},backend:e})),y=Sa({inputs:g,backend:e,attrs:{axis:a}}),x=Sa({inputs:m,backend:e,attrs:{axis:a}}),b=_n({inputs:{real:y,imag:x},backend:e});return g.forEach(w=>e.disposeIntermediateTensorInfo(w)),m.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(x),b}const u=l.map(g=>{const m=I(g.shape.slice(a));return mt({inputs:{x:g},backend:e,attrs:{shape:[-1,m]}})}),c=u.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));i=ys(u.map(g=>g.shape),1);const d=Z0(c,i,t[0].dtype,1===u[0].shape[0]),p=ys(l.map(g=>g.shape),a),f=e.makeTensorInfo(p,t[0].dtype,d);return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}const tF={kernelName:Gi,backendName:"cpu",kernelFunc:Sa};function Y0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s;ve([r,a],"conv2d");const h=Rs(l),d=Zt(r.shape,a.shape,o,u,i,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,b="channelsLast"===d.dataFormat,w=new nn(d.outShape,r.dtype),v=Te(r.shape),C=Te(a.shape),k=v[0],_=b?v[1]:v[2],$=b?v[2]:1,E=b?1:v[1],P=w.strides[0],B=b?w.strides[1]:w.strides[2],U=b?w.strides[2]:1,G=b?1:w.strides[1],H=e.data.get(r.dataId).values,K=e.data.get(a.dataId).values,X=w.values;for(let j=0;j<d.batchSize;++j){const Z=j*k,ae=j*P;for(let ie=0;ie<d.outHeight;++ie){const ue=ae+ie*B,le=ie*d.strideHeight-x;for(let ge=0;ge<p;++ge){const ce=le+ge*g;if(ce<0||ce>=d.inHeight)continue;const ye=ge*C[0],$e=Z+ce*_;for(let Pe=0;Pe<d.outWidth;++Pe){const Ae=ue+Pe*U,He=Pe*d.strideWidth-y;for(let Ke=0;Ke<f;++Ke){const it=He+Ke*m;if(it<0||it>=d.inWidth)continue;const Rt=$e+it*$;let yt=ye+Ke*C[1];for(let ct=0;ct<d.inChannels;++ct){const _t=H[Rt+ct*E];for(let vt=0;vt<d.outChannels;++vt)X[Ae+vt*G]+=_t*K[yt+vt];yt+=d.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,X)}const nF={kernelName:Hi,backendName:"cpu",kernelFunc:Y0},rF={kernelName:Pc,backendName:"cpu",kernelFunc:function sF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;ve([r,a],"conv2dBackpropFilter");const h=Rs(l),d=Zt(r.shape,c,o,1,i,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,y="channelsLast"===d.dataFormat,x=new nn(d.filterShape,"float32"),b=d.padInfo.left,w=d.padInfo.top,v=e.data.get(r.dataId).values,C=e.data.get(a.dataId).values,k=new nn(r.shape,r.dtype,v),_=new nn(a.shape,a.dtype,C);for(let $=0;$<g;++$){const E=Math.max(0,Math.ceil((w-$)/p)),P=Math.min(d.outHeight,(d.inHeight+w-$)/p);for(let B=0;B<m;++B){const U=Math.max(0,Math.ceil((b-B)/f)),G=Math.min(d.outWidth,(d.inWidth+b-B)/f);for(let H=0;H<d.inChannels;++H)for(let K=0;K<d.outChannels;++K){let X=0;for(let j=0;j<d.batchSize;++j)for(let Z=E;Z<P;++Z){const ae=$+Z*p-w;for(let ie=U;ie<G;++ie){const ue=B+ie*f-b;X+=y?k.get(j,ae,ue,H)*_.get(j,Z,ie,K):k.get(j,H,ae,ue)*_.get(j,K,Z,ie)}}x.set(X,$,B,H,K)}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}},oF={kernelName:ji,backendName:"cpu",kernelFunc:function aF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s;ve([r,a],"conv2dBackpropInput");const h=Te(a.shape),d=Te(r.shape);let p=Rs(u);const f=Zt(o,a.shape,i,1,l,c,!1,p),g=new nn(f.inShape,"float32"),m=g.values,y=e.data.get(r.dataId).values,x=e.data.get(a.dataId).values,[b,w,v]=h,{batchSize:C,filterHeight:k,filterWidth:_,inChannels:$,inHeight:E,inWidth:P,outChannels:B,outHeight:U,outWidth:G,strideHeight:H,strideWidth:K}=f;p=f.dataFormat;const X=k-1-f.padInfo.top,j=_-1-f.padInfo.left,Z="channelsLast"===p,ae=g.strides[0],ie=Z?g.strides[1]:g.strides[2],ue=Z?g.strides[2]:1,le=Z?1:g.strides[1],ge=d[0],ce=Z?d[1]:d[2],ye=Z?d[2]:1,$e=Z?1:d[1];for(let Pe=0;Pe<C;++Pe)for(let Ae=0;Ae<$;++Ae)for(let He=0;He<E;++He){const Ke=He-X,it=Math.max(0,Math.ceil(Ke/H)),gt=Math.min(U,(k+Ke)/H);for(let Rt=0;Rt<P;++Rt){const yt=Rt-j,ct=Math.max(0,Math.ceil(yt/K)),_t=Math.min(G,(_+yt)/K);let vt=0;for(let on=it;on<gt;++on){const fr=on*H-Ke;for(let Bn=ct;Bn<_t;++Bn){const cs=ge*Pe+ce*on+ye*Bn,Us=b*(k-1-fr)+w*(_-1-(Bn*K-yt))+v*Ae;for(let mr=0;mr<B;++mr)vt+=y[cs+$e*mr]*x[Us+mr]}}m[ae*Pe+ie*He+ue*Rt+le*Ae]=vt}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}},lF={kernelName:qi,backendName:"cpu",kernelFunc:function iF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;ve([r,a],"conv3d");const u=Zs(r.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,y=m.front,x=m.left,b=m.top,w=new nn(u.outShape,r.dtype),v=e.data.get(r.dataId).values,C=e.data.get(a.dataId).values,k=w.values,_=Te(r.shape),$=Te(a.shape);for(let E=0;E<u.batchSize;++E){const P=E*_[0],B=E*w.strides[0];for(let U=0;U<u.outDepth;++U){const G=B+U*w.strides[1],H=U*u.strideDepth-y;for(let K=0;K<c;++K){const X=H+K*p;if(X<0||X>=u.inDepth)continue;const j=K*$[0],Z=P+X*_[1];for(let ae=0;ae<u.outHeight;++ae){const ie=G+ae*w.strides[2],ue=ae*u.strideHeight-b;for(let le=0;le<h;++le){const ge=ue+le*f;if(ge<0||ge>=u.inHeight)continue;const ce=j+le*$[1],ye=Z+ge*_[2];for(let $e=0;$e<u.outWidth;++$e){const Pe=ie+$e*u.outChannels,Ae=$e*u.strideWidth-x;for(let He=0;He<d;++He){const Ke=Ae+He*g;if(Ke<0||Ke>=u.inWidth)continue;const gt=ye+Ke*u.inChannels;let Rt=ce+He*$[2];for(let yt=0;yt<u.inChannels;++yt){const ct=v[gt+yt];for(let _t=0;_t<u.outChannels;++_t)k[Pe+_t]+=ct*C[Rt+_t];Rt+=u.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}},cF={kernelName:Lc,backendName:"cpu",kernelFunc:function uF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;ve([r,a],"conv3dBackpropFilterV2");const u=Te(r.shape),c=Te(a.shape),h=Zs(r.shape,l,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,y=h.filterWidth,x=new nn(h.filterShape,"float32"),b=x.values,[w,v,C,k]=x.strides,_=e.data.get(a.dataId).values,[$,E,P,B]=c,U=e.data.get(r.dataId).values,[G,H,K,X]=u,j=h.padInfo.front,Z=h.padInfo.left,ae=h.padInfo.top;for(let ie=0;ie<g;++ie){const ue=Math.max(0,Math.ceil((j-ie)/d)),le=Math.min(h.outDepth,(h.inDepth+j-ie)/d),ge=ie*w;for(let ce=0;ce<m;++ce){const ye=Math.max(0,Math.ceil((ae-ce)/p)),$e=Math.min(h.outHeight,(h.inHeight+ae-ce)/p),Pe=ce*v+ge;for(let Ae=0;Ae<y;++Ae){const He=Math.max(0,Math.ceil((Z-Ae)/f)),Ke=Math.min(h.outWidth,(h.inWidth+Z-Ae)/f),it=Ae*C+Pe;for(let gt=0;gt<h.inChannels;++gt){const Rt=gt*k+it;for(let yt=0;yt<h.outChannels;++yt){let ct=0;for(let _t=0;_t<h.batchSize;++_t){const vt=_t*G,Ws=_t*$;for(let on=ue;on<le;++on){const Bn=(ie+on*d-j)*H+vt,Qr=on*E+Ws;for(let cs=ye;cs<$e;++cs){const mr=(ce+cs*p-ae)*K+Bn,gr=cs*P+Qr;for(let yr=He;yr<Ke;++yr)ct+=U[(Ae+yr*f-Z)*X+mr+gt]*_[yr*B+gr+yt]}}}b[Rt+yt]=ct}}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}},dF={kernelName:Vc,backendName:"cpu",kernelFunc:function hF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;ve([r],"conv3dBackpropInputV2");const u=Te(r.shape),c=Te(a.shape),h=Zs(l,a.shape,i,1,o),d=new nn(h.inShape,"float32"),p=d.values,[f,g,m,y]=d.strides,x=e.data.get(r.dataId).values,[b,w,v,C]=u,k=e.data.get(a.dataId).values,[_,$,E,P]=c,{batchSize:B,filterDepth:U,filterHeight:G,filterWidth:H,inChannels:K,inDepth:X,inHeight:j,inWidth:Z,outChannels:ae,outDepth:ie,outHeight:ue,outWidth:le,strideDepth:ge,strideHeight:ce,strideWidth:ye}=h,$e=U-1-h.padInfo.front,Pe=G-1-h.padInfo.top,Ae=H-1-h.padInfo.left;for(let He=0;He<B;++He)for(let Ke=0;Ke<K;++Ke)for(let it=0;it<X;++it){const gt=it-$e,Rt=Math.max(0,Math.ceil(gt/ge)),yt=Math.min(ie,(U+gt)/ge);for(let ct=0;ct<j;++ct){const _t=ct-Pe,vt=Math.max(0,Math.ceil(_t/ce)),Ws=Math.min(ue,(G+_t)/ce);for(let on=0;on<Z;++on){const fr=on-Ae,Bn=Math.max(0,Math.ceil(fr/ye)),Qr=Math.min(le,(H+fr)/ye);let cs=0;for(let Us=Rt;Us<yt;++Us){const mr=Us*ge-gt;for(let gr=vt;gr<Ws;++gr){const yr=gr*ce-_t;for(let Ei=Bn;Ei<Qr;++Ei){const Bf=b*He+w*Us+v*gr+C*Ei,QK=_*(U-1-mr)+$*(G-1-yr)+E*(H-1-(Ei*ye-fr))+P*Ke;for(let Cc=0;Cc<ae;++Cc)cs+=x[Bf+Cc]*k[QK+Cc]}}}p[f*He+g*it+m*ct+y*on+Ke]=cs}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}},pF=ot(Ka,n=>Math.cos(n)),fF={kernelName:Ka,backendName:"cpu",kernelFunc:pF},mF=ot(Xa,n=>Math.cosh(n)),gF={kernelName:Xa,backendName:"cpu",kernelFunc:mF},xF={kernelName:zc,backendName:"cpu",kernelFunc:function yF(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[g,m]=i,y=je([f,g,m,p],"float32"),x=e.data.get(a.dataId).values,b=e.data.get(o.dataId).values,w=e.data.get(r.dataId).values,v=Te(r.shape),C=Te(y.shape);for(let k=0;k<f;k++){const _=4*k,$=x[_],E=x[_+1],P=x[_+2],B=x[_+3],U=b[k];if(U>=c)continue;const G=g>1?(P-$)*(h-1)/(g-1):0,H=m>1?(B-E)*(d-1)/(m-1):0;for(let K=0;K<g;K++){const X=g>1?$*(h-1)+K*G:.5*($+P)*(h-1);if(X<0||X>h-1)for(let j=0;j<m;j++)for(let Z=0;Z<p;Z++)y.values[Z+j*C[2]+K*C[1]+k*C[0]]=u;else if("bilinear"===l){const j=Math.floor(X),Z=Math.ceil(X),ae=X-j;for(let ie=0;ie<m;ie++){const ue=m>1?E*(d-1)+ie*H:.5*(E+B)*(d-1);if(ue<0||ue>d-1){for(let ye=0;ye<p;ye++)y.values[ye+ie*C[2]+K*C[1]+k*C[0]]=u;continue}const le=Math.floor(ue),ge=Math.ceil(ue),ce=ue-le;for(let ye=0;ye<p;ye++){let $e=ye+le*v[2]+j*v[1]+U*v[0];const Pe=w[$e];$e=ye+ge*v[2]+j*v[1]+U*v[0];const Ae=w[$e];$e=ye+le*v[2]+Z*v[1]+U*v[0];const He=w[$e];$e=ye+ge*v[2]+Z*v[1]+U*v[0];const Ke=w[$e],it=Pe+(Ae-Pe)*ce;$e=ye+ie*C[2]+K*C[1]+k*C[0],y.values[$e]=it+(He+(Ke-He)*ce-it)*ae}}}else for(let j=0;j<m;++j){const Z=m>1?E*(d-1)+j*H:.5*(E+B)*(d-1);if(Z<0||Z>d-1){for(let ue=0;ue<p;ue++)y.values[ue+j*C[2]+K*C[1]+k*C[0]]=u;continue}const ae=Math.round(Z),ie=Math.round(X);for(let ue=0;ue<p;ue++)y.values[ue+j*C[2]+K*C[1]+k*C[0]]=w[ue+ae*v[2]+ie*v[1]+U*v[0]]}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}},wF={kernelName:Mc,backendName:"cpu",kernelFunc:function bF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;ve(r,"cumprod");const l=kt([a],r.shape.length);let u=r;null!=l&&(u=Cn({inputs:{x:r},backend:e,attrs:{perm:l}}));const c=Lt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Nn(u.dtype,"int32"),d=Oi(I(u.shape),h),p=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const b=g(y,x);if(0===x)d[b]=o?1:p[b];else{const w=g(y,x-1);d[b]=o?p[w]*d[w]:p[b]*d[w]}}const m=e.makeTensorInfo(u.shape,h,d);if(null!=l){const x=Cn({inputs:{x:m},backend:e,attrs:{perm:Qs(l)}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),x}return m}},IF={kernelName:Ki,backendName:"cpu",kernelFunc:function vF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;ve(r,"cumsum");const l=kt([a],r.shape.length);let u=r;null!=l&&(u=Cn({inputs:{x:r},backend:e,attrs:{perm:l}}));const c=Lt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Nn(u.dtype,"int32"),d=tn(I(u.shape),h),p=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const b=g(y,x);if(0===x)d[b]=o?0:p[b];else{const w=g(y,x-1);d[b]=o?p[w]+d[w]:p[b]+d[w]}}const m=e.makeTensorInfo(u.shape,h,d);if(null!=l){const x=Cn({inputs:{x:m},backend:e,attrs:{perm:Qs(l)}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),x}return m}},CF={kernelName:Bc,backendName:"cpu",kernelFunc:function SF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(1===r.shape.length){const c=mf(e.data.get(r.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,o);return e.makeTensorInfo([o],a.dtype,c)}if(2===r.shape.length){const c=q0(e.bufferSync(r),e.bufferSync(a),o,i);return e.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},kF={kernelName:Wc,backendName:"cpu",kernelFunc:function NF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:a,dataFormat:o}=s;S("NHWC"===o,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const i=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,d=u*a,p=c/(a*a),f=e.data.get(r.dataId).values,g=new Float32Array(i*h*d*p);let m=0;for(let y=0;y<i;++y)for(let x=0;x<h;++x){const b=Math.floor(x/a),w=x%a;for(let v=0;v<d;++v){const C=Math.floor(v/a),_=(w*a+v%a)*p;for(let $=0;$<p;++$)g[m++]=f[$+_+c*(C+u*(b+l*y))]}}return e.makeTensorInfo([i,h,d,p],r.dtype,g)}};function Q0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s;ve([r,a],"depthwiseConv2DNative");const c=Te(r.shape),h=Te(a.shape);let d=l;null==d&&(d=[1,1]),S(sn(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const p=Zt(r.shape,a.shape,o,d,i,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:y,padInfo:x}=p,b=x.left,w=x.top,v=p.outChannels/p.inChannels,C=new nn(p.outShape,r.dtype),k=e.data.get(r.dataId).values,_=e.data.get(a.dataId).values,$=C.values;for(let E=0;E<p.batchSize;++E){const P=E*c[0],B=E*C.strides[0];for(let U=0;U<p.outHeight;++U){const G=B+U*C.strides[1],H=U*p.strideHeight-w;for(let K=0;K<f;++K){const X=H+K*m;if(X<0||X>=p.inHeight)continue;const j=K*h[0],Z=P+X*c[1];for(let ae=0;ae<p.outWidth;++ae){const ie=G+ae*C.strides[2],ue=ae*p.strideWidth-b;for(let le=0;le<g;++le){const ge=ue+le*y;if(ge<0||ge>=p.inWidth)continue;const ye=Z+ge*p.inChannels;let $e=ie,Pe=j+le*h[1];for(let Ae=0;Ae<p.inChannels;++Ae){const He=k[ye+Ae];for(let Ke=0;Ke<v;++Ke)$[$e+Ke]+=He*_[Pe+Ke];$e+=v,Pe+=v}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const TF={kernelName:Xi,backendName:"cpu",kernelFunc:Q0},$F={kernelName:Uc,backendName:"cpu",kernelFunc:function _F(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s;ve([r,a],"depthwiseConv2dNativeBackpropFilter");const h=Zt(r.shape,c,o,i,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new nn(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,b=h.outChannels/h.inChannels,w=e.data.get(r.dataId).values,v=new nn(r.shape,r.dtype,w),C=e.data.get(a.dataId).values,k=new nn(a.shape,a.dtype,C);for(let _=0;_<f;++_){const $=Math.max(0,Math.ceil((x-_)/d)),E=Math.min(h.outHeight,(h.inHeight+x-_)/d);for(let P=0;P<g;++P){const B=Math.max(0,Math.ceil((y-P)/p)),U=Math.min(h.outWidth,(h.inWidth+y-P)/p);for(let G=0;G<h.outChannels;++G){const H=Math.trunc(G/b),K=G%b;let X=0;for(let j=0;j<h.batchSize;++j)for(let Z=$;Z<E;++Z){const ae=_+Z*d-x;for(let ie=B;ie<U;++ie)X+=v.get(j,ae,P+ie*p-y,H)*k.get(j,Z,ie,G)}m.set(X,_,P,H,K)}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}},DF={kernelName:Gc,backendName:"cpu",kernelFunc:function EF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s;ve([r,a],"depthwiseConv2DNativeBackpropInput");const h=Te(r.shape),d=Te(a.shape),p=Zt(c,a.shape,o,i,l,u,!0),f=new nn(p.inShape,"float32"),g=f.values,[m,y,x]=f.strides,b=e.data.get(r.dataId).values,[w,v,C]=h,k=e.data.get(a.dataId).values,[_,$,E]=d,{batchSize:P,filterHeight:B,filterWidth:U,inChannels:G,inHeight:H,inWidth:K,outChannels:X,outHeight:j,outWidth:Z,strideHeight:ae,strideWidth:ie}=p,ue=B-1-p.padInfo.top,le=U-1-p.padInfo.left,ge=X/G;for(let ce=0;ce<P;++ce)for(let ye=0;ye<G;++ye)for(let $e=0;$e<H;++$e){const Pe=$e-ue,Ae=Math.max(0,Math.ceil(Pe/ae)),He=Math.min(j,(B+Pe)/ae);for(let Ke=0;Ke<K;++Ke){const it=Ke-le,gt=Math.max(0,Math.ceil(it/ie)),Rt=Math.min(Z,(U+it)/ie);let yt=0;for(let ct=Ae;ct<He;++ct){const _t=ct*ae-Pe;for(let vt=gt;vt<Rt;++vt){const on=w*ce+v*ct+C*vt,fr=_*(B-1-_t)+$*(U-1-(vt*ie-it))+E*ye;for(let Bn=0;Bn<ge;++Bn)yt+=b[on+(ye*ge+Bn)]*k[fr+Bn]}}g[m*ce+y*$e+x*Ke+ye]=yt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}},RF={kernelName:"Diag",backendName:"cpu",kernelFunc:function AF(n){const{inputs:t,backend:e}=n,{x:s}=t,r=I(s.shape),a=e.data.get(s.dataId).values,o=je([r,r],s.dtype),i=o.values;for(let u=0;u<a.length;u++)i[u*r+u]=a[u];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,o.dtype,o.values)}},OF={kernelName:Zi,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:a,pad:o,dilations:i}=e,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:x,padInfo:b,strideHeight:w,strideWidth:v,filterHeight:C,filterWidth:k,dilationHeight:_,dilationWidth:$,outShape:E}=Ho(s.shape,r.shape,a,o,"NHWC",i),P=I(E),B=E.length,U=Dt(s.dtype,P);for(let H=0;H<p;++H)for(let K=0;K<y;++K){const X=K*w-b.top;for(let j=0;j<x;++j){const Z=j*v-b.left;for(let ae=0;ae<m;++ae){let ie=Number.MIN_SAFE_INTEGER;for(let le=0;le<C;++le){const ge=X+le*_;if(ge>=0&&ge<f)for(let ce=0;ce<k;++ce){const ye=Z+ce*$;if(ye>=0&&ye<g){const $e=Jn([H,ge,ye,ae],c,Te(s.shape)),Pe=Jn([le,ce,ae],d,Te(r.shape)),Ae=u[$e]+h[Pe];Ae>ie&&(ie=Ae)}}}U[Jn([H,K,j,ae],B,Te(E))]=ie}}}return{dataId:l.write(Hs(U,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}},FF={kernelName:jc,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:a}=n,{strides:o,pad:i,dilations:l}=e,u=t,c=Wn(s.shape,u.data.get(s.dataId).values),h=Wn(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:k,dilationWidth:_,outShape:$}=Ho(s.shape,r.shape,o,i,"NHWC",l);S(a.rank===$.length,()=>`Error in ${jc}, dy must have the same rank as output ${$.length}, but got ${a.rank}`);const E=Wn($,u.data.get(a.dataId).values),P=kc(r.shape,r.dtype);for(let U=0;U<d;++U)for(let G=0;G<m;++G){const H=G*b-x.top;for(let K=0;K<y;++K){const X=K*w-x.left;for(let j=0;j<g;++j){let Z=Number.MIN_SAFE_INTEGER,ae=0,ie=0;for(let ue=0;ue<v;++ue){const le=H+ue*k;if(le>=0&&le<p)for(let ge=0;ge<C;++ge){const ce=X+ge*_;if(ce>=0&&ce<f){const ye=c[U][le][ce][j]+h[ue][ge][j];ye>Z&&(Z=ye,ae=ue,ie=ge)}}}P[ae][ie][j]+=E[U][G][K][j]}}}return{dataId:u.write(Hs(P,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},PF={kernelName:Hc,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:a}=n,{strides:o,pad:i,dilations:l}=e,u=t,c=Wn(s.shape,u.data.get(s.dataId).values),h=Wn(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:v,filterWidth:C,dilationHeight:k,dilationWidth:_,outShape:$}=Ho(s.shape,r.shape,o,i,"NHWC",l);S(a.rank===$.length,()=>`Error in ${Hc}, dy must have the same rank as output ${$.length}, but got ${a.rank}`);const E=Wn($,u.data.get(a.dataId).values),P=kc(s.shape,s.dtype);for(let U=0;U<d;++U)for(let G=0;G<m;++G){const H=G*b-x.top;for(let K=0;K<y;++K){const X=K*w-x.left;for(let j=0;j<g;++j){let Z=Number.MIN_SAFE_INTEGER,ae=H<0?0:H,ie=X<0?0:X;for(let ue=0;ue<v;++ue){const le=H+ue*k;if(le>=0&&le<p)for(let ge=0;ge<C;++ge){const ce=X+ge*_;if(ce>=0&&ce<f){const ye=c[U][le][ce][j]+h[ue][ge][j];ye>Z&&(Z=ye,ae=le,ie=ce)}}}P[U][ae][ie][j]+=E[U][G][K][j]}}}return{dataId:u.write(Hs(P,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},gf=Mt((n,t)=>n*t),LF=df((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),ec=qt(mo,gf,LF),VF={kernelName:mo,backendName:"cpu",kernelFunc:ec};function xi(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;let i;ve(r,"sum"),i="bool"===r.dtype?ur({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):ks({inputs:{x:r},backend:e});const l=i.shape.length,u=ke(a,i.shape),c=kt(u,l);let h=u,d=i;null!=c&&(d=Cn({inputs:{x:i},backend:e,attrs:{perm:c}}),h=Lt(h.length,l)),rn("sum",h,d.shape.length);const[p,f]=Yt(d.shape,h);let m=Ju(e,p,Nn(d.dtype,"int32"));const y=I(f),x=e.data.get(m.dataId).values,b=e.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const v=w*y;let C=0;for(let k=0;k<y;++k)C+=b[v+k];x[w]=C}if(o){const v=m;m=mt({inputs:{x:m},backend:e,attrs:{shape:Pt(m.shape,u)}}),e.disposeIntermediateTensorInfo(v)}return e.disposeIntermediateTensorInfo(i),null!=c&&e.disposeIntermediateTensorInfo(d),m}const MF={kernelName:$l,backendName:"cpu",kernelFunc:xi},BF={kernelName:"Einsum",backendName:"cpu",kernelFunc:function zF(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=Yd(r,a.length);Jd(o.length,l,a);const{path:u,steps:c}=ep(i,l),h=c.length;let d=null,p=o.length;const f=[];for(let g=0;g<h;++g){for(const m of c[g]){const{permutationIndices:y,expandDims:x}=Qd(p,l[m]);let b;tp(y)?b=a[m]:(b=Cn({inputs:{x:a[m]},backend:e,attrs:{perm:y}}),f.push(b));const w=b.shape.slice();for(let v=0;v<x.length;++v)w.splice(x[v],0,1);we(b.shape,w)||(b=mt({inputs:{x:b},backend:e,attrs:{shape:w}}),f.push(b)),null===d?d=b:(d=ec({inputs:{a:b,b:d},backend:e}),f.push(d))}g<h-1&&(u[g]>=0&&(d=xi({inputs:{x:d},backend:e,attrs:{axis:u[g]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}},UF={kernelName:qc,backendName:"cpu",kernelFunc:function WF(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;ve([s,r],"eluGrad");const a=new Float32Array(I(r.shape)),o=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values;for(let l=0;l<o.length;++l){const u=o[l];a[l]=u>=0?i[l]:i[l]*(u+1)}return e.makeTensorInfo(r.shape,"float32",a)}},J0=Mt((n,t)=>n===t?1:0),ew=qt(Yi,J0,null,"bool"),GF={kernelName:Yi,backendName:"cpu",kernelFunc:ew},HF=Ud,jF=Gd,qF=Hd,KF=jd,XF=qd,ZF=Kd,YF=ot(Qa,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+HF*e);return t*(1-((((ZF*s+XF)*s+KF)*s+qF)*s+jF)*s*Math.exp(-e*e))}),QF={kernelName:Qa,backendName:"cpu",kernelFunc:YF},tw=Ns(n=>Math.exp(n)),nw=lr(Ja,tw,"float32"),JF={kernelName:Ja,backendName:"cpu",kernelFunc:nw};function tc(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice();let l=a;return a<0&&(S(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),mt({inputs:{x:r},backend:e,attrs:{shape:i}})}const eP={kernelName:Qi,backendName:"cpu",kernelFunc:tc},sw=Ns(n=>Math.expm1(n)),tP=lr(eo,sw),nP={kernelName:eo,backendName:"cpu",kernelFunc:tP},sP=Mt((n,t)=>n/t),yf=qt(Za,sP),xf={kernelName:Za,backendName:"cpu",kernelFunc:yf},rw=Mt((n,t)=>n-t),rP=df((n,t,e,s)=>({real:n-e,imag:t-s})),bf=qt(Eo,rw,rP),aP={kernelName:Eo,backendName:"cpu",kernelFunc:bf};function aw(n,t,e){const s=n.shape,r=s[0],a=s[1],o=e.data.get(n.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[r,a],c=I(u),h=Et("float32",c),d=Et("float32",c);for(let m=0;m<r;m++){const y=Hr({inputs:{x:i},backend:e,attrs:{begin:[m,0],size:[1,a]}}),x=Hr({inputs:{x:l},backend:e,attrs:{begin:[m,0],size:[1,a]}}),b=_n({inputs:{real:y,imag:x},backend:e}),{real:w,imag:v}=oP(b,t,e),C=Vs(w,v);for(let k=0;k<a;k++){const _=Xd(C,k);h[m*a+k]=_.real,d[m*a+k]=_.imag}e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b)}const p=e.makeTensorInfo(u,"float32",h),f=e.makeTensorInfo(u,"float32",d),g=_n({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),g}function oP(n,t,e){const s=I(n.shape),r=e.data.get(n.dataId),a=e.data.get(r.complexTensorInfos.real.dataId).values,o=e.data.get(r.complexTensorInfos.imag.dataId).values;if(function iP(n){return 0==(n&n-1)}(s)){const i=wf(a,o,s,t,e),l=[n.shape[0],n.shape[1]];if(t){const u=e.makeTensorInfo(l,"float32",i.real),c=e.makeTensorInfo(l,"float32",i.imag),h=e.makeTensorInfo([],"float32",_s(s,"float32")),d=ks({inputs:{x:h},backend:e}),p=xf.kernelFunc({inputs:{a:u,b:h},backend:e}),f=xf.kernelFunc({inputs:{a:c,b:d},backend:e}),g=e.data.get(p.dataId).values,m=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:g,imag:m}}return i}{const l=function lP(n,t,e){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){const l=ay(r*i,t,e),u=Xd(n,i);a+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}e&&(a/=t,o/=t),sy(s,a,o,r)}return s}(Vs(a,o),s,t);return ey(l)}}function wf(n,t,e,s,r){if(1===e)return{real:n,imag:t};const a=Vs(n,t),o=e/2,i=ty(a),l=i.real,u=i.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=_n({inputs:{real:h,imag:d},backend:r}),f=ny(a),g=f.real,m=f.imag,y=[g.length],x=r.makeTensorInfo(y,"float32",g),b=r.makeTensorInfo(y,"float32",m),w=_n({inputs:{real:x,imag:b},backend:r}),v=wf(l,u,o,s,r),C=v.real,k=v.imag,_=[C.length],$=r.makeTensorInfo(_,"float32",C),E=r.makeTensorInfo(_,"float32",k),P=_n({inputs:{real:$,imag:E},backend:r}),B=wf(g,m,o,s,r),U=B.real,G=B.imag,H=[U.length],K=r.makeTensorInfo(H,"float32",U),X=r.makeTensorInfo(H,"float32",G),j=_n({inputs:{real:K,imag:X},backend:r}),Z=ry(e,s),ae=[Z.real.length],ie=r.makeTensorInfo(ae,"float32",Z.real),ue=r.makeTensorInfo(ae,"float32",Z.imag),le=_n({inputs:{real:ie,imag:ue},backend:r}),ge=ec({inputs:{a:le,b:j},backend:r}),ce=va({inputs:{a:P,b:ge},backend:r}),ye=bf({inputs:{a:P,b:ge},backend:r}),$e=Gr({inputs:{input:ce},backend:r}),Pe=Gr({inputs:{input:ye},backend:r}),Ae=Ia({inputs:{input:ce},backend:r}),He=Ia({inputs:{input:ye},backend:r}),Ke=Sa({inputs:[$e,Pe],backend:r,attrs:{axis:0}}),it=Sa({inputs:[Ae,He],backend:r,attrs:{axis:0}}),gt=r.data.get(Ke.dataId).values,Rt=r.data.get(it.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(ye),r.disposeIntermediateTensorInfo($e),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(He),r.disposeIntermediateTensorInfo(Ke),r.disposeIntermediateTensorInfo(it),{real:gt,imag:Rt}}const cP={kernelName:"FFT",backendName:"cpu",kernelFunc:function uP(n){const{inputs:t,backend:e}=n,{input:s}=t,r=I(s.shape),a=s.shape[s.shape.length-1],i=mt({inputs:{x:s},backend:e,attrs:{shape:[r/a,a]}}),l=aw(i,!1,e),u=mt({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}};function vf(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:a}=e,o=a||xr(r),i=Dt(o,I(s));return function dP(n,t,e){n.fill(t)}(i,r),t.makeTensorInfo(s,o,i)}const hP={kernelName:Xc,backendName:"cpu",kernelFunc:vf},pP={kernelName:Zc,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{image:s}=n,r=e,a=Et(s.dtype,I(s.shape)),[o,i,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<o;d++){const p=d*l*i*u;for(let f=0;f<i;f++){const g=f*(l*u);for(let m=0;m<l;m++){const y=m*u;for(let x=0;x<u;x++){const b=Math.round(l-m-1),w=p+g+y+x;let v=c[w];b>=0&&b<l&&(v=c[p+g+b*u+x]),a[w]=v}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},ow=Ns(n=>Math.floor(n)),fP=lr(to,ow),mP={kernelName:to,backendName:"cpu",kernelFunc:fP},iw=Mt((n,t)=>Math.floor(n/t)),gP=qt(no,iw,null,"int32"),yP={kernelName:no,backendName:"cpu",kernelFunc:gP},bP={kernelName:Vl,backendName:"cpu",kernelFunc:function xP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=Y0({inputs:{x:r,filter:a},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const m=g;if("NCHW"===c&&1===o.shape.length&&1!==o.shape[0]){const y=mt({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});g=va({inputs:{a:g,b:y},backend:e}),e.disposeIntermediateTensorInfo(y)}else g=va({inputs:{a:g,b:o},backend:e});e.disposeIntermediateTensorInfo(m)}if(p){const m=g;if("NCHW"===c&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const y=mt({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});g=Qu(e,g,p,y,f),e.disposeIntermediateTensorInfo(y)}else g=Qu(e,g,p,i,f);e.disposeIntermediateTensorInfo(m)}return g}},vP={kernelName:Ml,backendName:"cpu",kernelFunc:function wP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=Q0({inputs:{x:r,filter:a},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const m=g;g=va({inputs:{a:g,b:o},backend:e}),e.disposeIntermediateTensorInfo(m)}if(p){const m=g;g=Qu(e,g,p,i,f),e.disposeIntermediateTensorInfo(m)}return g}};function lw(n,t,e,s,r,a,o,i,l){const u=je([s,a],e);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=n[c*r+p];d+=f*o[p],h.push(f)}if(d<0||d>=l/a)throw new Error(`Invalid indices: ${h} does not index into ${i}`);for(let p=0;p<a;p++)u.values[c*a+p]=t.get(...t.indexToLoc(d*a+p))}return u}const SP={kernelName:tm,backendName:"cpu",kernelFunc:function IP(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,a=I(s.shape),o=r.shape,i=o[o.length-1],[l,u,c,h]=Wd(s,r);if(0===u)return e.makeTensorInfo(l,s.dtype,[]);const f=lw(e.data.get(r.dataId).values,e.bufferSync(s),s.dtype,u,i,c,h,s.shape,a);return e.makeTensorInfo(l,s.dtype,f.values)}};function uw(n,t,e){const s=je(e,n.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r).slice(),u=t.locToIndex([o[0],o[2]]);o[2]=t.values[u];const c=n.locToIndex(o);0<=c&&c<n.values.length&&(s.values[r]=n.values[c])}return s}const NP={kernelName:el,backendName:"cpu",kernelFunc:function CP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;ve([r,a],"gatherV2");const l=ke(o,r.shape)[0],u=e.data.get(a.dataId).values,c=r.shape[l];for(let w=0;w<u.length;++w){const v=u[w];S(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let h=i;null==i&&(h=0);const d=I(a.shape),p=rp(r,a,l,h),f=mt({inputs:{x:r},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=mt({inputs:{x:a},backend:e,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=e.bufferSync(g),b=uw(e.bufferSync(f),y,m);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(p.outputShape,b.dtype,b.values)}},cw=Mt((n,t)=>n>t?1:0),kP=qt(tl,cw,null,"bool"),TP={kernelName:tl,backendName:"cpu",kernelFunc:kP},hw=Mt((n,t)=>n>=t?1:0),_P=qt(so,hw,null,"bool"),$P={kernelName:so,backendName:"cpu",kernelFunc:_P},DP={kernelName:Yc,backendName:"cpu",kernelFunc:function EP(n){const{inputs:t,backend:e}=n,{input:s}=t,r=I(s.shape),a=s.shape[s.shape.length-1],i=mt({inputs:{x:s},backend:e,attrs:{shape:[r/a,a]}}),l=aw(i,!0,e),u=mt({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}},AP=ot(ao,n=>Number.isFinite(n)?1:0,"bool"),RP={kernelName:ao,backendName:"cpu",kernelFunc:AP},OP=ot(oo,n=>Math.abs(n)===1/0?1:0,"bool"),FP={kernelName:oo,backendName:"cpu",kernelFunc:OP},PP=ot(lo,n=>Number.isNaN(n)?1:0,"bool"),LP={kernelName:lo,backendName:"cpu",kernelFunc:PP},dw=Mt((n,t)=>n<t?1:0),VP=qt(sl,dw,null,"bool"),MP={kernelName:sl,backendName:"cpu",kernelFunc:VP},pw=Mt((n,t)=>n<=t?1:0),zP=qt(rl,pw,null,"bool"),BP={kernelName:rl,backendName:"cpu",kernelFunc:zP};function fw(n,t,e){const s=(t-n)/(e-1),r=tn(e,"float32");r[0]=n;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}const UP={kernelName:nm,backendName:"cpu",kernelFunc:function WP(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:a}=e,o=fw(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}},mw=Ns(n=>Math.log(n)),GP=lr(uo,mw),HP={kernelName:uo,backendName:"cpu",kernelFunc:GP},jP=ot(co,n=>Math.log1p(n)),qP={kernelName:co,backendName:"cpu",kernelFunc:jP},KP=Mt((n,t)=>n&&t),XP=qt(al,KP,null,"bool"),ZP={kernelName:al,backendName:"cpu",kernelFunc:XP},YP=ot(ol,n=>n?0:1,"bool"),QP={kernelName:ol,backendName:"cpu",kernelFunc:YP},JP=Mt((n,t)=>n||t),eL=qt(il,JP,null,"bool"),tL={kernelName:il,backendName:"cpu",kernelFunc:eL},sL={kernelName:ll,backendName:"cpu",kernelFunc:function nL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;ve(r,"LRN");const u=r.shape[3],c=u-1,h=e.data.get(r.dataId).values,d=I(r.shape),p=new Float32Array(d);function f(g){const m=g%u;let y=g-m+Math.max(0,m-a);const x=g-m+Math.min(m+a,c);let b=0;for(;y<=x;y++){const w=h[y];b+=w*w}return b}for(let g=0;g<d;g++){const m=f(g),y=h[g]*Math.pow(o+i*m,-l);p[g]=y}return e.makeTensorInfo(r.shape,r.dtype,p)}},aL={kernelName:Jc,backendName:"cpu",kernelFunc:function rL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s;ve(o,"LRNGrad");const h=I(o.shape),d=o.shape[3],p=e.data.get(o.dataId).values,f=e.data.get(r.dataId).values,g=e.data.get(a.dataId).values,m=new Float32Array(h),y=h;for(let x=0;x<y;x++){const b=x%d,w=x-b+Math.max(0,b-i),v=x-b+Math.min(d,b+i+1);let C=0;for(let k=w;k<v;k++)C+=Math.pow(f[k],2);C=u*C+l;for(let k=w;k<v;k++){let _=-2*u*c*f[k]*g[x]/C;x===k&&(_+=Math.pow(C,-c)),_*=p[x],m[k]+=_}}return e.makeTensorInfo(o.shape,r.dtype,m)}};function gw(n,t,e,s){const r=Et(s,I(e));for(let a=0;a<r.length;++a){const o=a*t;let i=n[o];for(let l=0;l<t;++l){const u=n[o+l];(Number.isNaN(u)||u>i)&&(i=u)}r[a]=i}return r}function yw(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=e;let l=r.shape;const u=l.length,c=ke(a,l);let h=c;const d=kt(h,u);let p=i.data.get(r.dataId).values;if(null!=d){const w=new Array(u);for(let v=0;v<w.length;v++)w[v]=l[d[v]];p=pf(p,l,r.dtype,d,w),h=Lt(h.length,u),l=w}ve(r,"max"),rn("max",h,u);const[f,g]=Yt(l,h),y=gw(p,I(g),f,r.dtype),x=i.write(y,f,r.dtype);let b=f;return o&&(b=Pt(f,c)),{dataId:x,shape:b,dtype:r.dtype}}const oL={kernelName:ul,backendName:"cpu",kernelFunc:yw},xw=Mt((n,t)=>Math.max(n,t)),iL=qt(ho,xw),lL={kernelName:ho,backendName:"cpu",kernelFunc:iL},cL={kernelName:cl,backendName:"cpu",kernelFunc:function uL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;ve(r,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s;S(sn(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=Un(r.shape,a,o,1,i,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&we(c.inShape,c.outShape))h=ks({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=Te(r.shape),f=ff(d,0,r.dtype,p,c,"max");h=e.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}},dL={kernelName:hl,backendName:"cpu",kernelFunc:function hL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;ve(r,"maxPool3d");const c=As(r.shape,a,o,1,i,l,u),d=H0(e.data.get(r.dataId).values,0,r.dtype,Te(r.shape),c,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}},fL={kernelName:th,backendName:"cpu",kernelFunc:function pL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;ve([r,a],"maxPool3DGrad");const c=As(a.shape,o,i,1,l,u),d=function $O(n,t){const e=je(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let y=0;y<t.outDepth;++y){const x=y*s-d;let b=x;for(;b<0;)b+=o;const w=Math.min(t.inDepth,u+x);for(let v=0;v<t.outHeight;++v){const C=v*r-p;let k=C;for(;k<0;)k+=i;const _=Math.min(t.inHeight,c+C);for(let $=0;$<t.outWidth;++$){const E=$*a-f;let P=E;for(;P<0;)P+=l;const B=Math.min(t.inWidth,h+E);let U=Number.NEGATIVE_INFINITY,G=-1;for(let H=b;H<w;H+=o){const K=H-x;for(let X=k;X<_;X+=i){const j=X-C;for(let Z=P;Z<B;Z+=l){const ae=Z-E,ie=n.get(g,H,X,Z,m);ie>=U&&(U=ie,G=K*c*h+j*c+ae)}}}e.set(G,g,y,v,$,m)}}}return e}(e.bufferSync(a),c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,C=b-1-c.padInfo.front,k=v-1-c.padInfo.left,_=w-1-c.padInfo.top,$=je(a.shape,"float32"),E=e.bufferSync(r);for(let P=0;P<c.batchSize;++P)for(let B=0;B<c.inChannels;++B)for(let U=0;U<c.inDepth;++U)for(let G=0;G<c.inHeight;++G)for(let H=0;H<c.inWidth;++H){const K=U-C,X=G-_,j=H-k;let Z=0;for(let ae=0;ae<b;ae+=m){const ie=(K+ae)/p;if(!(ie<0||ie>=c.outDepth||Math.floor(ie)!==ie))for(let ue=0;ue<w;ue+=y){const le=(X+ue)/f;if(!(le<0||le>=c.outHeight||Math.floor(le)!==le))for(let ge=0;ge<v;ge+=x){const ce=(j+ge)/g;if(ce<0||ce>=c.outWidth||Math.floor(ce)!==ce)continue;const Pe=b*w*v-1-d.get(P,ie,le,ce,B)===ae*w*v+ue*v+ge?1:0;0!==Pe&&(Z+=E.get(P,ie,le,ce,B)*Pe)}}}$.set(Z,P,U,G,H,B)}return e.makeTensorInfo($.shape,$.dtype,$.values)}},gL={kernelName:eh,backendName:"cpu",kernelFunc:function mL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a,output:o}=t,i=a;ve([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Un(i.shape,l,u,1,c,h),p=e.data.get(i.dataId).values,f=je(d.outShape,i.dtype,G0(p,i.shape,i.dtype,d).values),g=d.strideHeight,m=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,C=b-1-d.padInfo.top,k=je(i.shape,"float32"),_=e.data.get(r.dataId).values,$=je(r.shape,"float32",_);for(let E=0;E<d.batchSize;++E)for(let P=0;P<d.inChannels;++P)for(let B=0;B<d.inHeight;++B)for(let U=0;U<d.inWidth;++U){const G=B-C,H=U-v;let K=0;for(let X=0;X<b;X+=y){const j=(G+X)/g;if(!(j<0||j>=d.outHeight||Math.floor(j)!==j))for(let Z=0;Z<w;Z+=x){const ae=(H+Z)/m;if(ae<0||ae>=d.outWidth||Math.floor(ae)!==ae)continue;const le=b*w-1-f.get(E,j,ae,P)===X*w+Z?1:0;0!==le&&(K+=$.get(E,j,ae,P)*le)}}k.set(K,E,B,U,P)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}},xL={kernelName:sm,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=e;ve(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Un(s.shape,r,a,[1,1],o),[h,d]=function yL(n,t,e,s,r){const o=ff(n,0,e,Te(t),r,"max"),i=G0(n,t,e,r,!0,s);return[o.values,i.values]}(u,s.shape,s.dtype,i,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},wL={kernelName:dl,backendName:"cpu",kernelFunc:function bL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=ke(a,r.shape),c=I(Yt(r.shape,i)[1]),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=ur({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});h.push(p);const f=yf({inputs:{a:p,b:d},backend:e});h.push(f);const g=xi({inputs:{x:f},backend:e,attrs:{axis:a,keepDims:o}});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),g}},IL={kernelName:pl,backendName:"cpu",kernelFunc:function vL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"min");const i=ke(a,r.shape);let l=i;const u=kt(l,r.shape.length);let c=r;null!=u&&(c=Cn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Lt(l.length,r.shape.length)),rn("min",l,c.shape.length);const[h,d]=Yt(c.shape,l),p=I(d),f=tn(I(h),c.dtype),g=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let b=g[x];for(let w=0;w<p;++w){const v=g[x+w];(Number.isNaN(v)||v<b)&&(b=v)}f[y]=b}null!=u&&e.disposeIntermediateTensorInfo(c);const m=e.makeTensorInfo(h,c.dtype,f);if(o){const x=mt({inputs:{x:m},backend:e,attrs:{shape:Pt(h,i)}});return e.disposeIntermediateTensorInfo(m),x}return m}},bw=Mt((n,t)=>Math.min(n,t)),SL=qt(po,bw),CL={kernelName:po,backendName:"cpu",kernelFunc:SL},kL={kernelName:fl,backendName:"cpu",kernelFunc:function NL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:a,mode:o}=s;ve(r,"mirrorPad");const i=a.map((b,w)=>b[0]+r.shape[w]+b[1]),l=a.map(b=>b[0]),u=a.map((b,w)=>b[0]+r.shape[w]),c="reflect"===o?0:1,h=e.data.get(r.dataId).values,d=r.shape.length,p=Te(r.shape),f=I(i),g=i.length,m=Te(i),y=Et(r.dtype,f);for(let b=0;b<f;b++){let w=br(b,g,m);for(let C=0;C<g;C++)w[C]<l[C]?w[C]=2*l[C]-w[C]-c:w[C]>=u[C]&&(w[C]=2*(u[C]-1)-w[C]+c);w=w.map((C,k)=>C-l[k]);const v=Jn(w,d,p);y[b]=h[v]}return{dataId:e.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},TL=Mt((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),_L=qt(fo,TL),$L={kernelName:fo,backendName:"cpu",kernelFunc:_L};function ww(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:a}=s,o=r.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const l=ke([i],r.shape),u=yw({inputs:{x:r},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),c=Pt(u.shape,l),h=mt({inputs:{x:u},backend:e,attrs:{shape:c}}),d=bf({inputs:{a:r,b:h},backend:e}),p=nw({inputs:{x:d},backend:e}),f=xi({inputs:{x:p},backend:e,attrs:{axis:l,keepDims:!1}}),g=mt({inputs:{x:f},backend:e,attrs:{shape:c}}),m=yf({inputs:{a:p,b:g},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}const EL={kernelName:Al,backendName:"cpu",kernelFunc:ww},AL={kernelName:rm,backendName:"cpu",kernelFunc:function DL(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;ve(r,"multinomial");const l=i?r:ww({inputs:{logits:r},backend:e,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=e.data.get(l.dataId).values,d=[u,a],p=tn(I(d),"int32");for(let f=0;f<u;++f){const g=f*c,m=new Float32Array(c-1);m[0]=h[g];for(let b=1;b<m.length;++b)m[b]=m[b-1]+h[g+b];const y=bd.alea(o.toString()),x=f*a;for(let b=0;b<a;++b){const w=y();p[x+b]=m.length;for(let v=0;v<m.length;v++)if(w<m[v]){p[x+b]=v;break}}}return i||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",p)}};function vw(n,t,e){const s=_s(-1,e);return gf([],t,s,n,e)}const OL={kernelName:ml,backendName:"cpu",kernelFunc:function RL(n){const{inputs:t,backend:e}=n,{x:s}=t;ve(s,"neg");const r=e.data.get(s.dataId).values,[a,o]=vw(r,s.shape,s.dtype);return e.makeTensorInfo(o,s.dtype,a)}},FL=Ed,LL={kernelName:nh,backendName:"cpu",kernelFunc:function PL(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;ve(r,"NonMaxSuppression");const u=e.data.get(r.dataId).values,c=e.data.get(a.dataId).values,{selectedIndices:h}=FL(u,c,o,i,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},VL=Dd,zL={kernelName:sh,backendName:"cpu",kernelFunc:function ML(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s;ve(r,"NonMaxSuppressionPadded");const c=e.data.get(r.dataId).values,h=e.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=VL(c,h,o,i,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}},BL=Ad,UL={kernelName:rh,backendName:"cpu",kernelFunc:function WL(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s;ve(r,"NonMaxSuppressionWithScore");const c=e.data.get(r.dataId).values,h=e.data.get(a.dataId).values,d=o,p=i,f=l,g=u,{selectedIndices:m,selectedScores:y}=BL(c,h,d,p,f,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Iw=Mt((n,t)=>n!==t?1:0),GL=qt(gl,Iw,null,"bool"),HL={kernelName:gl,backendName:"cpu",kernelFunc:GL},qL={kernelName:xl,backendName:"cpu",kernelFunc:function jL(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:a,depth:o,onValue:i,offValue:l}=s;ve(r,"oneHot");const u=I(r.shape),c=new Float32Array(u*o);c.fill(l);const h=e.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<o&&(c[d*o+h[d]]=i);return e.makeTensorInfo([...r.shape,o],a,c)}};function nc(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const r=Gr({inputs:{input:s},backend:e}),a=nc({inputs:{x:r},backend:e}),o=Ia({inputs:{input:s},backend:e}),i=nc({inputs:{x:o},backend:e}),l=_n({inputs:{real:a,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),l}return vf({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const KL={kernelName:Pl,backendName:"cpu",kernelFunc:nc},XL={kernelName:yl,backendName:"cpu",kernelFunc:function Sw(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const r=Gr({inputs:{input:s},backend:e}),a=Sw({inputs:{x:r},backend:e}),o=Ia({inputs:{input:s},backend:e}),i=nc({inputs:{x:o},backend:e}),l=_n({inputs:{real:a,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),l}return vf({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Cw(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(1===t.length)return tc({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const a=t[0].shape,o=t[0].dtype;t.forEach(c=>{ee(a,c.shape,"All tensors passed to stack must have matching shapes"),S(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=Sa({inputs:t.map(c=>{const h=tc({inputs:{input:c},backend:e,attrs:{dim:r}});return i.push(h),h}),backend:e,attrs:{axis:r}});return i.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}const ZL={kernelName:bl,backendName:"cpu",kernelFunc:Cw},Nw={kernelName:wl,backendName:"cpu",kernelFunc:function YL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:a,constantValue:o}=s;ve(r,"pad");const i=a.map((x,b)=>x[0]+r.shape[b]+x[1]),l=a.map(x=>x[0]),u=e.data.get(r.dataId).values,c=I(r.shape),h=r.shape.length,d=Te(r.shape),p=I(i),f=i.length,g=Te(i),m=Et(r.dtype,p);0!==o&&m.fill(o);for(let x=0;x<c;x++)m[Jn(br(x,h,d).map((C,k)=>C+l[k]),f,g)]=u[x];return{dataId:e.write(m,i,r.dtype),shape:i,dtype:r.dtype}}},QL=Mt((n,t)=>Math.pow(n,t)),JL=qt(go,QL),eV={kernelName:go,backendName:"cpu",kernelFunc:JL};function kw(n,t,e,s){const[r,a]=Yt(n,s),o=Nn(t,"int32"),i=tn(I(r),o),l=I(a);for(let u=0;u<i.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=e[c+d];i[u]=h}return{outVals:i,outShape:r,outDtype:o}}const nV={kernelName:Il,backendName:"cpu",kernelFunc:function tV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"prod");const i=r.shape.length,l=ke(a,r.shape),u=kt(l,i);let c=l,h=r;const d=[];null!=u&&(h=Cn({inputs:{x:r},backend:e,attrs:{perm:u}}),d.push(h),c=Lt(c.length,i));const p=e.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=kw(h.shape,h.dtype,p,c);let y=g;return o&&(y=Pt(g,l)),d.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(y,m,f)}};function Tw(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function _w(n,t,e,s,r,a,o,i){if(0===n.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function sV(n,t,e){n.forEach((s,r)=>{if(s<0||s>=e){const a=br(r,t.length,Te(t)).join(",");throw new Error(`indices[${a}] = ${s} is not in [0, ${e})`)}})}(a,o,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=function aV(n,t,e,s){const r=[];let a=0;const i=new Array(t.length-1+e.length).fill(null).map(()=>[0]);!function rV(n,t){for(let e=0;e<n.length;++e){const s=n[e],r=e===n.length-1?t:n[e+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let a=1;a<s.length;++a)if(s[a-1]>s[a])throw new Error("Ragged splits must be sorted in ascending order")}}(e,s);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const c=t[u+1];for(let h=1;h<l+1;++h)i[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<e.length;++d){const p=e[d],f=d+t.length-1;if(f>=0){const g=i[f],m=g[g.length-1]-p[c];for(let y=c;y<h;++y)i[f].push(p[y+1]+m)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),a+=h-c)}return{outSplits:i,valueSlices:r,numValues:a}}(a,o,n,u),p=function oV(n){const t=[];for(let e=0;e<n.length;++e){const r=Dt("int32",n[e].length);t.push(r),n[e].forEach((a,o)=>r[o]=a)}return t}(c),f=function lV(n,t,e,s,r){const a=t.slice();a[0]=r;const o=Dt(e,I(a)),i=n.length;return function iV(n,t,e,s,r,a){const o=Tw(t,2)[1],i=Tw(a,2)[1];let l=0;for(const u of e)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[l*i+h]=n[c*o+h];++l}}(n,t,s,0===i?0:i/t[0],o,a),[o,a]}(e,s,r,h,d);return[p,f[0],f[1]]}const cV={kernelName:am,backendName:"cpu",kernelFunc:function uV(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:a,indices:o}=t,l=r.map(y=>e.data.get(y.dataId).values),u=r.map(y=>y.shape),c=e.data.get(a.dataId).values,h=e.data.get(o.dataId).values,[d,p,f]=_w(l,u,c,a.shape,a.dtype,h,o.shape),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),m=e.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},$w=2147483647;function Ew(n,t,e,s,r,a,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,l=0===r.length,u=0===o.length,c=[];i||c.push(t[0]),l||c.push(r[0]),u||c.push(o[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=Dt("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const y=i?n[0]:n[m],x=l?s[0]:s[m],b=u?a[0]:a[m];if(0===b)throw new Error("Requires delta != 0");let w;if(b>0&&x<y||b<0&&x>y)w=0;else if(w=Math.ceil(Math.abs((x-y)/b)),w>$w)throw new Error(`Requires ((limit - start) / delta) <= ${$w}`);d[m+1]=d[m]+w}const f=Dt(e,d[h]);let g=0;for(let m=0;m<h;++m){const y=d[m+1]-d[m];let x=i?n[0]:n[m];const b=u?a[0]:a[m];for(let w=0;w<y;++w)f[g++]=x,x+=b}return[d,f]}const dV={kernelName:om,backendName:"cpu",kernelFunc:function hV(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:a}=t,o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(a.dataId).values,[u,c]=Ew(o,s.shape,s.dtype,i,r.shape,l,a.shape);return[e.makeTensorInfo([u.length],"int32",u),e.makeTensorInfo([c.length],s.dtype,c)]}};var Yn=qn;class sc{constructor(t,e,s,r,a,o,i,l,u,c){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=r,this.valuesDType=a,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Zg(c),this.raggedRank=Yg(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Yn.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Yn.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Yn.VALUE_ROWIDS:return sc.getMaxWidthValueRowID(e);case Yn.ROW_SPLITS:return sc.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Yn[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let s=0;for(let r=0;r<e-1;++r){const a=t[r+1]-t[r];a>s&&(s=a)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let s=0,r=t[0],a=0;for(let o=1;o<e;++o){const i=t[o];i!==r&&(r=i,a=Math.max(o-s,a),s=o)}return Math.max(e-s,a)}tensorShapeFromTensor(t,e,s=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Aw(t,s)}calculateOutputSize(t){const e=this.valuesShape;Qg(this.defaultValueShape,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=Xg(this.raggedRank,r,e);o[0]<0&&(o[0]=t);for(let i=1;i<=this.raggedRank;++i)o[i]<0&&(o[i]=this.getMaxWidth(i));return o}calculateFirstParentOutputIndex(t,e,s){const r=Math.min(t,s),a=[];let o=0;for(let i=0;i<r;++i,o+=e)a.push(o);for(let i=r;i<t;++i)a.push(-1);return S(a.length===t,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(t,e,s,r){const a=t.length,o=[];for(let i=0;i<a-1;++i){const l=t[i+1]-t[i];let u=Math.min(r,l),c=e[i];-1===c&&(u=0);for(let h=0;h<u;++h)o.push(c),c+=s;for(let h=0;h<l-u;++h)o.push(-1)}if(a>0&&o.length!==t[a-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,s,r){const a=t.length,o=[];if(0===a)return[];let i=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];o.push(u);for(let c=1;c<a;++c){const h=t[c];if(h===l)u>=0&&(++i,i<r?u+=s:u=-1);else{if(i=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);u=e[h]}o.push(u)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,s,r){const a=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case Yn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,e,s,r);case Yn.ROW_SPLITS:if(a.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(a,e,s,r);default:throw new Error(`Unsupported partition type: ${Yn[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Yn.FIRST_DIM_SIZE:return t[0];case Yn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Yn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Yn[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const a=Aw(s,!1),o=Dt(this.valuesDType,I(a));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(e,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,o,a)}return[a,o]}setOutput(t,e,s,r){if(0===s.length)return;const a=this.values,o=s;let i=r.slice();i=i.slice(t+1);const l=I(i),u=e.length;let c=this.defaultValue;if(c.length!==l&&1!==c.length){const f=this.defaultValueShape;V(()=>{const g=F(c,f);c=Ko(g,i).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let g=f<u?e[f]:-1;if(g!==p){if(d<p){const m=a.subarray(h*l);Dw(o.subarray(d*l),m,(p-d)*l)}if(f>=u&&(g=Math.floor(s.length/l)),g>p)if(1===this.defaultValue.length)o.subarray(p*l,g*l).fill(this.defaultValue[0]),p=g;else for(;g>p;)Dw(o.slice(p*l),c,l),++p;g<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}else++p}}}function Dw(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function Aw(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function Rw(n,t,e,s,r,a,o,i,l,u){return new sc(n,t,e,s,r,a,o,i,l,u).compute()}const fV={kernelName:im,backendName:"cpu",kernelFunc:function pV(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=s,u=e.data.get(r.dataId).values,c=e.data.get(a.dataId).values,h=e.data.get(o.dataId).values,d=i.map(m=>e.data.get(m.dataId).values),p=i.map(m=>m.shape),[f,g]=Rw(u,r.shape,c,a.shape,a.dtype,h,o.shape,d,p,l);return e.makeTensorInfo(f,a.dtype,g)}};function Ow(n,t,e,s){if(n===t||n<t&&e<0||t<n&&e>1)return tn(0,s);const l=tn(Math.abs(Math.ceil((t-n)/e)),s);t<n&&1===e&&(e=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}const gV={kernelName:ah,backendName:"cpu",kernelFunc:function mV(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:a,step:o}=e,i=Ow(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}},yV=ot(yo,n=>1/n),xV={kernelName:yo,backendName:"cpu",kernelFunc:yV},wV={kernelName:Nl,backendName:"cpu",kernelFunc:function bV(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;ve(r,"resizeBilinear");const l=Te(r.shape),[u,c]=i,[h,d,p,f]=r.shape,g=e.data.get(r.dataId).values,m=new Float32Array(I([h,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c];let b=0;const w=y[0]/x[0],v=y[1]/x[1];for(let C=0;C<h;C++)for(let k=0;k<u;k++){let _;_=o?w*(k+.5)-.5:w*k;const $=Math.max(0,Math.floor(_)),E=_-$,P=Math.min(d-1,Math.ceil(_)),B=C*l[0]+$*l[1],U=C*l[0]+P*l[1];for(let G=0;G<c;G++){let H;H=o?v*(G+.5)-.5:v*G;const K=Math.max(0,Math.floor(H)),X=H-K,j=Math.min(p-1,Math.ceil(H)),Z=B+K*l[2],ae=U+K*l[2],ie=B+j*l[2],ue=U+j*l[2];for(let le=0;le<f;le++){const ge=g[Z+le],ce=g[ae+le],Pe=ge+(g[ie+le]-ge)*X;m[b++]=Pe+(ce+(g[ue+le]-ce)*X-Pe)*E}}}return e.makeTensorInfo([h,u,c,f],"float32",m)}},IV={kernelName:lh,backendName:"cpu",kernelFunc:function vV(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:a}=t,{alignCorners:o}=s;ve([a,r],"resizeBilinearGrad");const i=Te(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),g=[o&&d>1?u-1:u,o&&p>1?c-1:c],m=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=g[0]/m[0],x=g[1]/m[1],b=e.data.get(a.dataId).values;let w=0;for(let v=0;v<l;v++){const C=v*i[0];for(let k=0;k<d;k++){const _=k*y,$=Math.floor(_),E=Math.min(Math.ceil(_),u-1),P=C+$*i[1],B=C+E*i[1],U=_-$,G=1-U;for(let H=0;H<p;H++){const K=H*x,X=Math.floor(K),j=Math.min(Math.ceil(K),c-1),Z=K-X,ae=1-Z,ie=P+X*i[2],ue=P+j*i[2],le=B+X*i[2],ge=B+j*i[2],ce=G*ae,ye=G*Z,$e=U*ae,Pe=U*Z;for(let Ae=0;Ae<h;Ae++){const He=b[w++];f[ie+Ae]+=He*ce,f[ue+Ae]+=He*ye,f[le+Ae]+=He*$e,f[ge+Ae]+=He*Pe}}}}return e.makeTensorInfo([l,c,u,h],"float32",f)}},CV={kernelName:Cl,backendName:"cpu",kernelFunc:function SV(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;ve(r,"resizeNearestNeighbor");const l=Te(r.shape),[u,c]=i,[h,d,p,f]=r.shape,g=e.data.get(r.dataId).values,m=new Float32Array(h*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],b=y[0]/x[0],w=y[1]/x[1];let v=0;for(let C=0;C<h;C++){const k=C*l[0];for(let _=0;_<u;_++){const $=o?b*(_+.5):b*_;let E=Math.min(d-1,a?Math.round($):Math.floor($));o&&(E=Math.max(0,E));const P=k+E*l[1];for(let B=0;B<c;B++){const U=o?w*(B+.5):w*B;let G=Math.min(p-1,a?Math.round(U):Math.floor(U));o&&(G=Math.max(0,G));const H=P+G*l[2];for(let K=0;K<f;K++)m[v++]=g[H+K]}}}return e.makeTensorInfo([h,u,c,f],r.dtype,m)}},kV={kernelName:ih,backendName:"cpu",kernelFunc:function NV(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:a}=t,{alignCorners:o}=s;ve([a,r],"resizeNearestNeighborGrad");const i=Te(r.shape),l=Te(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,g=new Float32Array(u*c*h*d),m=e.data.get(a.dataId).values,y=[o&&p>1?c-1:c,o&&f>1?h-1:h],x=[o&&p>1?p-1:p,o&&f>1?f-1:f],b=y[0]/x[0],w=y[1]/x[1],v=1/b,C=1/w,k=2*Math.ceil(v)+2,_=2*Math.ceil(C)+2;for(let $=0;$<u;$++){const E=$*i[0];for(let P=0;P<c;P++){const B=E+P*i[1],U=Math.floor(P*v),G=Math.floor(U-k/2);for(let H=0;H<h;H++){const K=B+H*i[2],X=Math.floor(H*C),j=Math.floor(X-_/2);for(let Z=0;Z<d;Z++){let ae=0;for(let ie=0;ie<k;ie++){const ue=ie+G;if(ue<0||ue>=p)continue;const le=E+ue*l[1],ge=ue*b;if(P===Math.min(c-1,o?Math.round(ge):Math.floor(ge)))for(let ye=0;ye<_;ye++){const $e=ye+j;if($e<0||$e>=f)continue;const Pe=le+$e*l[2],Ae=$e*w;H===Math.min(h-1,o?Math.round(Ae):Math.floor(Ae))&&(ae+=m[Pe+Z])}}g[K+Z]=ae}}}}return e.makeTensorInfo(r.shape,r.dtype,g)}},_V={kernelName:kl,backendName:"cpu",kernelFunc:function TV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:a}=s;ve(r,"reverse");const o=r.shape.length,i=ke(a,r.shape);if(0===o)return ks({inputs:{x:r},backend:e});const l=new nn(r.shape,r.dtype),u=e.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();i.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}},$V={kernelName:Ih,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:a,center:o}=t,i=e,l=Et(s.dtype,I(s.shape)),[u,c,h,d]=s.shape,[p,f]=Md(o,c,h),m=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let w=0;w<u;w++){const v=w*h*c*d;for(let C=0;C<c;C++){const k=C*(h*d);for(let _=0;_<h;_++){const $=_*d;for(let E=0;E<d;E++){const P=[u,C,_,E],B=P[2],U=P[1];let G=(B-p)*y-(U-f)*m,H=(B-p)*m+(U-f)*y;G=Math.round(G+p),H=Math.round(H+f);let K=a;"number"!=typeof a&&(K=3===E?255:a[E]),G>=0&&G<h&&H>=0&&H<c&&(K=x[v+H*(h*d)+G*d+E]),l[v+k+$+E]=K}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},EV=ot(wo,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2==0?t:t+1}),DV={kernelName:wo,backendName:"cpu",kernelFunc:EV},Fw=Ns(n=>1/Math.sqrt(n)),AV=lr(vo,Fw),RV={kernelName:vo,backendName:"cpu",kernelFunc:AV};function jr(n,t,e,s,r,a,o,i,l,u){const c=[s/r,r],h=n.values,d=t.values;if(0===s)return je(e,t.dtype);const p=l instanceof nn?l:je(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let f=0;f<a;f++){const g=[];let m=0;for(let y=0;y<o;y++){const x=h[f*o+y];g.push(x),m+=x*i[y]}if(m<0||m>=s/r)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let y=0;y<r;y++)u?p.values[m*r+y]+=d[f*r+y]:p.values[m*r+y]=0===t.rank?d[0]:d[f*r+y]}return p}const FV={kernelName:lm,backendName:"cpu",kernelFunc:function OV(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Or(0,r,o),g=jr(e.bufferSync(r),e.bufferSync(a),o,h,u,l,i,c,0,!0);return e.makeTensorInfo(o,g.dtype,g.values)}};function PV(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<t?e=r+1:s=r;return s}function LV(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<=t?e=r+1:s=r;return s}const zV={kernelName:cm,backendName:"cpu",kernelFunc:function MV(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:a}=t,{side:o}=s,u=function VV(n,t,e,s,r,a){const o=Dt("int32",e*r);for(let i=0;i<e;++i){const l=n.slice(i*s,(i+1)*s),u=i*r;for(let c=0;c<r;++c)o[u+c]="left"===a?PV(l,t[c+u]):LV(l,t[c+u])}return o}(e.data.get(r.dataId).values,e.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],o);return e.makeTensorInfo(a.shape,"int32",u)}},WV={kernelName:Tl,backendName:"cpu",kernelFunc:function BV(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:a}=t;ve([s,r,a],"select");const o=s.shape.length,i=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,u=e.data.get(a.dataId).values,c=Nn(r.dtype,a.dtype),h=tn(I(r.shape),c);let d=0;const p=0===o||o>1||1===r.shape.length?1:I(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let g=0;g<p;g++)h[d++]=1===i[f]?l[f]:u[f];return e.makeTensorInfo(r.shape,c,h)}},UV=mu,GV=gu,HV=ot(Io,n=>n>=0?GV*n:UV*(Math.exp(n)-1)),jV={kernelName:Io,backendName:"cpu",kernelFunc:HV},qV=ot(No,n=>n<0?-1:n>0?1:0),KV={kernelName:No,backendName:"cpu",kernelFunc:qV},XV=ot(So,n=>Math.sin(n)),ZV={kernelName:So,backendName:"cpu",kernelFunc:XV},YV=ot(Co,n=>Math.sinh(n)),QV={kernelName:Co,backendName:"cpu",kernelFunc:YV},Pw=Math.log(1.1920928955078125e-7)+2,JV=ot(To,n=>{const t=n>-Pw,e=n<Pw,s=Math.exp(n);let r;return r=e?s:t?n:Math.log(1+s),r}),eM={kernelName:To,backendName:"cpu",kernelFunc:JV},nM={kernelName:El,backendName:"cpu",kernelFunc:function tM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:a,paddings:o}=s;ve([r],"spaceToBatchND");const i=I(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<r.shape.length;++C)l.push([0,0]);const u=Nw.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),c=ei(u.shape,a,i,!1),h=ti(c.length,a.length,!1),d=ni(u.shape,a,i,!1),g=mt({inputs:{x:u},backend:e,attrs:{shape:c}}),x=Cn({inputs:{x:g},backend:e,attrs:{perm:h}}),v=mt({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),v}};function Lw(n,t,e,s,r,a,o){const i=t[0],l=a[0],u=new Array(l),c=new Array(i),h=t[1];if(0===l){if(0!==i)throw new Error(ly(i));return[Dt(e,0),[0,h],Dt(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let m=0;m<i;++m){const y=n[m*h];if(y<0)throw new Error(uy(m,y));if(y>=l)throw new Error(cy(m,y,l));++f[y],d=d&&y>=p,p=y}let g=!0;for(let m=0;m<l;++m){const y=0===f[m];u[m]=y,g=g&&!y,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const m=n,y=s;for(let x=0;x<i;++x)c[x]=x;return[m,[i,h],y,u,c]}{const m=f[l-1],y=Dt(e,m*h),x=Dt(r,m),b=new Array(l).fill(0);for(let w=0;w<i;++w){const v=n[w*h],k=(0===v?0:f[v-1])+b[v];b[v]++;for(let _=0;_<h;++_)y[k*h+_]=n[w*h+_];x[k]=s[w],c[w]=k}for(let w=0;w<l;++w)if(0===b[w]){const C=0===w?0:f[w-1];y[C*h+0]=w;for(let k=1;k<h;++k)y[C*h+k]=0;x[C]=o}return[y,[m,h],x,u,c]}}const rM={kernelName:uh,backendName:"cpu",kernelFunc:function sM(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,u=e.data.get(a.dataId).values,c=e.data.get(o.dataId).values[0],[h,d,p,f,g]=Lw(i,s.shape,s.dtype,l,r.dtype,u,c);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(m=>Number(m)))),e.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}};function Vw(n,t,e,s,r){const a=I(s),o=t[0],i=r.length,l=[];let u=1,c=-1;for(let m=0;m<i;++m){const y=r[m];if(-1===y){if(-1!==c)throw new Error(hy(c,m));c=m,l.push(1)}else{if(y<0)throw new Error(dy(m,y));u*=y,l.push(y)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const m=Math.trunc(a/u);if(u*m!==a)throw new Error(fy(s,l));l[c]=m}if(I(l)!==a)throw new Error(my(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let m=d-2;m>=0;--m)p[m]=p[m+1]*s[m+1]}const f=[];if(i>0){f[i-1]=1;for(let m=i-2;m>=0;--m)f[m]=f[m+1]*l[m+1]}const g=Dt(e,o*i);for(let m=0;m<o;++m){let y=0;for(let x=0;x<d;++x)y+=n[m*d+x]*p[x];for(let x=0;x<i;++x)g[m*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[g,[o,i],l]}const oM={kernelName:ch,backendName:"cpu",kernelFunc:function aM(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(e.data.get(r.dataId).values),i=e.data.get(s.dataId).values,l=Array.from(e.data.get(a.dataId).values),[u,c,h]=Vw(i,s.shape,s.dtype,o,l);return[e.makeTensorInfo(c,s.dtype,u),e.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function If(n,t,e,s,r,a=!1,o=0){const i=s.length,l=[t[0],n.length/t[0]],u=l[1],h=i>0?r[i-1]+1:0;if(h<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=h;const f=Dt(e,d.reduce((b,w)=>b*w,1));if(0===i)return h>0&&f.fill(o),[f,d];if(h<=0)throw new Error("segment ids must be >= 0");let g=0,m=1,y=0,x=r[g];for(;;){let b=0;if(m<i){if(b=r[m],x===b){++m;continue}if(x>=b)throw new Error("segment ids are not increasing")}if(x<0||x>=h)throw new Error(yy(x,h));x>y&&f.fill(o,y*u,x*u);for(let w=g;w<m;++w){const v=s[w];if(v<0||v>=l[0])throw new Error(xy(w,s[w],l[0]));for(let C=0;C<u;C++)f[x*u+C]+=n[v*u+C]}if(a)for(let w=0;w<u;w++)f[x*u+w]/=m-g;if(g=m,++m,y=x+1,x=b,m>i)break}return y<h&&f.fill(o,y*u,h*u),[f,d]}const lM={kernelName:hh,backendName:"cpu",kernelFunc:function iM(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(a.dataId).values,[u,c]=If(o,s.shape,s.dtype,i,l,!0);return e.makeTensorInfo(c,s.dtype,u)}},cM={kernelName:dh,backendName:"cpu",kernelFunc:function uM(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(a.dataId).values,[u,c]=If(o,s.shape,s.dtype,i,l);return e.makeTensorInfo(c,s.dtype,u)}},dM={kernelName:hm,backendName:"cpu",kernelFunc:function hM(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Or(0,r,i),p=!1,f=e.bufferSync(r);let g;switch(a.dtype){case"bool":g=jr(f,e.bufferSync(a),i,d,c,u,l,h,Boolean(e.data.get(o.dataId).values[0]),p);break;case"float32":case"int32":g=jr(f,e.bufferSync(a),i,d,c,u,l,h,e.data.get(o.dataId).values[0],p);break;case"string":g=jr(f,e.bufferSync(a),i,d,c,u,l,h,Es(e.data.get(o.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return e.makeTensorInfo(i,g.dtype,g.values)}},fM={kernelName:Dl,backendName:"cpu",kernelFunc:function pM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=ke(o,r.shape)[0],l=np(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[i]=h;const p=Hr({inputs:{x:r},backend:e,attrs:{begin:u,size:d}});return u[i]+=h,p})}},mM=Ns(n=>Math.sqrt(n)),gM=ot(_o,n=>Math.sqrt(n)),yM={kernelName:_o,backendName:"cpu",kernelFunc:gM},xM={kernelName:ph,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;ve(e,"square");const r=s.data.get(e.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){const l=r[i];a[i]=l*l}return{dataId:s.write(a,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},Mw=Mt((n,t)=>{const e=n-t;return e*e}),bM=qt($o,Mw),wM={kernelName:$o,backendName:"cpu",kernelFunc:bM},zw=Ns((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:r}=t;return n.replace(new RegExp(e,s?"g":""),r)}),IM={kernelName:Rl,backendName:"cpu",kernelFunc:lr(Rl,zw)},SM=ot(Oo,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),CM={kernelName:Oo,backendName:"cpu",kernelFunc:SM};function Bw(n,t,e,s){const r=je(n,t.dtype);for(let a=0;a<r.size;a++){const o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*e[l]+s[l];r.set(t.get(...i),...o)}return r}const kM={kernelName:fh,backendName:"cpu",kernelFunc:function NM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;ve(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:x,end:b,strides:w}=ad(r.shape,a,o,i,l,u,c,h,d);let v;if(g)v=mt({inputs:{x:r},backend:e,attrs:{shape:f}});else if(m||y){S(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=nd(x,b,w),k=Hr({inputs:{x:r},backend:e,attrs:{begin:x,size:C}});v=mt({inputs:{x:k},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(k)}else{const k=Bw(p,e.bufferSync(r),w,x);v=e.makeTensorInfo(f,k.dtype,k.values)}return v}};class TM{constructor(t,e,s,r,a,o){this.separator=$s(t),this.nGramWidths=e,this.leftPad=$s(s),this.rightPad=$s(r),this.padWidth=a,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,r,a,o){for(let i=0;i<a;++i){const l=this.getPadWidth(o),u=Math.max(0,l-i),c=Math.max(0,l-(a-(i+1))),h=o-(u+c),d=e+(u>0?0:i-l);let p=0;p+=u*this.leftPad.length;for(let x=0;x<h;++x)p+=t[d+x].length;p+=c*this.rightPad.length,p+=(u+c+h-1)*this.separator.length,s[r+i]=new Uint8Array(p);const g=s[r+i];let m=0;const y=x=>x.forEach(b=>g[m++]=b);for(let x=0;x<u;++x)y(this.leftPad),y(this.separator);for(let x=0;x<h-1;++x)y(t[d+x]),y(this.separator);if(h>0){y(t[d+h-1]);for(let x=0;x<c;++x)y(this.separator),y(this.rightPad)}else{for(let x=0;x<c-1;++x)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(t,e){const s=t.length,r=e.length;if(r>0){let l=e[0];if(0!==l)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=e[u]>=l;if(c=c&&e[u]<=s,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${s}]`);l=e[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const a=r-1,o=Dt("int32",r);if(0===s||0===r){const l=new Array(s);for(let u=0;u<=a;++u)o[u]=0;return[l,o]}o[0]=0;for(let l=1;l<=a;++l){const u=e[l]-e[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&0===c&&(c=1),o[l]=o[l-1]+c}const i=new Array(o[a]);for(let l=0;l<a;++l){const u=e[l];let c=o[l];if(this.nGramWidths.forEach(h=>{const p=this.getNumNGrams(e[l+1]-e[l],h);this.createNGrams(t,u,i,c,p,h),c+=p}),this.preserveShort&&c===o[l]){const h=e[l+1]-e[l];if(0===h)continue;this.createNGrams(t,u,i,c,1,h+2*this.padWidth)}}return[i,o]}}function Ww(n,t,e,s,r,a,o,i){return new TM(e,s,r,a,o,i).compute(n,t)}const $M={kernelName:mh,backendName:"cpu",kernelFunc:function _M(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=e.data.get(c.dataId).values,p=e.data.get(h.dataId).values,[f,g]=Ww(d,p,r,a,o,i,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",g)]}};function EM(n,t,e,s){if(!n.length)return;if(0===t.length){for(let a=0;a<n.length;++a)s.push(n.subarray(a,a+1));return}if(1===t.length){const a=t[0];let o=n.indexOf(a);for(;-1!==o;){const i=n.subarray(0,o);(!e||0!==i.length)&&s.push(i),o=(n=n.subarray(o+1)).indexOf(a)}return void((!e||0!==n.length)&&s.push(n))}let r=0;for(let a=0;a<n.length+1;a++)if(a===n.length||-1!==t.indexOf(n[a])){const o=n.subarray(r,a);(!e||0!==o.length)&&s.push(o),r=a+1}}function Uw(n,t,e){const s=n.length,r=[];let a=0,o=0;const i=new Array(s);for(let d=0;d<s;++d){const p=r.length;EM(n[d],t,e,r);const f=r.length-p;i[d]=f,a+=f,o=Math.max(o,f)}const l=Dt("int32",2*a),u=new Array(a),c=[s,o];let h=0;for(let d=0;d<s;++d)for(let p=0;p<i[d];++p)l[2*h]=d,l[2*h+1]=p,u[h]=r[h],++h;return[l,u,c]}const AM={kernelName:gh,backendName:"cpu",kernelFunc:function DM(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=e.data.get(a.dataId).values,l=e.data.get(o.dataId).values[0],[u,c,h]=Uw(i,l,r),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(h))]}};function Gw(n,t){const e=Dt("int32",n.length);for(let s=0;s<n.length;++s)e[s]=xm(n[s]).modulo(t).getLowBitsUnsigned();return e}const OM={kernelName:yh,backendName:"cpu",kernelFunc:function RM(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=Gw(e.data.get(a.dataId).values,r);return e.makeTensorInfo(a.shape,"int32",i)}},FM=ot(Do,n=>Math.tan(n)),PM={kernelName:Do,backendName:"cpu",kernelFunc:FM},LM=ot(Ao,n=>Math.tanh(n));function Hw(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=je(e,n.dtype);for(let r=0;r<s.values.length;++r){const a=s.indexToLoc(r),o=new Array(n.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%n.shape[l];const i=n.locToIndex(o);s.values[r]=n.values[i]}return s}const bi=(n,t)=>{const e=t.value-n.value;return 0===e?n.index-t.index:e};function jw(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const i=s-e+1,l=t-e+1,u=Math.log(i),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(i-c)/i)*Math.sign(l-i/2);jw(n,t,Math.max(e,Math.floor(t-l*c/i+h)),Math.min(s,Math.floor(t+(i-l)*c/i+h)))}const r=n[t];let a=e,o=s;for(rt(n,e,t),bi(n[s],r)>0&&rt(n,e,s);a<o;){for(rt(n,a,o),a++,o--;bi(n[a],r)<0;)a+=1;for(;bi(n[o],r)>0;)o-=1}0===bi(n[e],r)?rt(n,e,o):(o+=1,rt(n,o,s)),o<=t&&(e=o+1),t<=o&&(s=o-1)}}function qw(n,t,e,s,r){const a=t[t.length-1],[o,i]=[n.length/a,a],l=Et(e,o*s),u=Et("int32",o*s);for(let h=0;h<o;h++){const d=h*i,p=n.subarray(d,d+i);let f=new Array(p.length);p.forEach((x,b)=>f[b]={value:x,index:b}),s<f.length&&(jw(f,s),f=f.slice(0,s)),r&&f.sort(bi);const g=h*s,m=l.subarray(g,g+s),y=u.subarray(g,g+s);for(let x=0;x<s;x++)m[x]=f[x].value,y[x]=f[x].index}const c=t.slice();return c[c.length-1]=s,[je(c,e,l),je(c,"int32",u)]}function Kw(n,t,e){switch(e){case"reflect":return function qM(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return Be(0,e,t-1)}(n,t);case"wrap":return function KM(n,t){let e=n;return e<0?t<=1?e=0:e+=t*(Math.trunc(-e/(t-1))+1):e>t-1&&(t<=1?e=0:e-=t*Math.trunc(e/(t-1))),Be(0,e,t-1)}(n,t);case"nearest":return function ZM(n,t){return Be(0,n,t-1)}(n,t);default:return function XM(n,t){return n}(n)}}function wi(n,t,e,s,r,a,o,i,l,u,c){return 0<=i&&i<t&&0<=l&&l<e?n[o*s+i*r+l*a+u]:c}function YM(n,t,e,s,r,a,o,i,l,u,c){return wi(n,t,e,s,r,a,o,Math.round(i),Math.round(l),u,c)}function QM(n,t,e,s,r,a,o,i,l,u,c){const h=Math.floor(i),d=Math.floor(l),p=h+1,f=d+1;return(p-i)*((f-l)*wi(n,t,e,s,r,a,o,h,d,u,c)+(l-d)*wi(n,t,e,s,r,a,o,h,f,u,c))+(i-h)*((f-l)*wi(n,t,e,s,r,a,o,p,d,u,c)+(l-d)*wi(n,t,e,s,r,a,o,p,f,u,c))}function Xw(n,t,e,s){const r=ke(t,e)[0],a=[1,e[0],1];for(let f=0;f<r;f++)a[0]*=e[f];a[1]=e[r];for(let f=r+1;f<e.length;f++)a[2]*=e[f];const o=new Map,i=new Int32Array(e[r]),l=new nn(a,s,n),u=[],c=1===a[0]&&1===a[2];for(let f=0;f<e[r];f++){let g;if(c)g=n[f].toString();else{const y=[];for(let x=0;x<a[0];x++)for(let b=0;b<a[2];b++)y.push(l.get(x,f,b));g=y.join(",")}const m=o.get(g);if(null!=m)i[f]=m;else{const y=o.size;o.set(g,y),i[f]=y,u.push(f)}}const h=a.slice();h[1]=o.size;const d=new nn(h,s);u.forEach((f,g)=>{for(let m=0;m<a[0];m++)for(let y=0;y<a[2];y++)d.set(l.get(m,f,y),m,g,y)});const p=e.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const az=[tO,nO,rO,oO,YR,lO,hO,pO,mO,yO,bO,vO,SO,kO,_O,DO,RO,FO,LO,JR,MO,WO,GO,jO,KO,XR,ZO,QO,qR,JO,tF,nF,rF,oF,lF,cF,dF,fF,gF,xF,wF,IF,CF,kF,TF,$F,DF,RF,OF,FF,PF,BF,VR,UF,GF,QF,JF,eP,nP,cP,hP,pP,mP,yP,bP,vP,SP,NP,TP,$P,MR,DP,eF,RP,FP,LP,zR,MP,BP,UP,HP,qP,ZP,QP,tL,sL,aL,oL,lL,cL,dL,fL,gL,xL,wL,IL,CL,kL,$L,AL,VF,OL,LL,zL,UL,HL,qL,XL,ZL,Nw,eV,WR,nV,cV,dV,fV,gV,KR,xf,xV,UR,GR,QR,wV,IV,CV,kV,_V,$V,DV,RV,FV,zV,WV,jV,jR,KV,ZV,QV,zO,EL,eM,nM,rM,oM,lM,cM,dM,fM,yM,xM,wM,IM,CM,kM,$M,AM,OM,aP,MF,PM,{kernelName:Ao,backendName:"cpu",kernelFunc:LM},{kernelName:um,backendName:"cpu",kernelFunc:function MM(n){const{inputs:t,backend:e}=n,{tensor:s,indices:r,updates:a}=t,{sliceRank:o,numUpdates:i,sliceSize:l,strides:u,outputSize:c}=Or(0,r,s.shape),d=e.bufferSync(r),p=e.bufferSync(a),f=e.bufferSync(s),g=jr(d,p,s.shape,c,l,i,o,u,f,!1);return e.makeTensorInfo(s.shape,g.dtype,g.values)}},{kernelName:Ro,backendName:"cpu",kernelFunc:function BM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:a}=s;ve(r,"tile");const o=Hw(e.bufferSync(r),a);return e.makeTensorInfo(o.shape,o.dtype,o.values)}},{kernelName:xh,backendName:"cpu",kernelFunc:function UM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:a,sorted:o}=s;ve(r,"topk");const i=e.data.get(r.dataId).values,[l,u]=qw(i,r.shape,r.dtype,a,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}},{kernelName:bh,backendName:"cpu",kernelFunc:function HM(n){const{inputs:t,attrs:e,backend:s}=n,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=e,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],y=Te(r.shape),x=y[0],b=y[1],w=y[2],v=Te(m),C=v[0],k=v[1],_=v[2],$=Et(r.dtype,I(m));$.fill(l);const E=s.data.get(r.dataId).values,P=s.data.get(a.dataId).values;for(let U=0;U<c;++U){const G=1===a.shape[0]?P:P.subarray(8*U,8*U+8);for(let H=0;H<f;++H)for(let K=0;K<g;++K)for(let X=0;X<p;++X){let j;const Z=G[6]*K+G[7]*H+1;if(0===Z)continue;const ie=(G[3]*K+G[4]*H+G[5])/Z,ue=Kw((G[0]*K+G[1]*H+G[2])/Z,d,i),le=Kw(ie,h,i);switch(o){case"nearest":j=YM(E,h,d,x,b,w,U,le,ue,X,l);break;case"bilinear":j=QM(E,h,d,x,b,w,U,le,ue,X,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}$[U*C+H*k+K*_+X]=j}return s.makeTensorInfo(m,r.dtype,$)}return{dataId:s.write($,m,r.dtype),shape:r.shape,dtype:r.dtype}}},uO,{kernelName:wh,backendName:"cpu",kernelFunc:function JM(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:a}=t;ve(a,"unique");const o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=Xw(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Ol,backendName:"cpu",kernelFunc:function tz(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r.shape.length,i=r.shape[a],l=new Array(o-1);let u=0;for(let p=0;p<o;p++)p!==a&&(l[u++]=r.shape[p]);const c=new Array(o).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(i);for(let p=0;p<d.length;p++){c[a]=p;const f=Hr({inputs:{x:r},backend:e,attrs:{begin:c,size:h}});d[p]=mt({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return d}},{kernelName:Fl,backendName:"cpu",kernelFunc:function sz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:a}=t,{numSegments:o}=s;ve(r,"unsortedSegmentSum");const u=[],c=[],h=r.shape.length-a.shape.length;let d=a;for(let f=0;f<h;++f){const g=tc({inputs:{input:d},backend:e,attrs:{dim:f+1}});d=g,c.push(g)}for(let f=0;f<o;++f){const g=_s(f,"int32"),m=e.makeTensorInfo([],"int32",g),y=ew({inputs:{a:m,b:d},backend:e}),x=ur({inputs:{x:y},backend:e,attrs:{dtype:"float32"}}),b=ec({inputs:{a:x,b:r},backend:e}),w=xi({inputs:{x:b},backend:e,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(m),c.push(y),c.push(x),c.push(b),c.push(w)}const p=Cw({inputs:u,backend:e,attrs:{axis:0}});return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},KL];for(const n of az)Nh(n);const cr={},rc={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function us(n,t){if(!(n in cr)||null!=t){const s=function lz(n,t){if(1!==n&&2!==n)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=null==t?function iz(n){if(!z().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===n)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(n):t;return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete cr[n]},!1),z().getBool("SOFTWARE_WEBGL_ENABLED")&&(rc.failIfMajorPerformanceCaveat=!1),1===n?e.getContext("webgl",rc)||e.getContext("experimental-webgl",rc):e.getContext("webgl2",rc)}(n,t);if(null===s)return console.log("Could not get context for WebGL version",n),null;cr[n]=s}const e=cr[n];return null==e||e.isContextLost()?(delete cr[n],us(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),cr[n])}var Ca=(()=>{return(n=Ca||(Ca={}))[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH",Ca;var n})(),$n=(()=>{return(n=$n||($n={}))[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD",$n;var n})(),Jt=(()=>{return(n=Jt||(Jt={}))[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",Jt;var n})();function vi(n,t){return[t,n]}function ac(n){const t=I(n);return It(Math.ceil(t/4))}function Na(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function Sf(n,t){const e=n;let s,r,a,o,i,l,u,c,h,d;return 2===z().getNumber("WEBGL_VERSION")?(s=e.R32F,r=e.R16F,a=e.RGBA16F,o=e.RGBA32F,i=e.RED,u=4,c=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(s=n.RGBA,r=n.RGBA,a=n.RGBA,o=e.RGBA,i=n.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function de(n,t){const e=t();return z().getBool("DEBUG")&&function hz(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+function mz(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(n,t))}(n),e}function fz(n){return!!(z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===n||5.96e-8<Math.abs(n)&&Math.abs(n)<65504)}function oc(n,t){return Bs(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}const xz=/ERROR: [0-9]+:([0-9]+):/g;function Zw(n,t){const e=xz.exec(t);if(null==e)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(n);const s=+e[1],r=n.split("\n"),a=r.length.toString().length+2,o=r.map((h,d)=>St((d+1).toString(),a)+h);let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const l=o.slice(0,s-1),u=o.slice(s-1,s),c=o.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${St(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function Cf(n,t){if(de(n,()=>n.validateProgram(t)),!1===n.getProgramParameter(t,n.VALIDATE_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Yw(n,t,e,s,r,a,o){const i=n.getAttribLocation(t,e);return-1!==i&&(de(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),de(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,a,o)),de(n,()=>n.enableVertexAttribArray(i)),!0)}function $z(n,t,e,s){de(n,()=>function kz(n,t,e){(function Jw(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${e}].`)})(n,e),de(n,()=>n.activeTexture(n.TEXTURE0+e)),de(n,()=>n.bindTexture(n.TEXTURE_2D,t))}(n,t,s)),de(n,()=>n.uniform1i(e,s))}function Nf(n,t,e){de(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),de(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Qw(n,t){de(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),de(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function ic(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function Ez(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(n,t))}function Bs(n,t,e){const s=de(n,()=>t());if(null==s)throw new Error(e);return s}function ka(n,t=2){return I(n.slice(0,n.length-t))}function Ta(n){if(0===n.length)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function lc(n){let t=[1,1,1];return 0===n.length||1===n.length&&1===n[0]||(t=[ka(n),...Ta(n)]),t}function uc(n){return n%2==0}function cc(n,t){if(we(n=n.slice(-2),t=t.slice(-2))||!n.length||!t.length||0===n[0]||0===n[1]||0===t[0]||0===t[1])return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||uc(e)&&uc(s)&&(1===n[0]||1===t[0]))return!0}return n[1]===t[1]&&uc(n[0])&&uc(t[0])}let hc,dc;function Qn(n,t){return null!=n.getExtension(t)}function e1(n){try{if(null!=us(n))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function kf(n){const t=Sf(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(a),o}function Ii(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&S("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const Ne=z();function xn(){let n,t,e,s,r,a,o,i,l,u;return 2===z().getNumber("WEBGL_VERSION")?(n="#version 300 es",t="in",e="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=z().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(n="",t="attribute",e="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function qr(n,t,e="index"){const s=Te(t);return s.map((r,a)=>`int ${n[a]} = ${e} / ${r}; ${a===s.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${r}`:`index -= ${n[a]} * ${r}`};`).join("")}function pc(n,t,e="index"){const s=Te(t);return s.map((r,a)=>`int ${n[a]} = ${e} / outShapeStrides[${a}]; ${a===s.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * outShapeStrides[${a}]`:`index -= ${n[a]} * outShapeStrides[${a}]`};`).join("")}function Tf(n){const t=Te(n).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0),Ne.registerFlag("WEBGL_VERSION",()=>e1(2)?2:e1(1)?1:0),Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Ne.get("WEBGL_VERSION")),Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL")),Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK")),Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function Az(n){if(null==hc){const t=us(n);hc=t.getParameter(t.MAX_TEXTURE_SIZE)}return hc}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function Rz(n){if(null==dc){const t=us(n);dc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,dc)}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ne.getNumber("WEBGL_VERSION");return 0===n?0:function Oz(n){if(0===n)return 0;let t;const e=us(n);return t=Qn(e,"EXT_disjoint_timer_query_webgl2")&&2===n?2:Qn(e,"EXT_disjoint_timer_query")?1:0,t}(n)}),Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!_m()),Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function Fz(n){if(0===n)return!1;const t=us(n);if(1===n){if(!Qn(t,"OES_texture_float"))return!1}else if(!Qn(t,"EXT_color_buffer_float"))return!1;return kf(t)}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Ne.getBool("WEBGL_FORCE_F16_TEXTURES")&&Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function Pz(n){if(0===n)return!1;const t=us(n);if(1!==n){if(Qn(t,"EXT_color_buffer_float"))return kf(t);const s="EXT_color_buffer_half_float";if(Qn(t,s)){const r=t.getExtension(s);return function Lz(n,t){const e=Sf(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(o),i}(t,r)}return!1}return!(!Qn(t,"OES_texture_float")||!Qn(t,"WEBGL_color_buffer_float"))&&kf(t)}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>function Vz(n){return 2===n&&null!=us(n).fenceSync}(Ne.getNumber("WEBGL_VERSION"))),Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>_m()?1:-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Ne.registerFlag("WEBGL_EXP_CONV",()=>!1),Ne.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ne.getBool("IS_TEST")),Ne.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Ne.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Ne.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),Ne.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const t1="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:n1}=be;function Bz(n,t,e){const s=[];if(n.forEach(p=>{const f=I(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){const{uniformShape:g}=$f(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(g.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`)}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join("\n"),a=n.map(p=>function Wz(n,t,e=!1,s){let r="";return r+=e?s1(n,s):_a(n,s),n.shapeInfo.logicalShape.length<=t.logicalShape.length&&(r+=e?function v3(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",a=n.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=n1(n.shapeInfo.logicalShape,t.logicalShape),l=ut(o),u=o-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":o<2&&i.length>=1?"coords = 0;":i.map(x=>`coords.${h[x+u]} = 0;`).join("\n");let d="";d=o<2&&a>0?"coords":n.shapeInfo.logicalShape.map((x,b)=>`coords.${h[b+u]}`).join(", ");let p="return outputValue;";const g=1===I(n.shapeInfo.logicalShape),y=1===I(t.logicalShape);if(1!==a||g||y){if(g&&!y)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const x=a-2,b=a-1;i.indexOf(x)>-1&&i.indexOf(b)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(b)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(n,t):function I3(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!n.shapeInfo.isUniform&&i===l&&null==n.shapeInfo.flatOffset&&we(n.shapeInfo.texShape,t.texShape))return`\n      float ${r}() {\n        return sampleTexture(${e}, resultUV);\n      }\n    `;const u=ut(l),c=n1(n.shapeInfo.logicalShape,t.logicalShape),h=l-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":l<2&&c.length>=1?"coords = 0;":c.map(g=>`coords.${p[g+h]} = 0;`).join("\n");let f="";return f=l<2&&i>0?"coords":n.shapeInfo.logicalShape.map((g,m)=>`coords.${p[m+h]}`).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(n,t)),r}(p,t,e.packedInputs,e.enableShapeUniforms)).join("\n"),o=t.texShape,i=xn(),l=function Hz(n){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${n.texture2D}(textureSampler, uv).r;\n    }\n  `}(i);let u,c,h=function Kz(n){return`${n.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${n.varyingFs} vec2 resultUV;\n    ${n.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${n.defineSpecialNaN}\n    ${n.defineSpecialInf}\n    ${n.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Xz}\n    ${Zz}\n    ${Yz}\n  `}(i);return t.isPacked?(u=function Uz(n,t,e){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function Jz(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?e?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,e);case 2:return function i3(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(we(n,t))return e?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(n[1]/2);return e?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(n,t,e);case 3:return function t3(n,t,e){if(e)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[2]/2),a=r*Math.ceil(n[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(n,t,e);default:return function s3(n,t,e){if(e)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[n.length-1]/2),a=r*Math.ceil(n[n.length-2]/2);let o=a,i="",l="b, r, c";for(let u=2;u<n.length-1;u++)o*=n[n.length-u-1],i=`\n      int b${u} = index / ${o};\n      index -= b${u} * ${o};\n    `+i,l=`b${u}, `+l;return`\n    ivec${n.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${n.length}(${l});\n    }\n  `}(n,t,e)}}(t.logicalShape,o,e.enableShapeUniforms),c=function qz(n){return`\n    void setOutput(vec4 val) {\n      ${n.output} = val;\n    }\n  `}(i)):(u=function Gz(n,t,e){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function e3(n,t,e){return 1===t[0]?e?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?e?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:e?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,e);case 2:return function l3(n,t,e){return we(n,t)?e?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===n[1]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===n[0]?e?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:e?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${n[1]};\n      int c = index - r * ${n[1]};\n      return ivec2(r, c);\n    }\n  `}(n,t,e);case 3:return function n3(n,t,e){if(e)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${pc(["r","c","d"],n)}\n    return ivec3(r, c, d);\n  }\n`;const s=qr(["r","c","d"],n);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(n,t,e);case 4:return function r3(n,t,e){if(e)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${pc(["r","c","d","d2"],n)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=qr(["r","c","d","d2"],n);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(n,t,e);case 5:return function a3(n,t){const e=qr(["r","c","d","d2","d3"],n);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(n,t);case 6:return function o3(n,t){const e=qr(["r","c","d","d2","d3","d4"],n);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,e.enableShapeUniforms),c=function jz(n){return`\n    void setOutput(float val) {\n      ${n.output} = vec4(val, 0, 0, 0);\n    }\n  `}(i)),e.packedInputs&&(h+=Qz),[h,l,c,r,u,a,e.userCode].join("\n")}function _a(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return function c3(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[r,a]=n.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const o=Kr(e);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `;const[i,l]=n.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${i}, ${l}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n,t);case 1:return function d3(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${$a(n)}\n      }\n    `;const r=n.shapeInfo.texShape,a=r[0],o=r[1];if(1===o&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Kr(e);return 1===o?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${e}TexShape[0]));\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${e}TexShape[1]), 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n,t);case 2:return function f3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape;if(null!=a&&we(e,a))return t?`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${a[0]}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const{newShape:o,keptDims:i}=$t(e);if(o.length<e.length){const p=["row","col"];return`\n      ${_a(Ea(n,o),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${Da(p,i)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${$a(n)}\n      }\n    `;const u=a[0],c=a[1],h=Kr(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(n,t);case 3:return function g3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e[1]*e[2],o=e[2],{newShape:i,keptDims:l}=$t(e);if(i.length<e.length){const m=["row","col","depth"];return`\n        ${_a(Ea(n,i),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Da(m,l)});\n        }\n      `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${$a(n)}\n      }\n    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===o&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=Kr(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(n,t);case 4:return function x3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e[3],o=e[2]*a,i=e[1]*o,{newShape:l,keptDims:u}=$t(e);if(l.length<e.length){const b=["row","col","depth","depth2"];return`\n      ${_a(Ea(n,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Da(b,u)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${$a(n)}\n      }\n    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const y=Kr(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `}(n,t);case 5:return function b3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:u}=$t(t);if(l.length<t.length){const m=["row","col","depth","depth2","depth3"];return`\n      ${_a(Ea(n,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${Da(m,u)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${a}, ${r})) +\n          depth3;\n        ${$a(n)}\n      }\n    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${Kr(e)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);case 6:return function w3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:a}=$t(t);if(r.length<t.length){const y=["row","col","depth","depth2","depth3","depth4"];return`\n      ${_a(Ea(n,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${Da(y,a)});\n      }\n    `}const o=t[5],i=t[4]*o,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${$a(n)}\n      }\n    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(f===o&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${Kr(e)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function s1(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return function u3(n){const t=n.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${xn().texture2D}(${t}, halfCR);\n    }\n  `}(n);case 1:return function h3(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,a=xn();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(n,t);case 2:return function p3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape,o=a[0],i=a[1],l=xn();if(null!=a&&we(e,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(n,t);case 3:return function m3(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const p=[1,2],g=["b","row","col"];return`\n        ${s1(Ea(n,e.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Da(g,p)});\n        }\n      `}const i=xn();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${s}, uv);\n    }\n  `;const l=o[0],u=o[1],c=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(e[1]/2)}, ${c}, b, row, col);\n      return ${i.texture2D}(${s}, uv);\n    }\n  `}(n,t);default:return function y3(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=xn();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${e}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${e}, uv);\n    }\n  `;const a=n.shapeInfo.logicalShape,o=a.length,i=n.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[o-1]/2);let d=h*Math.ceil(a[o-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<o-1;g++)p=`int b${g}, `+p,d*=a[o-g-1],f=`b${g} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${e}, uv);\n    }\n  `}(n,t)}}const Xz="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Zz="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Yz="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qz="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Kr(n){return`offset${n}`}function $a(n){const t=n.name,e=I(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`\n    for (int i = 0; i < ${e}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ut(n){if(n<=1)return"int";if(2===n)return"ivec2";if(3===n)return"ivec3";if(4===n)return"ivec4";if(5===n)return"ivec5";if(6===n)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function $f(n,t,e){const{newShape:s,keptDims:r}=$t(t),a=t.length,o=n&&3===a&&1===t[0],i=o?t.slice(1):s,l=!n&&a>1&&!we(t,e)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function Ea(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function Da(n,t){return t.map(e=>n[e]).join(", ")}function a1(n,t,e){const s=[],r=[];let a,o,i,l=null,u=null;u=n.getUniformLocation(e,"NAN",!1),1===z().getNumber("WEBGL_VERSION")&&(l=n.getUniformLocation(e,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const d={name:h,uniform:n.getUniformLocation(e,h,c),offset:n.getUniformLocation(e,`offset${h}`,c)};t.enableShapeUniforms&&(d.shape=n.getUniformLocation(e,`${h}Shape`,c),d.texShape=n.getUniformLocation(e,`${h}TexShape`,c)),s.push(d)}if(t.enableShapeUniforms&&(a=n.getUniformLocation(e,"outShape",c),i=n.getUniformLocation(e,"outShapeStrides",c),o=n.getUniformLocation(e,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)r.push(n.getUniformLocation(e,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}}function o1(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,a=t[s],o=a.shape;if(!we(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!we(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function un(n){return z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}class k3{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ca.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=xn();this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?pc(["r","c","d"],t):qr(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class T3{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ca.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=xn();this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?pc(["r","c","d"],t):qr(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class _3{constructor(t){this.variableNames=["A"],this.outTexUsage=$n.DOWNLOAD;const e=xn();this.outputShape=t,this.userCode=`\n      ${t1}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class $3{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=$n.DOWNLOAD;const e=xn();this.outputShape=t,this.userCode=`\n      ${t1}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}const E3={R:0,G:1,B:2,A:3};class i1{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=xn();this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);let a="result";e&&(a="floor(result * 255. + 0.5)");let o="";for(let i=0;i<s.length;i++)o+=`\n          if(offset == ${i}) {\n            result = values[${E3[s[i]]}];\n          }`;this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Tf(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${s.length});\n\n        flatIndex = idiv(flatIndex, ${s.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${o}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class D3{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=xn();this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);let r="",a="result";e&&(a="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let i=0;i<=1;i++){const l=2*o+i;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${i};\n          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${o};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${s.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${l}] = values[0];\n            } else if (offset == 1) {\n              result[${l}] = values[1];\n            } else if (offset == 2) {\n              result[${l}] = values[2];\n            } else {\n              result[${l}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Tf(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${s.output} = ${a};\n        }\n    `}}function Si(n,t,e,s,r,a){!function Cz(n,t){const e=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0)throw new Error(`Requested texture size [${n}x${t}] is invalid.`);if(n>e||t>e)throw new Error(`Requested texture size [${n}x${t}] greater than WebGL maximum on this browser / GPU [${e}x${e}].`)}(t,e);const o=function Sz(n){return Bs(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}(n),i=n.TEXTURE_2D;return de(n,()=>n.bindTexture(i,o)),de(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),de(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),de(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),de(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),1===z().getNumber("WEBGL_VERSION")?de(n,()=>n.texImage2D(i,0,s,t,e,0,r,a,null)):de(n,()=>n.texStorage2D(i,1,s,t,e)),de(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[e,t]}}function l1(n){return n.internalFormatFloat}function u1(n){return n.internalFormatHalfFloat}function c1(n){return n.downloadTextureFormat}function h1(n){return n.internalFormatPackedFloat}function d1(n){return n.internalFormatPackedHalfFloat}class Ef{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=z().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,function oz(n,t){cr[n]=t}(e,t)):this.gl=us(e),t=this.gl,2===z().getNumber("WEBGL_VERSION")){const a=t;this.createVertexArray=()=>de(a,()=>a.createVertexArray()),this.bindVertexArray=o=>de(a,()=>a.bindVertexArray(o)),this.deleteVertexArray=o=>de(a,()=>a.deleteVertexArray(o)),this.getVertexArray=()=>de(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(null!=t){const a=t.getExtension("OES_vertex_array_object");if(null==a)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>de(t,()=>a.createVertexArrayOES()),this.bindVertexArray=o=>de(t,()=>a.bindVertexArrayOES(o)),this.deleteVertexArray=o=>de(t,()=>a.deleteVertexArrayOES(o)),this.getVertexArray=()=>de(t,()=>t.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===z().getNumber("WEBGL_VERSION")){const o="OES_texture_half_float";if(this.textureFloatExtension=oc(this.gl,"OES_texture_float"),Qn(this.gl,o))this.textureHalfFloatExtension=oc(this.gl,o);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Qn(this.gl,r))this.colorBufferHalfFloatExtension=oc(this.gl,r);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Qn(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else{if(!Qn(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function R3(n){return function vz(n,t){const e=Bs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return de(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),de(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}(n,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function O3(n){return function Iz(n,t){const e=Bs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return de(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),de(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}(n,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function Nz(n){return Bs(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Sf(this.gl,this.textureHalfFloatExtension)}get debug(){return z().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;de(t,()=>t.finish()),de(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),de(t,()=>t.deleteFramebuffer(this.framebuffer)),de(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),de(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),de(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function F3(n,t,e,s){const[r,a]=vi(t,e);return Si(n,r,a,l1(s),s.textureFormatFloat,n.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function P3(n,t,e,s){const[r,a]=vi(t,e);return Si(n,r,a,u1(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function L3(n,t,e,s){const[r,a]=vi(t,e);return Si(n,r,a,c1(s),n.RGBA,n.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function W3(n,t,e){de(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?2===z().getNumber("WEBGL_VERSION")?de(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):de(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):2===z().getNumber("WEBGL_VERSION")?de(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):de(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),de(n,()=>n.bindTexture(n.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),function B3(n,t,e,s,r,a){let o,i,l;de(n,()=>n.bindTexture(n.TEXTURE_2D,t)),r instanceof Uint8Array?(o=new Uint8Array(e*s*4),i=n.UNSIGNED_BYTE,l=n.RGBA):(o=new Float32Array(e*s*4),i=n.FLOAT,l=a.internalFormatPackedFloat),o.set(r),2===z().getNumber("WEBGL_VERSION")?de(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,i,o)):de(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,e,s,0,n.RGBA,i,o)),de(n,()=>n.bindTexture(n.TEXTURE_2D,null))}(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function M3(n,t,e,s){const[r,a]=Na(t,e);return Si(n,r,a,d1(s),n.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function V3(n,t,e,s){const[r,a]=Na(t,e);return Si(n,r,a,h1(s),n.RGBA,n.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Qw(this.gl,this.framebuffer),this.outputTexture=null),de(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>function H3(n,t,e,s){const[r,a]=vi(t,e),i=new Uint8Array(function uz(n,t){return n*t}(t*e,4));return de(n,()=>n.readPixels(0,0,r,a,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,a,o){return function j3(n,t,e,s,r,a,o,i){const l=n,u=new Float32Array(function cz(n,t){const[e,s]=Na(n,t);return e*s*4}(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,a,o)}downloadFloat32MatrixFromBuffer(t,e){return function G3(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=function U3(n,t,e,s){const r=n.createBuffer();de(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=16*t*e;return de(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),de(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),de(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}(this.gl,e,s);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(z().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const o=r.clientWaitSync(a,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},e=a}else z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>function q3(n,t,e){const s=new Float32Array(t*e*4);return de(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function A3(n){const t=xn();return function gz(n,t){const e=Bs(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(de(n,()=>n.shaderSource(e,t)),de(n,()=>n.compileShader(e)),!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}(n,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const s=function bz(n){return Bs(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}(e);de(e,()=>e.attachShader(s,this.vertexShader)),de(e,()=>e.attachShader(s,t)),function wz(n,t){if(de(n,()=>n.linkProgram(t)),!z().get("ENGINE_COMPILE_ONLY")&&!1===n.getProgramParameter(t,n.LINK_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(e,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Cf(e,r),r}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;de(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function z3(n,t,e){de(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Yw(n,t,"clipSpacePos",e,3,20,0)&&Yw(n,t,"uv",e,2,20,12)}(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(de(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Cf(this.gl,this.program),de(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?function Tz(n,t,e){return Bs(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}(this.gl,t,e):function _z(n,t,e){return n.getUniformLocation(t,e)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),de(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),$z(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,a]=Na(e,s);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Cf(this.gl,this.program),ic(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}de(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),de(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=oc(this.gl,2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,a),a}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();return void e.endQuery(s.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){var e=this;return(0,T.Z)(function*(){return yield Ct(()=>e.disposed||e.isQueryAvailable(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),e.getQueryTime(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(t,e){if(0===e)return null;if(2===e){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function K3(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in z().platform&&(s=z().platform.setTimeoutCustom.bind(z().platform)),Ct(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Nf(this.gl,t,this.framebuffer),this.debug&&ic(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Nf(this.gl,this.outputTexture,this.framebuffer),this.debug&&ic(this.gl)):Qw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;Nf(r,t,this.framebuffer),this.debug&&ic(r),this.outputTexture=t,de(r,()=>r.viewport(0,0,e,s)),de(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),de(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:X3,bincountImpl:p1,bincountReduceImpl:Z3,castImpl:Y3,ceilImpl:Q3,concatImpl:J3,equalImpl:eB,expImpl:tB,expm1Impl:nB,floorImpl:sB,gatherNdImpl:rB,gatherV2Impl:aB,greaterImpl:oB,greaterEqualImpl:iB,lessImpl:lB,lessEqualImpl:uB,linSpaceImpl:cB,logImpl:hB,maxImpl:dB,maximumImpl:pB,minimumImpl:fB,multiplyImpl:mB,negImpl:gB,notEqualImpl:yB,prodImpl:xB,raggedGatherImpl:bB,raggedRangeImpl:wB,raggedTensorToTensorImpl:vB,rangeImpl:IB,rsqrtImpl:SB,scatterImpl:CB,sigmoidImpl:NB,simpleAbsImpl:f1,sliceImpl:kB,sparseFillEmptyRowsImpl:TB,sparseReshapeImpl:_B,sparseSegmentReductionImpl:m1,sqrtImpl:$B,staticRegexReplaceImpl:EB,stridedSliceImpl:DB,stringNGramsImpl:AB,stringSplitImpl:RB,stringToHashBucketFastImpl:OB,subImpl:FB,tileImpl:PB,topKImpl:LB,transposeImpl:Df,uniqueImpl:VB}=pe;function g1(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function bn(n,t){return 1===t?[n]:g1(n,t)}class zB{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=un(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=bn("rc",this.rank),s=ut(this.rank),r=this.getOutOfBoundsCondition(e),a=this.getSetup(e),o=this.getOutput(e);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let o=2;o<this.rank;o++)a=`${t[t.length-1-o]},`+a;e.push(a)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2);return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class y1{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);let s="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2==1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),s+=`\n        ${a}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function BB(n,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function zz(n,t,e="index"){const r=function Mz(n,t){const e=n.length,s=n.map(a=>`${t}[${a}]`),r=new Array(e-1);r[e-2]=s[e-1];for(let a=e-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}(n.map((a,o)=>o),t);return r.map((a,o)=>`int ${n[o]} = ${e} / ${r[o]}; ${o===r.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r[o]}`:`index -= ${n[o]} * ${r[o]}`};`).join("")}(["r","c","d"],"inputShape"):qr(["r","c","d"],n)}\n      return ivec3(r, c, d);\n    }\n  `}(e,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Tf(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class WB{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const r=b1(e,s),a=w1(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=x1(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[a].pop();return this.usedTextures[a].push(l),l}let i;return r===Jt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Jt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Jt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Jt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Jt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),i}releaseTexture(t,e,s,r){if(null==this.freeTextures)return;const a=b1(s,r),o=w1(e,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=x1(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=z().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[o],c=u&&u.indexOf(t);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function x1(n,t,e,s,r){const a=function GB(n,t){switch(n){case Jt.PACKED_2X2_FLOAT32:return h1(t);case Jt.PACKED_2X2_FLOAT16:return d1(t);case Jt.UNPACKED_FLOAT32:return l1(t);case Jt.UNPACKED_FLOAT16:return u1(t);case Jt.PACKED_4X1_UNSIGNED_BYTE:return c1(t);default:throw new Error(`Unknown physical texture type ${n}`)}}(t,s);let o;if(r){const[l,u]=Na(n[0],n[1]);o=l*u}else{const[l,u]=vi(n[0],n[1]);o=l*u}const i=function UB(n,t){if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(e,a);return o*i}function b1(n,t){if(n===$n.UPLOAD)return Jt.PACKED_2X2_FLOAT32;if(n===$n.RENDER||null==n)return function HB(n){return z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Jt.PACKED_2X2_FLOAT32:Jt.UNPACKED_FLOAT32:n?Jt.PACKED_2X2_FLOAT16:Jt.UNPACKED_FLOAT16}(t);if(n===$n.DOWNLOAD||n===$n.PIXELS)return Jt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function w1(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}class Ts{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const v1="return abs(x);",hr="return x;";class dr{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class nW{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);const e=t.length,s=bn("rc",e),r=ut(e),a=function MB(n,t){if(1===n)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}(e,s),o=s.slice(-2),i=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const sW=Iy,mc={},iW=z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");let cW=(()=>{class n extends L{nextDataId(){return n.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let s;if(null!=e){if(e instanceof Ef)s=e;else{const r=us(z().getNumber("WEBGL_VERSION"),e);s=new Ef(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=us(z().getNumber("WEBGL_VERSION"));s=new Ef(r),this.binaryCache=function oW(n){return n in mc||(mc[n]={}),mc[n]}(z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=s,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new WB(this.gpgpu),this.numMBBeforeWarning=function uW(){return null==z().global.screen?1024:z().global.screen.height*z().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new M(this,ps())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,s,r,a,o,i){const l=this.makeTensorInfo(s,r),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[a,o]},u.texShape=[a,o];const c=lc(s),h=new i1(c,!1,i),d=this.runWebGLProgram(h,[l],r,[[a,o]]);return d.shape=s,u.texture=null,this.disposeIntermediateTensorInfo(l),d.dataId}write(e,s,r){if((z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||z().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===r&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:s,dtype:r,values:e,usage:$n.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,s,r,a,o){if(z().getBool("DEBUG")&&this.checkNumericalProblems(s),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:a,values:s,usage:$n.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const s=this.texData.get(e),{values:r,dtype:a,complexTensorInfos:o,slice:i,shape:l,isPacked:u}=s;if(null!=i){let p;p=u?new dr(l,hr):new Ts(l,hr);const f=this.runWebGLProgram(p,[{dataId:e,shape:l,dtype:a}],a),g=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),g}if(null!=r)return this.convertAndCacheOnCPU(e);if("string"===a)return r;const c=null!=this.activeTimers;let h,d;return c&&(h=dn()),d="complex64"===a?Vs(this.readSync(o.real.dataId),this.readSync(o.imag.dataId)):this.getValuesFromTexture(e),c&&(this.downloadWaitMs+=dn()-h),this.convertAndCacheOnCPU(e,d)}read(e){var s=this;return(0,T.Z)(function*(){if(s.pendingRead.has(e)){const m=s.pendingRead.get(e);return new Promise(y=>m.push(y))}const r=s.texData.get(e),{values:a,shape:o,slice:i,dtype:l,complexTensorInfos:u,isPacked:c}=r;if(null!=i){let m;m=c?new dr(o,hr):new Ts(o,hr);const y=s.runWebGLProgram(m,[{dataId:e,shape:o,dtype:l}],l),x=s.read(y.dataId);return s.disposeIntermediateTensorInfo(y),x}if(null!=a)return s.convertAndCacheOnCPU(e);if(z().getBool("DEBUG")&&!z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===z().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d,p,h=null;if("complex64"!==l&&z().get("WEBGL_BUFFER_SUPPORTED")){d=s.decode(e);const m=s.texData.get(d.dataId);h=s.gpgpu.createBufferFromTexture(m.texture.texture,...ac(o))}if(s.pendingRead.set(e,[]),"complex64"!==l&&(yield s.gpgpu.createAndWaitForFence()),"complex64"===l){const m=yield Promise.all([s.read(u.real.dataId),s.read(u.imag.dataId)]);p=Vs(m[0],m[1])}else if(null==h)p=s.getValuesFromTexture(e);else{const m=I(o);p=s.gpgpu.downloadFloat32MatrixFromBuffer(h,m)}if(null!=d&&s.disposeIntermediateTensorInfo(d),null!=h){const m=s.gpgpu.gl;de(m,()=>m.deleteBuffer(h))}const f=s.convertAndCacheOnCPU(e,p),g=s.pendingRead.get(e);return s.pendingRead.delete(e),g.forEach(m=>m(f)),s.pendingDisposal.has(e)&&(s.pendingDisposal.delete(e),s.disposeData(e)&&ps().removeDataId(e,s),s.pendingDeletes--),f})()}readToGPU(e,s={}){const r=this.texData.get(e),{values:a,shape:o,slice:i,dtype:l,isPacked:u,texture:c}=r;if("complex64"===l)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let f;f=u?new dr(o,hr):new Ts(o,hr);const g=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:l}],l),m=this.readToGPU(g,s);return this.disposeIntermediateTensorInfo(g),m}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const h=this.decode(e,s.customTexShape),d=ps().makeTensorFromTensorInfo(h),p=this.texData.get(h.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const s=this.readSync(e.dataId);if("string"===e.dtype)try{const r=s.map(a=>Es(a));return je(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return je(e.shape,e.dtype,s)}checkNumericalProblems(e){if(null!=e)for(let s=0;s<e.length;s++){const r=e[s];if(!fz(r))throw z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:s,dtype:r,isPacked:a}=this.texData.get(e),o=I(s);if(z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(e),f=this.texData.get(p.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...ac(s)).subarray(0,o);return this.disposeIntermediateTensorInfo(p),g}const i=z().getBool("WEBGL_PACK")&&!0===a,l=i?lc(s):s,u=i?new $3(l):new _3(l),c=this.runWebGLProgram(u,[{shape:l,dtype:r,dataId:e}],"float32"),h=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture.texture,h.texShape[0],h.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){var s=this;const r=this.activeTimers,a=[];let o=!1;null==this.programTimersStack?(this.programTimersStack=a,o=!0):this.activeTimers.push(a),this.activeTimers=a,e();const i=js(this.activeTimers.map(c=>c.query)).filter(c=>null!=c),l=js(this.activeTimers.map(c=>c.name)).filter(c=>null!=c);this.activeTimers=r,o&&(this.programTimersStack=null);const u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(0,T.Z)(function*(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=yield Promise.all(i);u.kernelMs=en(c),u.getExtraProfileInfo=()=>c.map((h,d)=>({name:l[d],ms:h})).map(h=>`${h.name}: ${h.ms}`).join(", ")}else u.kernelMs={error:"WebGL query timers are not supported in this environment."};return s.uploadWaitMs=0,s.downloadWaitMs=0,u})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:dn(),endMs:null}}endTimer(e){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=dn(),e)}getQueryTime(e){var s=this;return(0,T.Z)(function*(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?s.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs})()}disposeData(e,s=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(s?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!s&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return null!=r&&(this.disposeData(r.real.dataId,s),this.disposeData(r.imag.dataId,s)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:s,dtype:r,texShape:a,usage:o,isPacked:i,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),null!=s&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(s,a,o,i)));const h=this.texData.get(e);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,s=iW){return z().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>null==this.texData.get(r.dataId).texture&&I(r.shape)<s)}getGPGPUContext(){return this.gpgpu}where(e){Dn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const s=e.dataSync();return sW(e.shape,s)}packedUnaryOp(e,s,r){const a=new dr(e.shape,s),o=this.compileAndRun(a,[e],r);return ps().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const a=f1(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,v1,e.dtype);const s=new Ts(e.shape,v1),r=this.compileAndRun(s,[e]);return ps().makeTensorFromTensorInfo(r)}makeTensorInfo(e,s,r){let a;if("string"===s&&null!=r&&r.length>0&&Jr(r[0])){const o=r.map(i=>$s(i));a=this.write(o,e,s)}else a=this.write(r,e,s);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:s}}makeOutput(e,s,r){return ps().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,r),this)}unpackTensor(e){const s=new nW(e.shape);return this.runWebGLProgram(s,[e],e.dtype)}packTensor(e){const s=new zB(e.shape);return this.runWebGLProgram(s,[e],e.dtype,null,!0)}packedReshape(e,s){const r=[ka(e.shape),...Ta(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},o=[ka(s),...Ta(s)],i=new y1(o,r),c=this.runWebGLProgram(i,[a],e.dtype,[r],!0);return{dataId:c.dataId,shape:s,dtype:c.dtype}}decode(e,s){const r=this.texData.get(e),{isPacked:a,shape:o,dtype:i}=r;null!=s&&S(I(o)<=s[0]*s[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const l=lc(o);let u;u=a?new T3(l):new k3(l);const h=[null!=s?s:ac(l)];return{dtype:i,shape:o,dataId:this.runWebGLProgram(u,[{shape:l,dtype:i,dataId:e}],i,h,!0,s).dataId}}runWebGLProgram(e,s,r,a,o=!1,i){const l=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Ca.DENSE){const x=null!=i?i:ac(e.outputShape);u.texShape=x.map(b=>2*b)}if(null!=e.outTexUsage&&(u.usage=e.outTexUsage),0===I(l.shape))return u.values=Et(l.dtype,0),l;const c=[],h=s.map(x=>{if("complex64"===x.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(null==b.texture){if(!e.packedInputs&&I(x.shape)<=z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!e.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!cc(b.shape,x.shape)){const w=x,v=x.shape;x.shape=b.shape,x=this.packedReshape(x,v),c.push(x),b=this.texData.get(x.dataId),w.shape=v}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(l.dataId);const d={shape:l.shape,texData:u,isUniform:!1},p=function N3(n,t,e){let s="";t.concat(e).forEach(o=>{const i=null!=o.texData&&null!=o.texData.slice&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=$f(n.packedInputs,o.shape,l);let d="",p="",f="";if(1===c.length&&n.packedInputs){const v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(2!==c.length||n.packedInputs){if(c.length>2&&!n.packedInputs){const v=Te(c);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}}else p=`${c[0]>1}_${c[1]>1}`;const g=o.shape.length,m=2===c.length&&we(o.shape,l),y=1===I(o.shape),x=ua(o.shape,e.shape),b=!n.packedInputs&&g===e.shape.length&&we(l,e.texData.texShape);s+=`${g}_${b}_${u?h:""}_${c.length}_${y}_${x}_${m}_${d}_${p}_${f}_${n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`}_${i}`}else s+=`${o.shape}_${o.isUniform?"uniform":o.texData.texShape}_${i}`});let a=n.constructor.name;return a+="_"+s+"_"+n.userCode+`${z().getNumber("WEBGL_VERSION")}`,a}(e,h,d),f=this.getAndSaveBinary(p,()=>function S3(n,t,e,s){const r=e.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:!c.isUniform&&c.texData.isPacked,flatOffset:null};return null!=c.texData&&null!=c.texData.slice&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=Bz(r,o,t),l=function yz(n,t){const e=Bs(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(de(n,()=>n.shaderSource(e,t)),de(n,()=>n.compileShader(e)),z().get("ENGINE_COMPILE_ONLY"))return e;if(!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw Zw(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}(n.gl,i),u=n.createProgram(l);return z().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o},a1(n,t,u)))}(this.gpgpu,e,h,d)),g=null!=this.activeTimers;let m;g&&(m=this.startTimer()),z().get("ENGINE_COMPILE_ONLY")||function C3(n,t,e,s,r){t.program.enableShapeUniforms||(o1(t.inShapeInfos,e),o1([t.outShapeInfo],[s]));const a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):n.setOutputMatrixTexture(a.texture,o[0],o[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),1===z().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&n.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&n.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){const u=e[l],{uniform:c,offset:h,shape:d,texShape:p}=t.variablesLocations[l];if(d){const{uniformShape:f}=$f(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f))}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),null!=c){if(u.isUniform){if(I(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}null!=u.texData.slice&&null!=h&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const l=Te(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l))}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){const u=t.program.customUniforms[l],c=t.customUniformLocations[l],h=r[l];if("float"===u.type)n.gl.uniform1fv(c,h);else if("vec2"===u.type)n.gl.uniform2fv(c,h);else if("vec3"===u.type)n.gl.uniform3fv(c,h);else if("vec4"===u.type)n.gl.uniform4fv(c,h);else if("int"===u.type)n.gl.uniform1iv(c,h);else if("ivec2"===u.type)n.gl.uniform2iv(c,h);else if("ivec3"===u.type)n.gl.uniform3iv(c,h);else{if("ivec4"!==u.type)throw Error(`uniform type ${u.type} is not supported yet.`);n.gl.uniform4iv(c,h)}}n.executeProgram()}(this.gpgpu,f,h,d,a),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),g&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const y=z().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const x=dn();x-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!z().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===o){const x=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),x}return l}compileAndRun(e,s,r,a,o=!1){return this.runWebGLProgram(e,s,r=r||s[0].dtype,a,o)}getAndSaveBinary(e,s){return e in this.binaryCache||(this.binaryCache[e]=s()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(s=>{this.gpgpu.deleteProgram(this.binaryCache[s].webGLProgram),delete this.binaryCache[s]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=V(()=>{if(!z().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=z().getBool("DEBUG");z().set("DEBUG",!1);const s=this.abs(Me(1e-8)).dataSync()[0];if(z().set("DEBUG",e),s>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const s=this.texData.get(e),{shape:r,dtype:a,values:o,texture:i,usage:l,isPacked:u}=s;if(null!=i)return;const c=null!=this.activeTimers;let h;c&&(h=dn());let d=s.texShape;if(null==d&&(d=function Dz(n,t=!1){let e=z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e*=2,s*=2,1===(n=n.map((i,l)=>l>=n.length-2?Le(n[l]):n[l])).length&&(n=[2,n[0]])),2!==n.length&&(n=$t(n).newShape);let r=I(n),a=null;n.length<=1&&r<=e?a=[1,r]:2===n.length&&n[0]<=e&&n[1]<=e?a=n:3===n.length&&n[0]*n[1]<=e&&n[2]<=e?a=[n[0]*n[1],n[2]]:3===n.length&&n[0]<=e&&n[1]*n[2]<=e?a=[n[0],n[1]*n[2]]:4===n.length&&n[0]*n[1]*n[2]<=e&&n[3]<=e?a=[n[0]*n[1]*n[2],n[3]]:4===n.length&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(a=[n[0],n[1]*n[2]*n[3]]);const o=null!=a&&Math.max(...a)>s&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||o)if(t){const i=ka(n);let l=2,u=2;n.length&&([l,u]=Ta(n)),r=i*(l/2)*(u/2),a=It(r).map(c=>2*c)}else a=It(r);return a}(r,u),s.texShape=d),null!=o){const p=lc(r);let f,g=d[1],m=d[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!y)&&([g,m]=Na(d[0],d[1])),f=u?new D3(p,y):new i1(p,y);const x=y?[m,g]:d,b=this.makeTensorInfo(x,a),w=this.texData.get(b.dataId);w.usage=y?$n.PIXELS:$n.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),g,m,o);const k=this.runWebGLProgram(f,[b],a,[[m,g]],!0),_=this.texData.get(k.dataId);s.texShape=_.texShape,s.isPacked=_.isPacked,s.usage=_.usage,z().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(s.texture=_.texture,s.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=dn()-h)}else{const p=this.acquireTexture(d,l,a,u);s.texture=p}}convertAndCacheOnCPU(e,s){const r=this.texData.get(e),{dtype:a}=r;return null!=s&&(r.values=function hW(n,t){if("float32"===t||"complex64"===t)return n;if("int32"===t||"bool"===t){const e="int32"===t?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}throw new Error(`Unknown dtype ${t}`)}(s,a)),r.values}acquireTexture(e,s,r,a){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,s,a)}computeBytes(e,s){return e[0]*e[1]*La(s)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){var e=this;return(0,T.Z)(function*(){const s=[];if(e.gpgpu.parallelCompilationExtension){for(const[,r]of Object.entries(e.binaryCache))s.push(e.checkCompletionAsync_(r));return Promise.all(s)}for(const[,r]of Object.entries(e.binaryCache)){const a=new Promise(o=>{try{e.checkCompletion_(r),o(!0)}catch(i){throw i}});s.push(a)}return Promise.all(s)})()}checkCompletionAsync_(e){var s=this;return(0,T.Z)(function*(){return s.gpgpu.gl.getProgramParameter(e.webGLProgram,s.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?s.checkCompletion_(e):(yield Kg(),s.checkCompletionAsync_(e))})()}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(Zw(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:s,customUniformLocations:r,infLoc:a,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=a1(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=s,e.customUniformLocations=r,e.infLoc=a,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,s,r){e.channels=e.channels||"RGBA";const{texture:a,height:o,width:i,channels:l}=e,u=ps().backend;if(!u.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(a,s,r,o,i,l);return ps().makeTensorFromDataId(c,s,r,u)}}return n.nextDataId=0,n})();$m()&&jm("webgl",()=>new cW,2);class Aa{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=ze(e,s),this.enableShapeUniforms=un(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Xr="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Ci{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ze(e,s);const a=this.outputShape.length;this.enableShapeUniforms=un(a);let o="";if(r)if(0===a||1===I(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(o=`\n          ${ut(a)} coords = getOutputCoords();\n        `,1===a)o+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const l=bn("coords",a);o+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${l[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${l[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${l[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${l[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function En(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const fW={kernelName:ro,backendName:"webgl",kernelFunc:En};function pr(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,a=e.makeTensorInfo(s.shape,"complex64"),o=e.texData.get(a.dataId),i=En({inputs:{x:s},backend:e}),l=En({inputs:{x:r},backend:e});return o.complexTensorInfos={real:i,imag:l},a}const mW={kernelName:Fc,backendName:"webgl",kernelFunc:pr},I1="return (a < 0.) ? b * a : a;",S1="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",yW={kernelName:nl,backendName:"webgl",kernelFunc:function gW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:a}=s,o=e.makeTensorInfo([],"float32",_s(a,"float32")),i=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ci(S1,r.shape,o.shape):new Aa(I1,r.shape,o.shape),l=e.runWebGLProgram(i,[r,o],"float32");return e.disposeIntermediateTensorInfo(o),l}},C1="return (a < 0.) ? b * a : a;",N1="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",bW={kernelName:vl,backendName:"webgl",kernelFunc:function xW(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,a=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ci(N1,s.shape,r.shape):new Aa(C1,s.shape,r.shape);return e.runWebGLProgram(a,[s,r],"float32")}};function et({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:a})=>{const{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=e){const h=i.texData.get(o.dataId),d=e(h.values,l);return i.makeTensorInfo(o.shape,l,d)}let c;return c=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new dr(o.shape,t):new Ts(o.shape,n),i.runWebGLProgram(c,[o],l)}}function an({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{const{a:l,b:u}=o,c=i;if(s&&"complex64"===l.dtype){const f=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[m,y]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(b=>{const[w,v]=b,C={dataId:w.dataId,dtype:w.dtype,shape:l.shape},k={dataId:v.dataId,dtype:v.dtype,shape:u.shape},_=new Aa(n,l.shape,u.shape);return c.runWebGLProgram(_,[C,k],Nn(w.dtype,v.dtype))}),x=pr({inputs:{real:m,imag:y},backend:c});return c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(y),x}const h=a||Nn(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const f=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,m="string"===l.dtype?Ms(f):f,y="string"===l.dtype?Ms(g):g,[x,b]=r(l.shape,u.shape,m,y,h),w=c.makeTensorInfo(b,h);return c.texData.get(w.dataId).values=x,w}let p;return p=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Ci(t,l.shape,u.shape,e):new Aa(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function Ni(n,t=!1){if("linear"===n)return"return x;";if("relu"===n)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===n)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===n)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===n)return t?N1:C1;if("leakyrelu"===n)return t?S1:I1;if("sigmoid"===n)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}class k1{constructor(t,e,s,r=!1,a=!1,o=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=un(this.outputShape.length);const h=Math.ceil((r?t[1]:t[2])/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",y="";i&&(m=l?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,y="result = activation(result);");const x=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",w="rc.x";t[0]<e[0]?b=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(w=`imod(rc.x, ${e[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${w};\n        for (int i = 0; i < ${h}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${g[0]});\n          result += (${f[1]} * ${g[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${x}\n\n        ${y}\n\n        setOutput(result);\n      }\n    `}}class _1{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ze(e,s),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const $1="return a * b;";function Rf(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,a=Nn(s.dtype,r.dtype);if("complex64"===s.dtype){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),u=new _1("return areal * breal - aimag * bimag;",s.shape,r.shape),c=new _1("return areal * bimag + aimag * breal;",s.shape,r.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=e.runWebGLProgram(u,h,"float32"),p=e.runWebGLProgram(c,h,"float32"),f=pr({inputs:{real:d,imag:p},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,r])){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),[u,c]=mB(s.shape,r.shape,i.values,l.values,a),h=e.makeTensorInfo(c,a);return e.texData.get(h.dataId).values=u,h}let o;return o=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ci($1,s.shape,r.shape):new Aa($1,s.shape,r.shape),e.runWebGLProgram(o,[s,r],a)}const wW={kernelName:mo,backendName:"webgl",kernelFunc:Rf};function he(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:a}=s,o=e,i=I(r.shape),l=cn(a,i),u=I(l);S(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(r.dataId);return!c.isPacked||cc(r.shape,l)||null!==c.texture&&cc(c.shape,l)?(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function vW(n,t,e){const s=[ka(n.shape),...Ta(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},a=[ka(t),...Ta(t)],o=new y1(a,s),u=e.runWebGLProgram(o,[r],n.dtype,[s],!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,l,o)}const IW={kernelName:Sl,backendName:"webgl",kernelFunc:he};class E1{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:a,outSize:o}=t;this.outputShape=[r,o];const i=4*Math.floor(s/4),l=s%4;let u="sumValue += dot(values, ones);";if(null!=e){const h=1/e;u=`sumValue += dot(values * ${We(h)?h.toPrecision(2):h}, ones);`}let c="";a%s>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class SW{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:a,outSize:o}=t;this.outputShape=[r,o];let i="0.0",l="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",l="min"):"max"===e&&(i="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(s/4),h=s%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${l}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${l}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===e?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let f="";a%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Zr(n,t,e,s){const r=function CW(n){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const e=t.length?t[t.length-1].outSize:n[1],s=fu(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}(n.shape);let a=n;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:l,outSize:u}=r[o];let c,h;c="mean"===e?0===o?new E1({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u},i):new E1({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u}):new SW({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u},e),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class NW{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[e[o]];this.outputShape=s,this.rank=s.length;const r=ut(this.rank),a=function kW(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class TW{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let c=0;c<s.length;c++)s[c]=t[e[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ut(this.rank),a=g1("rc",this.rank),o=new Array(this.rank);for(let c=0;c<e.length;c++)o[e[c]]=a[c];const i=`vec2(${o.slice(-2).join()})`,l=`++${a[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${l}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${s[this.rank-2]}) {\n        result[2] = ${u};\n        if(${l}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function gc(n,t,e){const s=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TW(n.shape,t):new NW(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}function yc(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s;return function _W(n,t,e,s){const a=n.shape.length,o=ke(t,n.shape);let i=o;const l=kt(i,a),u=null!=l;let c=n;u&&(c=gc(n,l,s),i=Lt(i.length,a)),rn("sum",i,a);const[h,d]=Yt(c.shape,i);let p=h;e&&(p=Pt(h,o));const f=I(d),y=he({inputs:{x:c},attrs:{shape:[I(n.shape)/f,f]},backend:s}),b=Zr(y,$h(n.dtype),"sum",s),w=he({inputs:{x:b},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(b),u&&s.disposeIntermediateTensorInfo(c),w}(r,a,o,e)}const $W={kernelName:$l,backendName:"webgl",kernelFunc:yc};function wn(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:a}=s,o=e,l=new Array(r.shape.length);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];let u;if(o.shouldExecuteOnCPU([r])){const h=o.texData.get(r.dataId).values,d=Df(h,r.shape,r.dtype,a,l);u=o.makeTensorInfo(l,r.dtype),o.texData.get(u.dataId).values=d}else u=gc(r,a,o);return u}const EW={kernelName:ta,backendName:"webgl",kernelFunc:wn};function xc({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){const u=n.shape.length,c=t.shape.length,h=e?n.shape[u-2]:n.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=e?n.shape[u-1]:n.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],g=n.shape.slice(0,-2),m=t.shape.slice(0,-2),y=I(g),x=I(m),w=ze(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);S(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const v=e?[y,h,p]:[y,p,h],C=s?[x,f,d]:[x,d,f],k=he({inputs:{x:n},backend:r,attrs:{shape:v}}),_=he({inputs:{x:t},backend:r,attrs:{shape:C}}),$=[k,_],E=Math.max(y,x),P=e?k.shape[1]:k.shape[2],B=null!=a,U=null!=o,G="leakyrelu"===l,H=null!=l?Ni(l,!0):null;let X;if((1===p||1===f)&&P>1e3&&!1===(B||U||G||null!=H)){let Z=k,ae=_;e&&(Z=wn({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),$.push(Z)),s&&(ae=wn({inputs:{x:_},backend:r,attrs:{perm:[0,2,1]}}),$.push(ae));const ue=1===f;let le=Z;1!==f&&(le=he({inputs:{x:Z},backend:r,attrs:{shape:[E,P,1]}}),$.push(le));const ge=1===f?2:1;let ce=ae;ue&&(ce=he({inputs:{x:ae},backend:r,attrs:{shape:[E,1,P]}}),$.push(ce));const ye=Rf({inputs:{a:le,b:ce},backend:r});X=yc({inputs:{x:ye},backend:r,attrs:{axis:ge,keepDims:!0}}),$.push(ye)}else{const Z=Nn(n.dtype,t.dtype),ae=new k1(v,C,[E,p,f],e,s,B,H,U,G),ie=[k,_];if(null!=a&&ie.push(a),U&&ie.push(o),G){const ue=r.makeTensorInfo([],"float32",_s(i,"float32"));ie.push(ue),$.push(ue)}X=r.runWebGLProgram(ae,ie,Z)}const j=he({inputs:{x:X},backend:r,attrs:{shape:w}});$.push(X);for(const Z of $)r.disposeIntermediateTensorInfo(Z);return j}const AW={kernelName:Ll,backendName:"webgl",kernelFunc:function DW(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return xc({a:r,b:a,transposeA:l,transposeB:u,backend:e,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}},A1="return abs(x);",OW={kernelName:Pi,backendName:"webgl",kernelFunc:function RW(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const a=e.texData.get(s.dataId),o=f1(a.values);return e.makeTensorInfo(s.shape,s.dtype,o)}let r;return r=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new dr(s.shape,A1):new Ts(s.shape,A1),e.runWebGLProgram(r,[s],s.dtype)}},PW=et({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),LW={kernelName:Va,backendName:"webgl",kernelFunc:PW},MW=et({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),zW={kernelName:Ma,backendName:"webgl",kernelFunc:MW},R1="return a + b;",BW=an({opSnippet:R1,packedOpSnippet:R1,supportsComplex:!0,cpuKernelImpl:X3}),WW={kernelName:ea,backendName:"webgl",kernelFunc:BW};class UW{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((a,o)=>`T${o}`);const s=[];this.variableNames.forEach(a=>{s.push(`float v${a} = get${a}AtOutCoords();`)});const r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class GW{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((a,o)=>`T${o}`);const s=[];this.variableNames.forEach(a=>{s.push(`vec4 v${a} = get${a}AtOutCoords();`)});const r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const HW={kernelName:$c,backendName:"webgl",kernelFunc:function bc(n){const{inputs:t,backend:e}=n,s=t;if(1===s.length)return En({inputs:{x:s[0]},backend:e});if(s.length>z().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=bc({inputs:s.slice(0,l),backend:e}),c=bc({inputs:s.slice(l),backend:e});return bc({inputs:[u,c],backend:e})}const r=s.map(l=>l.dtype).reduce((l,u)=>Nn(l,u)),a=s.map(l=>l.shape),i=z().getBool("WEBGL_PACK")?new GW(s[0].shape,a):new UW(s[0].shape,a);return e.runWebGLProgram(i,s,r)}},qW={kernelName:"All",backendName:"webgl",kernelFunc:function jW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=ke(a,r.shape);let u=l;const c=kt(u,i);let h=r;null!=c&&(h=wn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Lt(u.length,i)),rn("all",u,i);const[d,p]=Yt(h.shape,u),g=he({inputs:{x:h},backend:e,attrs:{shape:[-1,I(p)]}}),m=Zr(g,g.dtype,"all",e);let y;return y=he(o?{inputs:{x:m},backend:e,attrs:{shape:Pt(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}},XW={kernelName:"Any",backendName:"webgl",kernelFunc:function KW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=ke(a,r.shape);let u=l;const c=kt(u,i);let h=r;null!=c&&(h=wn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Lt(u.length,i)),rn("any",u,i);const[d,p]=Yt(h.shape,u),g=he({inputs:{x:h},backend:e,attrs:{shape:[-1,I(p)]}}),m=Zr(g,g.dtype,"any",e);let y;return y=he(o?{inputs:{x:m},backend:e,attrs:{shape:Pt(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}};class ZW{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class YW{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=Math.ceil(t[t.length-1]/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,u=ut(l),c=bn("coords",l);let h,d;if(1===o){d=l+1;const _=ut(d);h=`\n        ${_} sourceLocR = ${_}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${_} sourceLocG = ${_}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${_} sourceLocA = ${_}(${c.join()}, 0);\n        --${c[l-1]};\n        ${_} sourceLocB = ${_}(${c.join()}, 0);\n        --${c[l-2]};`}else d=l,h=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],g=p.map(_=>"int "+_),m=bn("sourceLocR",d-1).concat("inIdx.r"),y=bn("sourceLocG",d-1).concat("inIdx.g"),x=bn("sourceLocB",d-1).concat("inIdx.b"),b=bn("sourceLocA",d-1).concat("inIdx.a"),w="max"===s?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,C=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${C};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${C};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function O1(n,t,e,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const o=fu(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new ZW(i,e,null==s),u=[t];null!=s&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=O1(n,t,e,c);return n.disposeIntermediateTensorInfo(c),h}function F1(n,t,e,s=null){const r=null!=s?s.shape:t.shape,o=fu(r[r.length-1]),i=new YW(r,o,e,null==s),u=n.runWebGLProgram(i,null==s?[t]:[t,s],"int32");if(u.shape.length===t.shape.length){const c=F1(n,t,e,u);return n.disposeIntermediateTensorInfo(u),c}return u}function P1(n,t,e,s){const r=[e];if(rn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!z().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const a=[],o=n.texData.get(t.dataId);let l=t;null!==o&&o.isPacked&&(l=n.unpackTensor(t),a.push(l));const[u,c]=Yt(l.shape,r),h=I(c),d=he({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});a.push(d);const p=O1(n,d,s);a.push(p);const f=he({inputs:{x:p},backend:n,attrs:{shape:u}});return a.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}return F1(n,t,s)}const JW={kernelName:Li,backendName:"webgl",kernelFunc:function QW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a}=s;let o=ke(a,r.shape);const i=kt(o,r.shape.length);let l=r;const u=[];null!=i&&(l=wn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),o=Lt(o.length,l.shape.length)),rn("argMax",[o[0]],l.shape.length);const c=P1(e,l,o[0],"max");return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),c}},t4={kernelName:Vi,backendName:"webgl",kernelFunc:function e4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a}=s;let o=ke(a,r.shape);const i=kt(o,r.shape.length);let l=r;const u=[];null!=i&&(l=wn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),o=Lt(o.length,l.shape.length)),rn("argMin",[o[0]],l.shape.length);const c=P1(e,l,o[0],"min");return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),c}},s4=et({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),r4={kernelName:za,backendName:"webgl",kernelFunc:s4},o4=et({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),i4={kernelName:Ba,backendName:"webgl",kernelFunc:o4},u4=et({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),c4={kernelName:Wa,backendName:"webgl",kernelFunc:u4},p4=an({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),f4={kernelName:Ga,backendName:"webgl",kernelFunc:p4},g4=et({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),y4={kernelName:Ua,backendName:"webgl",kernelFunc:g4};class ki{constructor(t,e,s,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,i=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const g="avg"===e;let x="0.0";if(g||(x="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${l});\n        const ivec2 pads = ivec2(${p}, ${f});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`:`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(o/4),C=o%4,k=`\n      if (${g}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${l});\n      const ivec2 pads = ivec2(${p}, ${f});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===C}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===C}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===C}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${w});\n      }\n    `}}class Of{constructor(t,e,s,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,i=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,g=t.effectiveFilterWidth,m=t.padInfo.front,y=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let w="0.0";if(b||(w="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${l}, ${u});\n        const ivec3 pads = ivec3(${m}, ${y}, ${x});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${f};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${g};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${g} +\n                      wR * ${g} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(C="avgValue / max(count, 1.0)");const k=4*Math.floor(o/4),_=o%4,$=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${l}, ${u});\n      const ivec3 pads = ivec3(${m}, ${y}, ${x});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${f};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${$}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${$}\n            }\n          }\n        }\n        setOutput(${C});\n      }\n    `}}const b4={kernelName:Mi,backendName:"webgl",kernelFunc:function x4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Ii(r,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s;S(sn(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=Un(r.shape,a,o,1,i,l);if(1===c.filterWidth&&1===c.filterHeight&&we(c.inShape,c.outShape))return En({inputs:{x:r},backend:e});const h=new ki(c,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}},v4={kernelName:zi,backendName:"webgl",kernelFunc:function w4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s,h=As(r.shape,a,o,[1,1,1],i,l,u),d=new Of(h,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}};class I4{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const l=t.effectiveFilterHeight,u=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${l-1-t.padInfo.top}, ${u-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l};\n            wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${t.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class S4{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${h-1-t.padInfo.front}, ${d-1-t.padInfo.top}, ${p-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterDepth*t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const N4={kernelName:Rc,backendName:"webgl",kernelFunc:function C4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,d=As(o.shape,i,l,[1,1,1],u,c),p=new S4(d);return e.runWebGLProgram(p,[r],o.dtype)}},T4={kernelName:Ac,backendName:"webgl",kernelFunc:function k4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,o=a;Ii([r,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=s,c=Un(o.shape,i,l,1,u),h=new I4(c);return e.runWebGLProgram(h,[r],o.dtype)}},$4={kernelName:Bi,backendName:"webgl",kernelFunc:function _4(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return xc({a:r,b:a,transposeA:o,transposeB:i,backend:e})}};class E4{constructor(t,e,s,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],ze(t,e),ze(t,s);let i="0.0";null!=r&&(ze(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";null!=a&&(ze(t,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class D4{constructor(t,e,s,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ze(t,e),ze(t,s);let i="vec4(0.0)";null!=r&&(ze(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=a&&(ze(t,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const A4={kernelName:Ji,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:a,offset:o,scale:i}=n;S(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(null==o||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(null==i||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=o&&(c=o.shape,u.push(o));let h=null;null!=i&&(h=i.shape,u.push(i));const d=z().getBool("WEBGL_PACK_NORMALIZATION")?new D4(s.shape,r.shape,a.shape,c,h,l):new E4(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class R4{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ut(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=function O4(n){if(1===n)return"sourceLoc";if(n<=6)return Ff.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((o,i)=>`sourceLoc.${Ff[i]} = start[${i}] + coords.${Ff[i]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}}const Ff=["x","y","z","w","u","v"];class F4{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=ut(this.rank),s=bn("coords",this.rank),r=bn("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${o};\n      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${o};\n        --${r[this.rank-1]};\n      }\n    `,l=1===this.rank?"":`\n      --${s[this.rank-1]};\n      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${o};\n        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((c,h)=>`start[${h}]`).join()});`:t.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${l}\n        setOutput(result);\n      }\n    `}}function Oa(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ql(r,a,o);if(td(r,i,l),0===I(l))return e.makeTensorInfo(l,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||"string"===r.dtype){const h=e.texData.get(r.dataId),d=kB(h.values,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=e.texData.get(r.dataId),c=sd(r.shape,i,l);if(u||!c){const h=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new F4(l):new R4(l);return e.runWebGLProgram(h,[r],r.dtype,[i])}return e.uploadToGPU(r.dataId),function P4(n,t,e,s){const r=s.texData.get(n.dataId),a=s.makeTensorInfo(e,n.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=e,o.dtype=n.dtype;let i=rd(t,Te(n.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}(r,i,l,e)}const L4={kernelName:_l,backendName:"webgl",kernelFunc:Oa},V4={kernelName:Wi,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:a,crops:o}=s;S(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=a.reduce((x,b)=>x*b),l=ei(r.shape,a,i),u=ti(l.length,a.length),c=ni(r.shape,a,i),h=zd(o,a.length),d=Bd(c,o,a.length),p=[],f=he({inputs:{x:r},backend:e,attrs:{shape:l}}),g=wn({inputs:{x:f},backend:e,attrs:{perm:u}}),m=he({inputs:{x:g},backend:e,attrs:{shape:c}}),y=Oa({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach(x=>e.disposeIntermediateTensorInfo(x)),y}},z4={kernelName:Oc,backendName:"webgl",kernelFunc:function M4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:a}=t,{size:o}=s,i=e.readSync(r.dataId),l=e.readSync(a.dataId),u=p1(i,l,a.dtype,a.shape,o);return e.makeTensorInfo([o],a.dtype,u)}},W4={kernelName:Qf,backendName:"webgl",kernelFunc:function B4(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,a=e.readSync(s.dataId),o=e.readSync(r.dataId),i=ze(Array.from(a),Array.from(o));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},L1=an({opSnippet:"return float(a != b);",cpuKernelImpl:yB,dtype:"bool"}),U4={kernelName:gl,backendName:"webgl",kernelFunc:L1};function Ti(n){const{inputs:t,backend:e}=n,{input:s}=t;return En({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.real},backend:e})}const G4={kernelName:oh,backendName:"webgl",kernelFunc:Ti},q4={kernelName:Ha,backendName:"webgl",kernelFunc:function Pf(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return En({inputs:{x:r},backend:e});const o=Wt(r.shape),i=Pf({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=pr({inputs:{real:i,imag:o},backend:e});return o.dispose(),e.disposeIntermediateTensorInfo(i),l}if("complex64"===r.dtype){const o=Ti({inputs:{input:r},backend:e}),i=Pf({inputs:{x:o},backend:e,attrs:{dtype:a}});return e.disposeIntermediateTensorInfo(o),i}if(!Nc(r.dtype,a)){const o=En({inputs:{x:r},backend:e});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(e.shouldExecuteOnCPU([r])){const o=e.texData.get(r.dataId).values,[i,l,u]=Y3(o,r.shape,r.dtype,a);return e.makeTensorInfo(i,l,u)}if("int32"===a)return function j4(n,t){const e=new Ts(n.shape,"return float(int(x));"),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(r,e);if("bool"===a){const o=e.makeTensorInfo([],"bool",Et("bool",1)),l=L1({inputs:{a:r,b:o},backend:e});return e.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}},V1="return ceil(x);",K4=et({opSnippet:V1,packedOpSnippet:V1,cpuKernelImpl:Q3}),X4={kernelName:ja,backendName:"webgl",kernelFunc:K4};class Z4{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Y4{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const J4={kernelName:qa,backendName:"webgl",kernelFunc:function Q4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s;let i;return i=z().getBool("WEBGL_PACK_CLIP")?new Y4(r.shape):new Z4(r.shape),e.runWebGLProgram(i,[r],r.dtype,[[a],[o]])}};class eU{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function M1(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}const nU={kernelName:Ui,backendName:"webgl",kernelFunc:function tU(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),a=new eU(s.shape),o=[M1(s,r.complexTensorInfos.real),M1(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(a,o,o[0].dtype)}};class sU{constructor(t){this.outputShape=[],this.outputShape=ys(t,1),this.variableNames=t.map((o,i)=>`T${i}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++)s.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${e[o-1]}));`);s.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${s.join("\n        ")}\n      }\n    `}}class rU{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ys(t,e);const s=this.outputShape,r=s.length,a=ut(r),o=bn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((g,m)=>`T${m}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];const u=i[e],c=i.slice(-2),h=i.join();let d=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`\n        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {\n          return getChannel(\n            getT${g}(${wc(i,u,m)}),\n            vec2(${wc(c,u,m)}));\n        }`}const f=l[l.length-1];d+=`\n        return getChannel(\n          getT${l.length}(${wc(i,u,f)}),\n          vec2(${wc(c,u,f)}));`,this.userCode=`\n      float getValue(${i.map(g=>"int "+g)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${s[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${s[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${s[r-2]} &&\n            ${o[r-1]} < ${s[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function wc(n,t,e){const s=n.indexOf(t);return n.map((a,o)=>o===s?`${a} - ${e}`:a).join()}function vc(n){const{inputs:t,backend:e}=n,{input:s}=t;return En({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.imag},backend:e})}const aU={kernelName:Qc,backendName:"webgl",kernelFunc:vc};function _i(n,t,e){const s=n[0].dtype;if("complex64"===s){const p=n.map(x=>Ti({inputs:{input:x},backend:e})),f=n.map(x=>vc({inputs:{input:x},backend:e})),g=_i(p,t,e),m=_i(f,t,e),y=pr({inputs:{real:g,imag:m},backend:e});return p.forEach(x=>e.disposeIntermediateTensorInfo(x)),f.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),y}let r=e.shouldExecuteOnCPU(n);if("string"===s&&(r=!0),r){const p=n.map(w=>{const v=I(w.shape.slice(t));return he({inputs:{x:w},backend:e,attrs:{shape:[-1,v]}})}),f=p.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),g=ys(p.map(w=>w.shape),1),y=J3(f,g,s,1===p[0].shape[0]),x=ys(n.map(w=>w.shape),t),b=e.makeTensorInfo(x,s,y);return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),b}const a=n.filter(p=>I(p.shape)>0),o=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const p=o?new Ts(n[0].shape,hr):new dr(n[0].shape,hr);return e.runWebGLProgram(p,n,s)}const i=z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>i){const p=[];for(let g=0;g<a.length;g+=i){const m=a.slice(g,g+i);p.push(_i(m,t,e))}const f=_i(p,t,e);for(const g of p)e.disposeIntermediateTensorInfo(g);return f}if(o){const p=new rU(a.map(f=>f.shape),t);return e.runWebGLProgram(p,a,s)}const{tensors2D:l,outShape:u}=function oU(n,t,e){const s=ys(n.map(a=>a.shape),t);return{tensors2D:n.map(a=>he({inputs:{x:a},attrs:{shape:[-1,I(a.shape.slice(t))]},backend:e})),outShape:s}}(a,t,e),c=new sU(l.map(p=>p.shape)),h=e.runWebGLProgram(c,l,s);l.forEach(p=>e.disposeIntermediateTensorInfo(p));const d=he({inputs:{x:h},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(h),d}function z1(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,a=ke(r,t[0].shape)[0];Ld(t.map(u=>u.shape),a);const i=ys(t.map(u=>u.shape),a);if(0===I(i))return e.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(u=>I(u.shape)>0);return 1===l.length?En({inputs:{x:l[0]},backend:e}):_i(l,a,e)}const iU={kernelName:Gi,backendName:"webgl",kernelFunc:z1};class B1{constructor(t,e=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,i=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),g=t.inChannels%4,m="channelsLast"===t.dataFormat,y=m?1:2,x=m?2:3,b=m?3:1;let w="",v="";s&&(w=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,v="result = activation(result);");const C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${y}], coords[${x}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${f}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===g}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${f}) *\n                    getW(wR, wC, ${f}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${f}, xR, xC) *\n                    getW(wR, wC, ${f}, d2);\n              }\n\n            } else if (${2===g}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===g}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2),\n                getW(wR, wC, ${f} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1),\n                  getX(batch, xR, xC, ${f} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC),\n                  getX(batch, ${f} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${C}\n        ${v}\n        setOutput(result);\n      }\n    `}}class lU{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,o=t.strideHeight,i=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),g=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${o}, ${i});\n      const ivec3 pads = ivec3(${e}, ${s}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${l};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${f}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===g}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${f}) *\n                  getW(wF, wR, wC, ${f}, d2);\n              } else if (${2===g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1),\n                  getX(batch, xF, xR, xC, ${f} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2),\n                  getW(wF, wR, wC, ${f} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class W1{constructor(t,e=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=un(this.outputShape.length);const o=t.padInfo.left,i=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,h=c;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<c;m++)d+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;d+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let m=0;m<c;m++)d+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(h+1)/2;m++){const y=2*m;if(d+=`\n           xC = xCCorner + ${y*l};\n           `,1===i){if(y<c&&(o%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n               `,d+=1===l&&y>0?`\n                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);\n                   } else {\n                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 xC${y} = xTexelC${y};\n                 `,y+1<c)){const x=o%2==0?Le(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${x};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${y+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${y+1}Ready = 1;\n                   }\n                   `,d+=l>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);\n                     } else {\n                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);\n                     }\n                     `:`\n                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);\n                     `):d+=1===x?`\n                     xC${y+1} = xTexelC${y};\n                     `:`\n                     xCOffset = xC + ${x};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${y+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${y+1}Ready = 1;\n                     }\n\n                     xC${y+1} = xTexelC${y+1};\n                     `}}else y<c&&(o%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {\n                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${y+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${y+1}Ready = 1;\n                 }\n\n                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n               `,y+1<c&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y+1}.zw = vec2(0.);\n                   }\n                   xTexelC${y+1}Ready = 1;\n                 }\n\n                 xC${y} = vec4(\n                   xTexelC${y}.xy, xTexelC${y+1}.xy);\n               `,y+1<c&&(d+=`\n                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n                 `)));y<c&&(d+=`\n             wTexel = getW(r, ${y}, d1, d2);\n             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,y+1<c&&(d+=`\n               wTexel = getW(r, ${y+1}, d1, d2);\n               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";s&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${s}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${s}\n         }`:`vec4 activation(vec4 x) {\n           ${s}\n         }`,f="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${f}\n         setOutput(result);\n       }\n     `}}class uU{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=un(this.outputShape.length);const{dataFormat:s}=e,r=xn(),a="channelsLast"===s,o=a?1:2,i=a?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`\n          blockIndex = rc.z + ${h};\n          pos = rc.y + ${c};\n\n          ${l}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${o}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*c+h}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*c+h}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function Ic(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&1===e&&n[0]>1?[n[0],1]:null}function U1({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const l=n.shape,u=s.texData.get(n.dataId),c=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,p="channelsLast"===e.dataFormat;let m;const y=[];if(null!=a){const w=Ic(a.shape,p);null!=w&&(a=he({inputs:{x:a},backend:s,attrs:{shape:w}}),y.push(a))}if(null!=r){const w=Ic(r.shape,p);null!=w&&(r=he({inputs:{x:r},backend:s,attrs:{shape:w}}),y.push(r))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&we(u.shape.slice(-3),l.slice(-3))){const v={dataId:n.dataId,shape:[1,l[0]*l[1]*(l[2]+1),e.inChannels],dtype:n.dtype},C=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,S(cc(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);const k=he({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(k);const _=xc({a:v,b:k,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),$=s.texData.get(_.dataId);S($.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=C,$.shape=e.outShape,m=En({inputs:{x:_},backend:s}),m.shape=e.outShape,y.push(_)}else{const w=e.outHeight*e.outWidth,v=he({inputs:{x:n},backend:s,attrs:{shape:p?[e.batchSize,w,e.inChannels]:[e.batchSize,e.inChannels,w]}}),C=he({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),k=xc({a:p?v:C,b:p?C:v,transposeA:!p,transposeB:!1,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});m=he({inputs:{x:k},backend:s,attrs:{shape:e.outShape}}),y.push(v),y.push(C),y.push(k)}for(const w of y)s.disposeIntermediateTensorInfo(w);return m}function G1({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=e,f="channelsLast"===p,g=l*u*c,m=d*h,y=[e.batchSize,g,m],w=[];if(null!=a){const j=Ic(a.shape,f);null!=j&&(a=he({inputs:{x:a},backend:s,attrs:{shape:j}}),w.push(a))}if(null!=r){const j=Ic(r.shape,f);null!=j&&(r=he({inputs:{x:r},backend:s,attrs:{shape:j}}),w.push(r))}const v=he({inputs:{x:t},backend:s,attrs:{shape:[1,g,I(t.shape)/g]}});w.push(v);const C=new uU(y,e),_=s.runWebGLProgram(C,[n],"float32",[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]]),$=he({inputs:{x:_},backend:s,attrs:{shape:y}});w.push(_),w.push($);const E=null!=r,P=null!=a,B="leakyrelu"===i,U=i?Ni(i,!0):null,G=new k1(f?$.shape:v.shape,f?v.shape:$.shape,f?[e.batchSize,m,e.outChannels]:[e.batchSize,e.outChannels,m],!0,!1,E,U,P,B),H=f?[$,v]:[v,$];if(r&&H.push(r),P&&H.push(a),B){const j=s.makeTensorInfo([],"float32",_s(o,"float32"));H.push(j),w.push(j)}const K=s.runWebGLProgram(G,H,"float32"),X=he({inputs:{x:K},backend:s,attrs:{shape:e.outShape}});w.push(K);for(const j of w)s.disposeIntermediateTensorInfo(j);return X}const hU={kernelName:Hi,backendName:"webgl",kernelFunc:function cU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Rs(l),d=Zt(r.shape,a.shape,o,u,i,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&z().getBool("WEBGL_EXP_CONV")){const g=new W1(d);p=e.runWebGLProgram(g,[r,a],"float32",[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]])}else if(z().getBool("WEBGL_CONV_IM2COL"))p=G1({x:r,filter:a,convInfo:d,backend:e});else{const g=new B1(d);p=e.runWebGLProgram(g,[r,a],"float32")}else p=U1({x:r,filter:a,convInfo:d,backend:e});const f=he({inputs:{x:p},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(p),f}};class dU{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              ${"channelsLast"===t.dataFormat?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pU{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,o="channelsLast"===t.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${o?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${o?1:2}], coords[${o?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${o}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fU{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${t.strideDepth} - ${t.padInfo.front};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mU{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${s-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${t.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${s}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${s} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const yU={kernelName:Pc,backendName:"webgl",kernelFunc:function gU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Rs(l),d=Zt(r.shape,c,o,1,i,u,!1,h),p=new dU(d);return e.runWebGLProgram(p,[r,a],"float32")}};class xU{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=un(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int wCPerm = ${s} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const wU={kernelName:ji,backendName:"webgl",kernelFunc:function bU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Rs(u),d=Zt(o,a.shape,i,1,l,c,!1,h);if(z().getBool("WEBGL_PACK")&&"channelsLast"===h){const p=[[d.strideHeight,d.strideWidth]],f=new xU(d);return e.runWebGLProgram(f,[r,a],"float32",p)}{const p=new pU(d);return e.runWebGLProgram(p,[r,a],"float32")}}},IU={kernelName:qi,backendName:"webgl",kernelFunc:function vU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=Zs(r.shape,a.shape,o,l,i),c=new lU(u);return e.runWebGLProgram(c,[r,a],"float32")}},CU={kernelName:Lc,backendName:"webgl",kernelFunc:function SU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,u=Zs(r.shape,l,o,1,i),c=new fU(u);return e.runWebGLProgram(c,[r,a],"float32")}},kU={kernelName:Vc,backendName:"webgl",kernelFunc:function NU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,u=Zs(l,a.shape,i,1,o),c=new mU(u);return e.runWebGLProgram(c,[r,a],"float32")}},$U=et({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Xr}\n  return result;\n`}),EU={kernelName:Ka,backendName:"webgl",kernelFunc:$U},DU=et({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),AU={kernelName:Xa,backendName:"webgl",kernelFunc:DU};class RU{constructor(t,e,s,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,i,l,u]=t,[c]=e,[h,d]=s;this.outputShape=[c,h,d,u];const p="bilinear"===r?1:0,[f,g]=[i-1+".0",l-1+".0"],[m,y,x]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[b,w,v]=d>1?[""+(l-1)/(d-1),"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${o}) {\n          return;\n        }\n\n        float height_scale = ${y};\n        float width_scale = ${w};\n\n        float in_y = ${x};\n        if( in_y < 0.0 || in_y > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${g} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const OU={kernelName:zc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new RU(r.shape,a.shape,i,l,u);return e.runWebGLProgram(c,[r,a,o],"float32")}};var Fa=(()=>{return(n=Fa||(Fa={})).Prod="*",n.Sum="+",Fa;var n})();class H1{constructor(t,e,s,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,i=s?this.op===Fa.Prod?"1.0":"0.0":`getX(${j1(a,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?"end != "+(l-1):"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ut(a)} coords = getOutputCoords();\n        int end = ${q1(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${c};\n          ${q1(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${j1(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function j1(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.x, ${t}.y`;if(3===n)return`${t}.x, ${t}.y, ${t}.z`;if(4===n)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function q1(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.y`;if(3===n)return`${t}.z`;if(4===n)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function K1(n,t,e,s,r,a){const o=t.shape.length,i=kt([s],o);let l=t;null!=i&&(l=wn({inputs:{x:t},backend:e,attrs:{perm:i}}));const u=Lt(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=En({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new H1(n,l.shape,!1,a),g=h;h=e.runWebGLProgram(p,[h],h.dtype,[[d]]),e.disposeIntermediateTensorInfo(g)}if(r){const d=new H1(n,l.shape,r,a),p=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(p)}if(null!=i){const p=wn({inputs:{x:h},backend:e,attrs:{perm:Qs(i)}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),p}return h}const PU={kernelName:Mc,backendName:"webgl",kernelFunc:function FU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return K1(Fa.Prod,r,e,a,o,i)}},VU={kernelName:Ki,backendName:"webgl",kernelFunc:function LU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return K1(Fa.Sum,r,e,a,o,i)}},zU={kernelName:Bc,backendName:"webgl",kernelFunc:function MU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(1===r.shape.length){const l=e.readSync(r.dataId),u=e.readSync(a.dataId),c=p1(l,u,a.dtype,a.shape,o);return e.makeTensorInfo([o],a.dtype,c)}if(2===r.shape.length){const l=e.bufferSync(r),u=e.bufferSync(a),c=Z3(l,u,o,i);return e.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class BU{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const UU={kernelName:Wc,backendName:"webgl",kernelFunc:function WU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],h=("NHWC"===o?r.shape[1]:r.shape[2])*a,d=("NHWC"===o?r.shape[2]:r.shape[3])*a,p=("NHWC"===o?r.shape[3]:r.shape[1])/(a*a),g=new BU("NHWC"===o?[i,h,d,p]:[i,p,h,d],a,o);return e.runWebGLProgram(g,[r],r.dtype)}};class X1{constructor(t,e=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=un(this.outputShape.length);const o=t.filterHeight,i=t.filterWidth,l=t.outChannels/t.inChannels;let u="",c="";s&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,c="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${l};\n        int q = d2 - d1 * ${l};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${o}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${c}\n        setOutput(result);\n      }\n    `}}class Z1{constructor(t,e=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=un(this.outputShape.length);const o=t.outChannels/t.inChannels,i=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let y=0;y<h;y++)p+=`\n          vec4 xTexelC${2*y};\n          int xTexelC${2*y}Ready;\n          vec4 xTexelC${2*y+1};\n          int xTexelC${2*y+1}Ready;\n          vec4 xC${y};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let y=0;y<h;y++)p+=`\n          xTexelC${2*y} = vec4(0.0);\n          xTexelC${2*y}Ready = 0;\n          xTexelC${2*y+1} = vec4(0.0);\n          xTexelC${2*y+1}Ready = 0;\n          xC${y} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(d+1)/2;y++){const x=2*y;if(p+=`\n          xC = xCCorner + ${x*u};\n          `,1===l){if(x<h&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {\n                  xTexelC${x} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${x}.zw = vec2(0.0);\n                  }\n                  xTexelC${x}Ready = 1;\n                }\n              `,p+=1===u&&x>0?`\n                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);\n                  } else {\n                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {\n                  xTexelC${x} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${x}.zw = vec2(0.0);\n                  }\n                  xTexelC${x}Ready = 1;\n                }\n\n                xC${x} = xTexelC${x};\n                `,x+1<h)){const b=i%2==0?Le(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${b};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {\n                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${x+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${x+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);\n                    } else {\n                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);\n                    }\n                    `:`\n                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);\n                    `):p+=1===b?`\n                    xC${x+1} = xTexelC${x};\n                    `:`\n                    xCOffset = xC + ${b};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {\n                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${x+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${x+1}Ready = 1;\n                    }\n\n                    xC${x+1} = xTexelC${x+1};\n                    `}}else x<h&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {\n                  xTexelC${x} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${x}.zw = vec2(0.0);\n                  }\n                  xTexelC${x}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {\n                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${x+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${x+1}Ready = 1;\n                }\n\n                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);\n              `,x+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {\n                  xTexelC${x} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${x}.zw = vec2(0.0);\n                  }\n                  xTexelC${x}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {\n                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${x+1}.zw = vec2(0.);\n                  }\n                  xTexelC${x+1}Ready = 1;\n                }\n\n                xC${x} = vec4(\n                  xTexelC${x}.xy, xTexelC${x+1}.xy);\n              `,x+1<h&&(p+=`\n                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);\n                `)));x<h&&(p+=`\n            wTexel = getW(r, ${x}, d1, q);\n            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);\n          `,x+1<h&&(p+=`\n              wTexel = getW(r, ${x+1}, d1, q);\n              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",g="";s&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${g}\n        setOutput(result);\n      }\n    `}}const HU={kernelName:Xi,backendName:"webgl",kernelFunc:function GU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),S(sn(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=Zt(r.shape,a.shape,o,c,i,u,!0);let d;return d=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new Z1(h):new X1(h),e.runWebGLProgram(d,[r,a],"float32",[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]])}};class jU{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${t.outChannels/t.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qU{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,l=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${l}; dm++) {\n              int d2 = d1 * ${l} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const XU={kernelName:Uc,backendName:"webgl",kernelFunc:function KU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Zt(r.shape,c,o,i,l,u,!0),d=new jU(h);return e.runWebGLProgram(d,[r,a],"float32")}},YU={kernelName:Gc,backendName:"webgl",kernelFunc:function ZU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Zt(c,a.shape,o,i,l,u,!0),d=new qU(h);return e.runWebGLProgram(d,[r,a],"float32")}};class QU{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const eG={kernelName:"Diag",backendName:"webgl",kernelFunc:function JU(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],a=I(s.shape),o=he({inputs:{x:s},backend:e,attrs:{shape:[a]}}),i=new QU(a),l=e.runWebGLProgram(i,[o],o.dtype),u=he({inputs:{x:l},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(l),u}};class tG{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:i,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:h,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${h}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${l}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${s}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const sG={kernelName:Zi,backendName:"webgl",kernelFunc:function nG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=Ho(r.shape,a.shape,o,i,"NHWC",l);let c;const h=new tG(u);c=e.runWebGLProgram(h,[r,a],"float32");const d=he({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),d}},aG={kernelName:"Einsum",backendName:"webgl",kernelFunc:function rG(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=Yd(r,a.length);Jd(o.length,l,a);const{path:u,steps:c}=ep(i,l),h=c.length;let d=null,p=o.length;const f=[];for(let g=0;g<h;++g){for(const m of c[g]){const{permutationIndices:y,expandDims:x}=Qd(p,l[m]);let b;tp(y)?b=a[m]:(b=wn({inputs:{x:a[m]},backend:e,attrs:{perm:y}}),f.push(b));const w=b.shape.slice();for(let v=0;v<x.length;++v)w.splice(x[v],0,1);we(b.shape,w)||(b=he({inputs:{x:b},backend:e,attrs:{shape:w}}),f.push(b)),null===d?d=b:(d=Rf({inputs:{a:b,b:d},backend:e}),f.push(d))}g<h-1&&(u[g]>=0&&(d=yc({inputs:{x:d},backend:e,attrs:{axis:u[g]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&e.disposeIntermediateTensorInfo(g);return d}},oG=et({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),iG={kernelName:Ya,backendName:"webgl",kernelFunc:oG},cG={kernelName:qc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,a=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ci("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new Aa("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,r.shape);return e.runWebGLProgram(a,[s,r],s.dtype)}},hG=an({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:eB}),dG={kernelName:Yi,backendName:"webgl",kernelFunc:hG},fG=et({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Ud};\n  float a1 = ${Gd};\n  float a2 = ${Hd};\n  float a3 = ${jd};\n  float a4 = ${qd};\n  float a5 = ${Kd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),mG={kernelName:Qa,backendName:"webgl",kernelFunc:fG},Y1=et({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:tB,dtype:"float32"}),yG={kernelName:Ja,backendName:"webgl",kernelFunc:Y1};function Lf(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:a}=t,o=a.shape.length,i=a.shape.slice();let l=r;return r<0&&(S(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),he({inputs:{x:a},backend:s,attrs:{shape:i}})}const xG={kernelName:Qi,backendName:"webgl",kernelFunc:Lf},Q1="return exp(x) - 1.0;",bG=et({opSnippet:Q1,packedOpSnippet:Q1,cpuKernelImpl:nB}),wG={kernelName:eo,backendName:"webgl",kernelFunc:bG};class J1{constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ev(n,t,e){const s=e.texData.get(n.dataId),r=I(n.shape),a=n.shape[n.shape.length-1],i=he({inputs:{x:n},backend:e,attrs:{shape:[r/a,a]}}),l=i.shape,u=new J1("real",l,t),c=new J1("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(u,h,"float32"),p=e.runWebGLProgram(c,h,"float32"),f=pr({inputs:{real:d,imag:p},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p);const g=he({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),g}const IG={kernelName:"FFT",backendName:"webgl",kernelFunc:function vG(n){const{inputs:t,backend:e}=n,{input:s}=t;return ev(s,!1,e)}};class SG{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function $i(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:a}=e;if(a=a||xr(r),"string"===a){const o=Dt(a,I(s));return o.fill(r),t.makeTensorInfo(s,a,o)}{const o=new SG(s,r);return t.runWebGLProgram(o,[],a,[[r]])}}const CG={kernelName:Xc,backendName:"webgl",kernelFunc:$i};class NG{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const kG={kernelName:Zc,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new NG(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}},tv="return floor(x);",TG=et({opSnippet:tv,packedOpSnippet:tv,cpuKernelImpl:sB}),_G={kernelName:to,backendName:"webgl",kernelFunc:TG},$G=an({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),EG={kernelName:no,backendName:"webgl",kernelFunc:$G};class DG{constructor(t){this.variableNames=["A"];const e=xn(),[s,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class AG{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=xn(),[s,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${s}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const RG={kernelName:vh,backendName:"webgl",kernelFunc:function OG(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:a}=s,o="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];if(i||o){const g=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Pa||g!==Vf)&&(Vf=g,Pa=document.createElement("canvas").getContext("2d",{willReadFrequently:Vf})),Pa.canvas.width=l,Pa.canvas.height=u,Pa.drawImage(r,0,0,l,u),r=Pa.canvas}const d=e.makeTensorInfo(c,"int32");e.texData.get(d.dataId).usage=$n.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),r);const p=z().getBool("WEBGL_PACK")?new AG(h):new DG(h),f=e.runWebGLProgram(p,[d],"int32");return e.disposeData(d.dataId),f}};let Pa,Vf=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const PG={kernelName:Vl,backendName:"webgl",kernelFunc:function FG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=Rs(c),m=Zt(r.shape,a.shape,l,h,u,d,!1,g);let y;const x=[],b=null!=o,w=null!=i,v="leakyrelu"===p,C=()=>{const _=[r,a],$=(E,P)=>{if("NCHW"===P&&1===E.shape.length&&1!==E.shape[0]){const B=he({inputs:{x:E},backend:e,attrs:{shape:[E.shape[0],1,1]}});return x.push(B),B}return E};if(b&&_.push($(o,c)),w&&_.push($(i,c)),v){const E=e.makeTensorInfo([],"float32",_s(f,"float32"));_.push(E),x.push(E)}return _};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&z().getBool("WEBGL_EXP_CONV")){const _=p?Ni(p,!0):null,$=new W1(m,b,_,w,v),E=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],P=C();y=e.runWebGLProgram($,P,"float32",E)}else if(z().getBool("WEBGL_CONV_IM2COL"))y=G1({x:r,filter:a,convInfo:m,backend:e,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const _=p?Ni(p,!1):null,$=new B1(m,b,_,w,v),E=C();y=e.runWebGLProgram($,E,"float32")}else y=U1({x:r,filter:a,convInfo:m,backend:e,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const k=he({inputs:{x:y},backend:e,attrs:{shape:m.outShape}});return x.push(y),x.forEach(_=>e.disposeIntermediateTensorInfo(_)),k}},VG={kernelName:Ml,backendName:"webgl",kernelFunc:function LG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;null==g&&(g=[1,1]),S(sn(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=Zt(r.shape,a.shape,l,g,u,h,!0),y=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,x=d?Ni(d,y):null,b=[r,a],w=null!=o,v=null!=i,C="leakyrelu"===d;if(w&&b.push(o),v&&b.push(i),C){const E=e.makeTensorInfo([],"float32",_s(p,"float32"));b.push(E),f.push(E)}let k;k=y?new Z1(m,w,x,v,C):new X1(m,w,x,v,C);const $=e.runWebGLProgram(k,b,"float32",[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]]);return f.forEach(E=>e.disposeIntermediateTensorInfo(E)),$}};class MG{constructor(t,e,s,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const a=ut(s.length);let o="\n    int index;";for(let i=0;i<this.sliceDim;i++)o+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${o}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const BG={kernelName:tm,backendName:"webgl",kernelFunc:function zG(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=I(s.shape),[l,u,c,h]=Wd(s,r),d=he({inputs:{x:r},backend:e,attrs:{shape:[u,o]}}),p=he({inputs:{x:s},backend:e,attrs:{shape:[I(s.shape)/c,c]}});if(e.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const y=e.readSync(r.dataId),x=e.bufferSync(s),b=rB(y,x,s.dtype,u,o,c,h,s.shape,i);return e.makeTensorInfo(l,s.dtype,b.values)}const f=new MG(o,h,[u,c],s.shape),g=e.runWebGLProgram(f,[p,d],p.dtype),m=he({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}};class WG{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ut(this.rank),r=function UG(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)s.push(2===r?"index":`${e[r]}`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function nv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=ke(o,r.shape)[0];if(z().get("DEBUG")){const x=e.readSync(a.dataId),b=r.shape[l];for(let w=0;w<x.length;++w){const v=x[w];S(v<=b-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${b-1}]`)}}const u=rp(r,a,l,i),c=I(a.shape),h=[],d=he({inputs:{x:r},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=he({inputs:{x:a},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const x=e.bufferSync(p),b=e.bufferSync(d),w=aB(b,x,f);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(u.outputShape,w.dtype,w.values)}const g=new WG(d.shape,f),m=e.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const y=he({inputs:{x:m},backend:e,attrs:{shape:u.outputShape}});return h.forEach(x=>e.disposeIntermediateTensorInfo(x)),y}const GG={kernelName:el,backendName:"webgl",kernelFunc:nv},HG=an({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:oB,dtype:"bool"}),jG={kernelName:tl,backendName:"webgl",kernelFunc:HG},qG=an({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:iB}),KG={kernelName:so,backendName:"webgl",kernelFunc:qG},ZG={kernelName:Yc,backendName:"webgl",kernelFunc:function XG(n){const{inputs:t,backend:e}=n,{input:s}=t;return ev(s,!0,e)}},YG=et({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),QG={kernelName:ao,backendName:"webgl",kernelFunc:YG},JG=et({opSnippet:"return float(isinf(x));",dtype:"bool"}),eH={kernelName:oo,backendName:"webgl",kernelFunc:JG},tH=et({opSnippet:"return float(isnan(x));",dtype:"bool"}),nH={kernelName:lo,backendName:"webgl",kernelFunc:tH},sH=an({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:lB,dtype:"bool"}),rH={kernelName:sl,backendName:"webgl",kernelFunc:sH},aH=an({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:uB,dtype:"bool"}),oH={kernelName:rl,backendName:"webgl",kernelFunc:aH},lH={kernelName:nm,backendName:"webgl",kernelFunc:function iH(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:a}=e,o=cB(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}},cH=et({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:hB}),hH={kernelName:uo,backendName:"webgl",kernelFunc:cH},pH=et({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),fH={kernelName:co,backendName:"webgl",kernelFunc:pH},mH=an({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),gH={kernelName:al,backendName:"webgl",kernelFunc:mH},yH=et({opSnippet:"return float(!(x >= 1.0));"}),xH={kernelName:ol,backendName:"webgl",kernelFunc:yH},bH=an({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),wH={kernelName:il,backendName:"webgl",kernelFunc:bH};class vH{constructor(t,e,s,r,a){this.variableNames=["x"],this.outputShape=[];const o=e,i=t[3]-1;let l;this.outputShape=t;const u=`float(${s}) + float(${r}) * sum`;l=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${o}; j <= ${o}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${l};\n        setOutput(val);\n      }\n    `}}class IH{constructor(t,e,s,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,i=t[3]-1;let l;this.outputShape=t;const u=`float(${s}) + float(${r}) * sum`;l=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${o};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${o}; j <= ${o}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${l};\n        setOutput(result);\n      }\n    `}}const SH={kernelName:ll,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,u=z().getBool("WEBGL_PACK_NORMALIZATION")?new IH(r.shape,a,o,i,l):new vH(r.shape,a,o,i,l);return e.runWebGLProgram(u,[r],r.dtype)}};class CH{constructor(t,e,s,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${s});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const NH={kernelName:Jc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s,h=new CH(r.shape,i,l,u,c);return e.runWebGLProgram(h,[r,a,o],r.dtype)}};function sv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=ke(a,r.shape);let u=l;const c=kt(u,i),h=null!=c,d=e.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const b=e.texData.get(p.dataId).values,w=new Array(i);for(let k=0;k<w.length;k++)w[k]=r.shape[c[k]];const v=Df(b,r.shape,r.dtype,c,w);p=e.makeTensorInfo(w,r.dtype),e.texData.get(p.dataId).values=v}else p=gc(r,c,e);u=Lt(u.length,i)}rn("max",u,i);const[f,g]=Yt(p.shape,u);let y,m=f;if(o&&(m=Pt(f,l)),d){const b=e.texData.get(p.dataId).values,w=dB(b,I(g),m,r.dtype);y=e.makeTensorInfo(m,r.dtype),e.texData.get(y.dataId).values=w}else y=function kH(n,t,e,s){const r=I(t),i=he({inputs:{x:n},attrs:{shape:[I(n.shape)/r,r]},backend:s}),l=Zr(i,n.dtype,"max",s),u=he({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}(p,g,m,e);return h&&e.disposeIntermediateTensorInfo(p),y}const TH={kernelName:ul,backendName:"webgl",kernelFunc:sv},EH=an({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:pB}),DH={kernelName:ho,backendName:"webgl",kernelFunc:EH},RH={kernelName:cl,backendName:"webgl",kernelFunc:function AH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Ii(r,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s;S(sn(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=Un(r.shape,a,o,1,i,l);if(1===c.filterWidth&&1===c.filterHeight&&we(c.inShape,c.outShape))return En({inputs:{x:r},backend:e});const h=new ki(c,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}},FH={kernelName:hl,backendName:"webgl",kernelFunc:function OH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=s,h=As(r.shape,a,o,[1,1,1],i,u,l),d=new Of(h,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}};class PH{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const a=t.effectiveFilterHeight,o=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${a-1-t.padInfo.top}, ${o-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${a*o-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${o} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LH{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${l-1-t.padInfo.front}, ${u-1-t.padInfo.top}, ${c-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n           wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${l*u*c-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const MH={kernelName:th,backendName:"webgl",kernelFunc:function VH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,d=As(o.shape,i,l,[1,1,1],u,c),p=new Of(d,"max",!0),f=e.runWebGLProgram(p,[o],o.dtype),g=new LH(d),m=e.runWebGLProgram(g,[r,f],o.dtype);return e.disposeIntermediateTensorInfo(f),m}},BH={kernelName:eh,backendName:"webgl",kernelFunc:function zH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:a,output:o}=t,i=a;Ii([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Un(i.shape,l,u,1,c,h),f=new ki(d,"max",!0),g=e.runWebGLProgram(f,[i],i.dtype),m=new PH(d),y=e.runWebGLProgram(m,[r,g],i.dtype);return e.disposeIntermediateTensorInfo(g),y}},UH={kernelName:sm,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=e;S(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];S(sn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=Un(s.shape,r,a,u,o),[h,d]=function WH(n,t,e,s){let r=new ki(e,"max",!1);const a=s.runWebGLProgram(r,[n],"float32");return r=new ki(e,"max",!0,!0,t),[a,s.runWebGLProgram(r,[n],"float32")]}(s,i,c,l);return[h,d]}},HH={kernelName:dl,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:a}=t,o=e,i=s.shape.length,l=ke(a,s.shape);let u=l;const c=kt(u,i),h=null!=c,d=o.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const w=o.texData.get(f.dataId).values,v=new Array(i);for(let _=0;_<v.length;_++)v[_]=s.shape[c[_]];const C=Df(w,s.shape,s.dtype,c,v);f=o.makeTensorInfo(v,s.dtype),o.texData.get(f.dataId).values=C}else f=gc(s,c,o);p.push(f),u=Lt(u.length,i)}rn("sum",u,i);const[g,m]=Yt(f.shape,u);let y=g;r&&(y=Pt(g,l));const x=function GH(n,t,e,s){const r=I(t),i=he({inputs:{x:n},attrs:{shape:[I(n.shape)/r,r]},backend:s}),l=Zr(i,"float32","mean",s),u=he({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}(f,m,y,o);for(const b of p)o.disposeIntermediateTensorInfo(b);return x}},qH={kernelName:pl,backendName:"webgl",kernelFunc:function jH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=ke(a,r.shape);let u=l;const c=kt(u,i);let h=r;null!=c&&(h=wn({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Lt(u.length,r.shape.length)),rn("min",u,i);const[d,p]=Yt(h.shape,u),g=he({inputs:{x:h},backend:e,attrs:{shape:[-1,I(p)]}}),m=Zr(g,g.dtype,"min",e);let y;return y=he(o?{inputs:{x:m},backend:e,attrs:{shape:Pt(d,l)}}:{inputs:{x:m},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),null!=c&&e.disposeIntermediateTensorInfo(h),y}},ZH=an({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:fB}),YH={kernelName:po,backendName:"webgl",kernelFunc:ZH};class QH{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((c,h)=>c[0]+t[h]+c[1]);const r=t.length,a=ut(r),o=e.map(c=>c[0]).join(","),i=e.map((c,h)=>c[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===s?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${l}));\n      }\n    `:`\n        int start = ${o};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class JH{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,g)=>f[0]+t[g]+f[1]);const r=t.length,a=ut(r),o=e.map(f=>f[0]).join(","),i=e.map((f,g)=>f[0]+t[g]).join(","),l=bn("rc",r),u=bn("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===s?0:1;let p="";if(1===r){const f=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${u.join()}), ${h});\n        ${l[r-1]} += 1;\n        if(${c}) {\n          ${f}\n          result[1] = getChannel(getX(${u.join()}), ${h});\n        }\n      `}else{const f=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${u.join()}), ${h});\n        ${l[r-1]} += 1;\n        if(${c}) {\n          ${f}\n          result[1] = getChannel(getX(${u.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${l[r-2]} += 1;\n        if(${l[r-2]} < ${this.outputShape[r-2]}) {\n          ${f}\n          result[2] = getChannel(getX(${u.join()}), ${h});\n          ${l[r-1]} += 1;\n          if(${c}) {\n            ${f}\n            result[3] = getChannel(getX(${u.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const ej={kernelName:fl,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:a}=e,o=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JH(s.shape,r,a):new QH(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)}},sj=an({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),rj={kernelName:fo,backendName:"webgl",kernelFunc:sj};class aj{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const rv=an({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),oj={kernelName:Za,backendName:"webgl",kernelFunc:rv},av="return a - b;",ov=an({opSnippet:av,packedOpSnippet:av,supportsComplex:!0,cpuKernelImpl:FB}),ij={kernelName:Eo,backendName:"webgl",kernelFunc:ov};function iv(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:a}=s,o=ke([a],r.shape),i=sv({inputs:{x:r},backend:e,attrs:{reductionIndices:o,keepDims:!1}}),l=Pt(i.shape,o),u=he({inputs:{x:i},backend:e,attrs:{shape:l}}),c=ov({inputs:{a:r,b:u},backend:e}),h=Y1({inputs:{x:c},backend:e}),d=yc({inputs:{x:h},backend:e,attrs:{axis:o,keepDims:!1}}),p=he({inputs:{x:d},backend:e,attrs:{shape:l}}),f=rv({inputs:{a:h,b:p},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}const lj={kernelName:Al,backendName:"webgl",kernelFunc:iv},cj={kernelName:rm,backendName:"webgl",kernelFunc:function uj(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:iv({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),h=new aj(l.shape[0],l.shape[1],a),p=e.runWebGLProgram(h,[l],"int32",[[o]]);return i||e.disposeIntermediateTensorInfo(l),p}},fj={kernelName:ml,backendName:"webgl",kernelFunc:function pj(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const a=e.texData.get(s.dataId),[o,i]=gB(a.values,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,o)}let r;return r=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new dr(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Ts(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),e.runWebGLProgram(r,[s],s.dtype)}},mj=Ed,yj={kernelName:nh,backendName:"webgl",kernelFunc:function gj(n){Dn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=e.readSync(r.dataId),c=e.readSync(a.dataId),{selectedIndices:h}=mj(u,c,o,i,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},xj=Dd,wj={kernelName:sh,backendName:"webgl",kernelFunc:function bj(n){Dn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s,c=e.readSync(r.dataId),h=e.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=xj(c,h,o,i,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}},vj=Ad,Sj={kernelName:rh,backendName:"webgl",kernelFunc:function Ij(n){Dn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=e.readSync(r.dataId),h=e.readSync(a.dataId),d=o,p=i,f=l,g=u,{selectedIndices:m,selectedScores:y}=vj(c,h,d,p,f,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Cj{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${s}),\n                      float(index == coords.y)));\n      }\n    `}}const Nj={kernelName:xl,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:a,depth:o,onValue:i,offValue:l}=s,u=I(r.shape),c=new Cj(u,o,i,l),h=he({inputs:{x:r},backend:e,attrs:{shape:[u]}}),d=e.runWebGLProgram(c,[h],a);e.disposeIntermediateTensorInfo(h);const f=he({inputs:{x:d},backend:e,attrs:{shape:[...r.shape,o]}});return e.disposeIntermediateTensorInfo(d),f}};function Sc(n){const{inputs:t,backend:e}=n,{x:s}=t;if("complex64"===s.dtype){const r=Ti({inputs:{input:s},backend:e}),a=Sc({inputs:{x:r},backend:e}),o=vc({inputs:{input:s},backend:e}),i=Sc({inputs:{x:o},backend:e}),l=pr({inputs:{real:a,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),l}return $i({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:e})}const kj={kernelName:Pl,backendName:"webgl",kernelFunc:Sc},Tj={kernelName:yl,backendName:"webgl",kernelFunc:function lv(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const r=Ti({inputs:{input:s},backend:e}),a=lv({inputs:{x:r},backend:e}),o=vc({inputs:{input:s},backend:e}),i=Sc({inputs:{x:o},backend:e}),l=pr({inputs:{real:a,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),l}return $i({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}},$j={kernelName:bl,backendName:"webgl",kernelFunc:function _j(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(1===t.length)return Lf({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const a=t[0].shape,o=t[0].dtype;t.forEach(c=>{ee(a,c.shape,"All tensors passed to stack must have matching shapes"),S(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=z1({inputs:t.map(c=>{const h=Lf({inputs:{input:c},backend:e,attrs:{dim:r}});return i.push(h),h}),backend:e,attrs:{axis:r}});return i.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}};class Ej{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);const r=t.length,a=ut(r),o=e.map(u=>u[0]).join(","),i=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${l}));\n        }\n      }\n    `:`\n        int start = ${o};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Dj{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,m)=>g[0]+t[m]+g[1]);const r=t.length,a=ut(r),o=e.map(g=>g[0]).join(","),i=e.map((g,m)=>g[0]+t[m]).join(","),l=bn("rc",r),u=bn("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${l[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${l[r-2]} += 1;\n       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${l[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let g=0,m=1===r?2:4;g<m;g++)f+=`\n        ${d[g]}\n        if (${p}) {\n          result[${g}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${g}] = getChannel(getX(${u.join()}), ${h});\n        }\n      `;f+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}const uv=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:a,constantValue:o}=s;if(0===I(r.shape))return $i({backend:e,attrs:{shape:a.map((c,h)=>c[0]+r.shape[h]+c[1]),value:o,dtype:r.dtype}});const i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Dj(r.shape,a,o):new Ej(r.shape,a,o);return e.runWebGLProgram(i,[r],r.dtype,[[o]])},Aj={kernelName:wl,backendName:"webgl",kernelFunc:uv},Fj=an({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),Pj={kernelName:go,backendName:"webgl",kernelFunc:Fj},Vj={kernelName:Il,backendName:"webgl",kernelFunc:function Lj(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],u=ke(a,r.shape);let c=u;const h=kt(c,i);let p,d=r;if(null!=h&&(d=wn({inputs:{x:r},backend:e,attrs:{perm:h}}),c=Lt(c.length,i),l.push(d)),rn("prod",c,i),e.shouldExecuteOnCPU([d])){const f=e.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:y}=xB(d.shape,d.dtype,f,c);p=e.makeTensorInfo(m,y,g)}else{const[f,g]=Yt(d.shape,c),m=I(g),y=he({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}}),b=Zr(y,$h(r.dtype),"prod",e);p=he({inputs:{x:b},backend:e,attrs:{shape:f}}),l.push(y),l.push(b)}if(o){l.push(p);const f=Pt(p.shape,u);p=he({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},zj={kernelName:am,backendName:"webgl",kernelFunc:function Mj(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=s,l=r.map(y=>e.readSync(y.dataId)),u=r.map(y=>y.shape),c=e.readSync(a.dataId),h=e.readSync(o.dataId),[d,p,f]=bB(l,u,c,a.shape,a.dtype,h,o.shape,i),g=d.map(y=>e.makeTensorInfo([y.length],"int32",y)),m=e.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},Wj={kernelName:om,backendName:"webgl",kernelFunc:function Bj(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:a}=t,o=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(a.dataId),[u,c]=wB(o,s.shape,s.dtype,i,r.shape,l,a.shape);return[e.makeTensorInfo([u.length],"int32",u),e.makeTensorInfo([c.length],s.dtype,c)]}},Gj={kernelName:im,backendName:"webgl",kernelFunc:function Uj(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=s,u=e.readSync(r.dataId),c=e.readSync(a.dataId),h=e.readSync(o.dataId),d=i.map(m=>e.readSync(m.dataId)),p=i.map(m=>m.shape),[f,g]=vB(u,r.shape,c,a.shape,a.dtype,h,o.shape,d,p,l);return e.makeTensorInfo(f,a.dtype,g)}},cv=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:a,dtype:o}=e,i=IB(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Hj={kernelName:ah,backendName:"webgl",kernelFunc:cv},jj=et({opSnippet:"return 1.0 / x;"}),qj={kernelName:yo,backendName:"webgl",kernelFunc:jj},Xj=et({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Zj={kernelName:xo,backendName:"webgl",kernelFunc:Xj},Qj=et({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Jj={kernelName:bo,backendName:"webgl",kernelFunc:Qj};class eq{constructor(t,e,s,r,a){this.variableNames=["A"],this.outputShape=[];const[o,i,l,u]=t;this.outputShape=[o,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class tq{constructor(t,e,s,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,i,l,u]=t;this.outputShape=[o,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]},\n          ${c[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const sq={kernelName:Nl,backendName:"webgl",kernelFunc:function nq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tq(r.shape,l,u,a,o):new eq(r.shape,l,u,a,o);return e.runWebGLProgram(c,[r],"float32")}};class rq{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,o,i]=t,l=[s&&o>1?r-1:r,s&&i>1?a-1:a],u=[s&&o>1?o-1:o,s&&i>1?i-1:i],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=2*Math.ceil(d)+2,g=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${g});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const oq={kernelName:lh,backendName:"webgl",kernelFunc:function aq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:a}=t,{alignCorners:o}=s,i=new rq(a.shape,r.shape,o);return e.runWebGLProgram(i,[a],a.dtype)}};class iq{constructor(t,e,s,r,a){this.variableNames=["A"],this.outputShape=[];const[o,i,l,u]=t;this.outputShape=[o,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class lq{constructor(t,e,s,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,i,l,u]=t;this.outputShape=[o,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]},\n          ${c[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const cq={kernelName:Cl,backendName:"webgl",kernelFunc:function uq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lq(r.shape,l,u,a,o):new iq(r.shape,l,u,a,o);return e.runWebGLProgram(c,[r],r.dtype)}};class hq{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,o,i]=t,l=[s&&o>1?r-1:r,s&&i>1?a-1:a],u=[s&&o>1?o-1:o,s&&i>1?i-1:i],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=2*Math.ceil(d)+2,g=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${g});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${l[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${l[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${s} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${s} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const pq={kernelName:ih,backendName:"webgl",kernelFunc:function dq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:a}=t,{alignCorners:o}=s,i=new hq(a.shape,r.shape,o);return e.runWebGLProgram(i,[a],a.dtype)}};class fq{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,1===s)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const a=t.map((i,l)=>(i=>-1!==e.indexOf(i)&&1!==t[i]?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`)(l)).join(","),o=ut(s);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class mq{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=bn("rc",s),a=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=ut(s);function d(f){const g=t.map((x,b)=>function p(f,g){return-1!==e.indexOf(f)&&1!==t[f]?`${t[f]} - ${g[f]} - 1`:`${g[f]}`}(b,f));return`getChannel(getX(${g.join(",")}), vec2(${g.slice(-2).join(",")}))`}this.userCode=1===s?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function l(f){return d(f)}(r.slice())};\n          if(${a}){\n            result.g = ${function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}(r.slice())};\n          }\n          if(${o}) {\n            result.b = ${function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}(r.slice())};\n            if(${a}) {\n              result.a = ${function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const yq={kernelName:kl,backendName:"webgl",kernelFunc:function gq(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:a}=s,o=r.shape.length,i=ke(a,r.shape);if(0===o)return En({inputs:{x:r},backend:e});const l=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mq(r.shape,i):new fq(r.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}};class xq{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let a="";a="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bq={kernelName:Ih,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:a,center:o}=t,i=e,l=new xq(s.shape,a),[u,c]=Md(o,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,h)}},wq=et({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),vq={kernelName:wo,backendName:"webgl",kernelFunc:wq},Iq=et({opSnippet:"return inversesqrt(x);",cpuKernelImpl:SB}),Sq={kernelName:vo,backendName:"webgl",kernelFunc:Iq};class Mf{constructor(t,e,s,r,a,o,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const u=ut(a.length),c=ut(o.length);let h="";1===s?h="i":2===s&&(h="i, j");let p="";1===r?p="i":2===r&&(p="i, coords[1]");let g="";l&&(g="coords[0], coords[1]"),this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${h}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${p});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(${g}), sum, float(found)));\n        }\n      `}}class Cq{constructor(t,e,s,r,a,o,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const u=ut(a.length),c=ut(o.length);let h="";1===s?h="i":2===s&&(h="i, j");let p="";1===r?p="i":2===r&&(p="i, coords[1]");let g="";l&&(g="coords[0], coords[1]"),this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${t}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${e}; j+=2) {\n              ivec4 index = round(getIndices(${h}));\n              flattenedIndex += index.xz * ${e>1?"strides[j]":"strides"};\n              if (j + 1 < ${e}) {\n                flattenedIndex += index.yw * ${e>1?"strides[j + 1]":"strides"};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = getUpdates(${p});\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(getDefaultValue(${g}), sum, found));\n        }\n      `}}const kq={kernelName:lm,backendName:"webgl",kernelFunc:function Nq(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Or(0,r,o),d=[h/u,u];if(0===h)return e.makeTensorInfo(o,r.dtype);const p=he({inputs:{x:r},backend:e,attrs:{shape:[l,i]}}),f=he({inputs:{x:a},backend:e,attrs:{shape:[l,u]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=z().getBool("WEBGL_PACK")?new Cq(l,i,p.shape.length,f.shape.length,c,d):new Mf(l,i,p.shape.length,f.shape.length,c,d);const y=e.runWebGLProgram(m,[f,p,g],f.dtype),x=he({inputs:{x:y},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(g),x}};class Tq{constructor(t,e,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const o=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=2===z().getNumber("WEBGL_VERSION")?"while (left < right) {":o;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===r?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const $q={kernelName:cm,backendName:"webgl",kernelFunc:function _q(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:a}=t,{side:o}=s,i=new Tq(r.shape[0],r.shape[1],a.shape[1],o);return e.runWebGLProgram(i,[r,a],"int32",[[r.shape[1]]])}};class Eq{constructor(t,e,s){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,s>4)throw Error(`Where for rank ${s} is not yet supported`);if(1===s)a="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${i[c]}`),c<t&&l.push(`${i[c]}`);r=l.join(),a=u.join()}const o=ut(s);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const Aq={kernelName:Tl,backendName:"webgl",kernelFunc:function Dq(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:a}=t,o=new Eq(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(o,[s,r,a],Nn(r.dtype,a.dtype))}},Oq=et({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${mu};\n  float scale = ${gu};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Fq={kernelName:Io,backendName:"webgl",kernelFunc:Oq},Lq=et({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:NB}),Vq={kernelName:ko,backendName:"webgl",kernelFunc:Lq},Mq=et({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),zq={kernelName:No,backendName:"webgl",kernelFunc:Mq},Uq=et({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Xr}\n  return result;\n`}),Gq={kernelName:So,backendName:"webgl",kernelFunc:Uq},Hq=et({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),jq={kernelName:Co,backendName:"webgl",kernelFunc:Hq},qq=et({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Kq={kernelName:To,backendName:"webgl",kernelFunc:qq},Xq={kernelName:El,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:a,paddings:o}=s;S(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=uv({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),h=ei(c.shape,a,i,!1),d=ti(h.length,a.length,!1),p=ni(c.shape,a,i,!1),f=he({inputs:{x:c},backend:e,attrs:{shape:h}}),g=wn({inputs:{x:f},backend:e,attrs:{perm:d}}),m=he({inputs:{x:g},backend:e,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach(y=>e.disposeIntermediateTensorInfo(y)),m}},Yq={kernelName:uh,backendName:"webgl",kernelFunc:function Zq(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=e.readSync(s.dataId),l=e.readSync(r.dataId),u=e.readSync(a.dataId),c=e.readSync(o.dataId)[0],[h,d,p,f,g]=TB(i,s.shape,s.dtype,l,r.dtype,u,c);return[e.makeTensorInfo(d,s.dtype,h),e.makeTensorInfo([d[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(m=>Number(m)))),e.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}},Jq={kernelName:ch,backendName:"webgl",kernelFunc:function Qq(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(e.readSync(r.dataId)),i=e.readSync(s.dataId),l=Array.from(e.readSync(a.dataId)),[u,c,h]=_B(i,s.shape,s.dtype,o,l);return[e.makeTensorInfo(c,s.dtype,u),e.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},tK={kernelName:hh,backendName:"webgl",kernelFunc:function eK(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(a.dataId),[u,c]=m1(o,s.shape,s.dtype,i,l,!0);return e.makeTensorInfo(c,s.dtype,u)}},sK={kernelName:dh,backendName:"webgl",kernelFunc:function nK(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(a.dataId),[u,c]=m1(o,s.shape,s.dtype,i,l);return e.makeTensorInfo(c,s.dtype,u)}},aK={kernelName:hm,backendName:"webgl",kernelFunc:function rK(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Or(0,r,i);if("string"===a.dtype){const y=e.bufferSync(r),x=e.bufferSync(a),b=Es(e.readSync(o.dataId)[0]),w=CB(y,x,i,d,c,u,l,h,b,!1);return e.makeTensorInfo(i,w.dtype,w.values)}const f=new Mf(u,l,r.shape.length,a.shape.length,h,[d,1],!1),g=e.runWebGLProgram(f,[a,r,o],a.dtype),m=he({inputs:{x:g},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(g),m}},iK={kernelName:Dl,backendName:"webgl",kernelFunc:function oK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=ke(o,r.shape)[0],l=np(r,a,i),c=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[i]=d;const f=Oa({inputs:{x:r},backend:e,attrs:{begin:c,size:p}});return c[i]+=d,f})}},hv="return sqrt(x);",lK=et({opSnippet:hv,packedOpSnippet:hv,cpuKernelImpl:$B}),uK={kernelName:_o,backendName:"webgl",kernelFunc:lK},hK={kernelName:ph,backendName:"webgl",kernelFunc:et({opSnippet:"return x * x;"})},dv="return (a - b) * (a - b);",dK=an({opSnippet:dv,packedOpSnippet:dv}),pK={kernelName:$o,backendName:"webgl",kernelFunc:dK},mK={kernelName:Rl,backendName:"webgl",kernelFunc:function fK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const o=Ms(e.readSync(r.dataId)),i=EB(o,"string",s);return e.makeTensorInfo(r.shape,"string",i)}},yK={kernelName:Oo,backendName:"webgl",kernelFunc:function gK({inputs:n,attrs:t,backend:e}){const{x:s}=n,a=new Ts(s.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return e.runWebGLProgram(a,[s],s.dtype)}};class xK{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,a=ut(s.length),o=ut(s.length);let i="";if(1===r)i="coords * strides + begin";else{let l=0;i=s.map((u,c)=>(l++,1===s.length?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const wK={kernelName:fh,backendName:"webgl",kernelFunc:function bK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:x,end:b,strides:w}=ad(r.shape,a,o,i,l,u,c,h,d);let v;if(g)v=he({inputs:{x:r},backend:e,attrs:{shape:f}});else if(m||y){S(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=nd(x,b,w),_=Oa({inputs:{x:r},backend:e,attrs:{begin:x,size:k}});v=he({inputs:{x:_},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(_)}else if(e.shouldExecuteOnCPU([r])){const _=e.readSync(r.dataId),$=je(r.shape,r.dtype,_),E=DB(p,$,w,x);v=e.makeTensorInfo(f,r.dtype,E.values)}else{const _=new xK(x,w,p);v=e.runWebGLProgram(_,[r],r.dtype)}const C=he({inputs:{x:v},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(v),C}},IK={kernelName:mh,backendName:"webgl",kernelFunc:function vK(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=e.readSync(c.dataId),p=e.readSync(h.dataId),[f,g]=AB(d,p,r,a,o,i,l,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",g)]}},CK={kernelName:gh,backendName:"webgl",kernelFunc:function SK(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=e.readSync(a.dataId),l=e.readSync(o.dataId)[0],[u,c,h]=RB(i,l,r),d=c.length;return[e.makeTensorInfo([d,2],"int32",u),e.makeTensorInfo([d],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(h))]}},kK={kernelName:yh,backendName:"webgl",kernelFunc:function NK(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=e.readSync(a.dataId),i=OB(o,r);return e.makeTensorInfo(a.shape,"int32",i)}},TK=et({opSnippet:"return tan(x);"}),_K={kernelName:Do,backendName:"webgl",kernelFunc:TK},$K=et({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),EK={kernelName:Ao,backendName:"webgl",kernelFunc:$K},AK={kernelName:um,backendName:"webgl",kernelFunc:function DK(n){const{inputs:t,backend:e}=n,{tensor:r,indices:a,updates:o}=t,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Or(0,a,r.shape),d=[h/u,u];if(0===h)return e.makeTensorInfo(r.shape,a.dtype);const p=he({inputs:{x:a},backend:e,attrs:{shape:[l,i]}}),f=he({inputs:{x:o},backend:e,attrs:{shape:[l,u]}}),g=he({inputs:{x:r},backend:e,attrs:{shape:d}}),m=new Mf(l,i,p.shape.length,f.shape.length,c,d,!1,!0),y=e.runWebGLProgram(m,[f,p,g],g.dtype),x=he({inputs:{x:y},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),x}};class RK{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[o]*e[o];this.outputShape=s,this.rank=s.length;const r=ut(this.rank),a=function OK(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function pv(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const l=e.readSync(r.dataId),u="string"===r.dtype?l.map(d=>Es(d)):l,c=je(r.shape,r.dtype,u),h=PB(c,a);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new RK(r.shape,a);return e.runWebGLProgram(o,[r],r.dtype)}const FK={kernelName:Ro,backendName:"webgl",kernelFunc:pv};class PK{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class LK{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Yr(n,t){null!==t&&n.disposeIntermediateTensorInfo(t)}function fv(n){let t=1;for(;t<n;)t*=2;return t}const MK={kernelName:xh,backendName:"webgl",kernelFunc:function VK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:a,sorted:o}=s,i=z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([r])||c<i||a>l){const E=e.readSync(r.dataId),[P,B]=LB(E,u,r.dtype,a,o);return[e.makeTensorInfo(P.shape,P.dtype,P.values),e.makeTensorInfo(B.shape,B.dtype,B.values)]}if(0===a)return u[u.length-1]=0,[e.makeTensorInfo(u,r.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(1===c)return[r,$i({attrs:{shape:u,dtype:"int32",value:0},backend:e})];const h=e.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?e.unpackTensor(r):r,g=I(u)/c,m=he({inputs:{x:p},attrs:{shape:[g,c]},backend:e});d&&Yr(e,p);const y=fv(a),x=fv(c);let b=null;const w=()=>null===b?[m,m]:[m,b],v=(E,P,B)=>{const U=w(),G=new PK(B),X=b;b=e.runWebGLProgram(G,U,"int32",[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[E],[P]]),Yr(e,X)};for(let E=1;E<y;E*=2){const P=2*E;for(let B=E;B>=1;B/=2)v(P,B,[g,x])}for(let E=x;E>y;E/=2){const P=w(),B=new LK([g,E/2]),H=b;b=e.runWebGLProgram(B,P,"int32",[[c],[null===b?1:0],[y]]),Yr(e,H);const K=y/2,X=2*K;for(let j=K;j>=1;j/=2)v(X,j,b.shape)}let C=b;b=Oa({inputs:{x:b},backend:e,attrs:{begin:0,size:[g,a]}}),Yr(e,C);let k=nv({inputs:{x:m,indices:b},backend:e,attrs:{axis:1,batchDims:1}});Yr(e,m);const _=u.slice(0,-1);_.push(a),C=b,b=he({inputs:{x:b},attrs:{shape:_},backend:e}),Yr(e,C);const $=k;return k=he({inputs:{x:k},attrs:{shape:_},backend:e}),Yr(e,$),[k,b]}};class zK{constructor(t,e,s,r,a,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const i="nearest"===s?1:2;let l;switch(r){case"constant":default:l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${l} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${l} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${l} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const WK={kernelName:bh,backendName:"webgl",kernelFunc:function BK(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],y=new zK(h,d,o,i,l,[c,f,g,p]);return e.runWebGLProgram(y,[r,a],"float32")}},GK={kernelName:wh,backendName:"webgl",kernelFunc:function UK(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:a}=t;Ii(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=VB(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}},jK={kernelName:Ol,backendName:"webgl",kernelFunc:function HK(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1);let c=0;for(let g=0;g<i;g++)g!==a&&(u[c++]=o.shape[g]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[a]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[a]=g;const m=Oa({inputs:{x:o},backend:e,attrs:{begin:d,size:p}}),y=he({inputs:{x:m},backend:e,attrs:{shape:u}});f[g]=y,h.push(m)}return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),f}};class qK{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,a=t.inSize,o=t.numSegments,i=o*Math.ceil(a/s);this.outputShape=[r,i];const c=4*Math.floor(s/4),h=s%4,d="\n        sumValue += dot(values, segFilter);\n    ";let p="";a%s>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let f="";a%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${f}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${o})) * float(${s}));\n        int currentSeg = int(mod(float(outIdx), float(${o})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(sumValue);\n      }\n    `}}const ZK=[AW,OW,LW,zW,WW,HW,qW,XW,JW,t4,r4,i4,c4,f4,y4,b4,v4,N4,T4,$4,A4,V4,z4,W4,q4,X4,J4,mW,nU,iU,hU,yU,wU,IU,CU,kU,EU,AU,OU,PU,VU,zU,UU,HU,XU,YU,eG,sG,aG,iG,cG,dG,mG,yG,xG,wG,IG,CG,kG,_G,EG,RG,PG,VG,BG,GG,jG,KG,fW,ZG,aU,QG,eH,nH,yW,rH,oH,lH,hH,fH,gH,xH,wH,SH,NH,TH,DH,RH,FH,MH,BH,UH,HH,qH,YH,ej,rj,cj,wW,fj,yj,wj,Sj,U4,Nj,Tj,$j,Aj,Pj,bW,Vj,zj,Wj,Gj,Hj,G4,oj,qj,Zj,Jj,IW,sq,oq,cq,pq,yq,bq,vq,Sq,kq,$q,Aq,Fq,Vq,zq,Gq,jq,L4,lj,Kq,Xq,Yq,Jq,tK,sK,aK,iK,uK,hK,pK,mK,yK,wK,IK,CK,kK,ij,$W,_K,EK,AK,FK,MK,WK,EW,GK,jK,{kernelName:Fl,backendName:"webgl",kernelFunc:function KK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[];let u=0;const c=kt([u],i);let h=r;null!=c&&(h=wn({inputs:{x:r},backend:e,attrs:{perm:c}}),l.push(h),u=Lt(1,i)[0]);const d=wy(h.shape,u,o),p=I([h.shape[u]]),f=he({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}});l.push(f);const g=$h(r.dtype),m=(w,v,C,k,_)=>{const $=w.shape[0],E=w.shape[1],P=by(E,_),U=new qK({windowSize:P,inSize:E,batchSize:$,numSegments:_},v),G=e.compileAndRun(U,[w,C],k);if(l.push(G),G.shape[1]===_)return G;const H=cv({backend:e,attrs:{start:0,stop:_,step:1,dtype:"float32"}}),K=pv({inputs:{x:H},backend:e,attrs:{reps:[E/P]}});return l.push(H),l.push(K),m(G,v,K,k,_)},x=he({inputs:{x:m(f,"unsortedSegmentSum",a,g,o)},backend:e,attrs:{shape:d}});let b=x;if(null!=c){l.push(x);const w=Qs(c);b=wn({inputs:{x:b},backend:e,attrs:{perm:w}})}return l.forEach(w=>e.disposeIntermediateTensorInfo(w)),b}},kj];for(const n of ZK)Nh(n)},3808:(Xe,Ee,Q)=>{"use strict";Object.defineProperty(Ee,"__esModule",{value:!0}),Ee.default=void 0;var se=Q(2348);function Ce(M,L){(null==L||L>M.length)&&(L=M.length);for(var W=0,Y=new Array(L);W<L;W++)Y[W]=M[W];return Y}function pe(M,L){if(!(M instanceof L))throw new TypeError("Cannot call a class as a function")}function T(M,L){for(var W=0;W<L.length;W++){var Y=L[W];Y.enumerable=Y.enumerable||!1,Y.configurable=!0,"value"in Y&&(Y.writable=!0),Object.defineProperty(M,Y.key,Y)}}function ne(M,L,W){return L&&T(M.prototype,L),W&&T(M,W),M}Ee.default=function(){function M(L,W,Y){var Oe=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},Be=Oe.style,Le=void 0===Be?{touchAction:"none"}:Be,rt=Oe.backgroundColor,en=void 0===rt?"cyan":rt,Ze=Oe.strokeColor,tt=void 0===Ze?"black":Ze,S=Oe.strokeWeight,ee=void 0===S?15:S;pe(this,M),this.canvas=document.createElement("canvas"),this.canvas.width=W,this.canvas.height=Y,this.canvas.style.backgroundColor=en,this.setCanvasStyle(Le),L.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.strokeColor=tt,this.strokeWeight=ee,this.drawing=[{color:tt,strokeWeight:ee,points:[]}],this.height=Y,this.width=W,this.setupEventListeners()}return ne(M,null,[{key:"getPixelArray",value:function(W){var Y=W.canvas;return W.getImageData(0,0,Y.width,Y.height).data}},{key:"getGreyScalePixelArray",value:function(W){return M.getPixelArray(W).filter(function(Be,Le){return(Le+1)%4==0})}},{key:"getPixelMatrix",value:function(W){var Y=W.canvas.width,Oe=M.getGreyScalePixelArray(W);return(0,se.chunkArray)(Oe,Y)}}]),ne(M,[{key:"changeStrokeColor",value:function(W){this.strokeColor=W}},{key:"changeBackgroundColor",value:function(W){this.canvas.style.backgroundColor=W}},{key:"changeStrokeWeight",value:function(W){this.strokeWeight=W}},{key:"setCanvasStyle",value:function(W){var Y=this;Object.entries(W).forEach(function(Oe){var Be=function Ye(M,L){return function De(M){if(Array.isArray(M))return M}(M)||function be(M,L){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(M)){var W=[],Y=!0,Oe=!1,Be=void 0;try{for(var rt,Le=M[Symbol.iterator]();!(Y=(rt=Le.next()).done)&&(W.push(rt.value),!L||W.length!==L);Y=!0);}catch(en){Oe=!0,Be=en}finally{try{!Y&&null!=Le.return&&Le.return()}finally{if(Oe)throw Be}}return W}}(M,L)||function Re(M,L){if(M){if("string"==typeof M)return Ce(M,L);var W=Object.prototype.toString.call(M).slice(8,-1);if("Object"===W&&M.constructor&&(W=M.constructor.name),"Map"===W||"Set"===W)return Array.from(M);if("Arguments"===W||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(W))return Ce(M,L)}}(M,L)||function xe(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(Oe,2);Y.canvas.style[Be[0]]=Be[1]})}},{key:"getDrawing",value:function(){return this.drawing}},{key:"downloadPNG",value:function(){var W=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"canvas.png",Y=this.canvas.toDataURL("image/png");(0,se.downloadURI)(Y,W)}},{key:"setupEventListeners",value:function(){this.canvas.addEventListener("pointermove",this.onPointerMove.bind(this)),window.addEventListener("pointerdown",this.onPointerDown.bind(this)),window.addEventListener("pointerup",this.onPointerUp.bind(this))}},{key:"onPointerMove",value:function(W){this.pointerIsDown&&(this.drawing[this.drawing.length-1].points.push({x:W.offsetX,y:W.offsetY}),this.draw())}},{key:"onPointerDown",value:function(){this.pointerIsDown=!0,this.drawing[this.drawing.length-1].strokeWeight=this.strokeWeight,this.drawing[this.drawing.length-1].color=this.strokeColor}},{key:"onPointerUp",value:function(){this.drawing[this.drawing.length-1].points.length>0&&this.drawing.push({color:this.strokeColor,strokeWeight:this.strokeWeight,points:[]}),this.pointerIsDown=!1}},{key:"getPixelArray",value:function(){return this.ctx.getImageData(0,0,this.width,this.height).data}},{key:"getGreyScalePixelArray",value:function(){return this.getPixelArray().filter(function(Oe,Be){return(Be+1)%4==0})}},{key:"reset",value:function(){this.drawing=[{color:this.strokeColor,strokeWeight:this.strokeWeight,points:[]}],this.clearCanvas()}},{key:"clearCanvas",value:function(){this.ctx.clearRect(0,0,this.width,this.height)}},{key:"draw",value:function(){var W=this;this.clearCanvas(),this.drawing.forEach(function(Y){W.drawStroke(Y)})}},{key:"drawLinePoint",value:function(W,Y){this.ctx.beginPath(),this.ctx.arc(W.x,W.y,Y/2,0,2*Math.PI,!0),this.ctx.closePath(),this.ctx.fill()}},{key:"drawStroke",value:function(W){var Y=W.points,Oe=W.color,Be=W.strokeWeight;if(this.ctx.strokeStyle=Oe,this.ctx.fillStyle=Oe,this.ctx.lineWidth=Be,0!==Y.length){if(Y.length<6)return void this.drawLinePoint(Y[0]);var Le;for(this.ctx.beginPath(),this.ctx.moveTo(Y[0].x,Y[0].y),Le=1;Le<Y.length-2;Le+=1)this.ctx.quadraticCurveTo(Y[Le].x,Y[Le].y,(Y[Le].x+Y[Le+1].x)/2,(Y[Le].y+Y[Le+1].y)/2);this.ctx.quadraticCurveTo(Y[Le].x,Y[Le].y,Y[Le+1].x,Y[Le+1].y),this.ctx.stroke(),this.drawLinePoint(Y[Y.length-1],Be)}}}]),M}()},7805:(Xe,Ee,Q)=>{"use strict";Ee.Z=void 0;var Ye=function xe(Ce){return Ce&&Ce.__esModule?Ce:{default:Ce}}(Q(3808));Ee.Z=Ye.default},2348:(Xe,Ee)=>{"use strict";Object.defineProperty(Ee,"__esModule",{value:!0}),Ee.chunkArray=function Q(Ye,xe){for(var Re=[],Ce=0;Ce<Ye.length;)Re.push(Ye.slice(Ce,xe+Ce)),Ce+=xe;return Re},Ee.downloadURI=function se(Ye,xe){var Re=document.createElement("a");Re.download=xe,Re.href=Ye,document.body.appendChild(Re),Re.click(),document.body.removeChild(Re)}},7658:Xe=>{Xe.exports=Q;var Ee=null;try{Ee=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(J){}function Q(J,I,fe){this.low=0|J,this.high=0|I,this.unsigned=!!fe}function se(J){return!0===(J&&J.__isLong__)}Object.defineProperty(Q.prototype,"__isLong__",{value:!0}),Q.isLong=se;var Ye={},xe={};function Re(J,I){var fe,Ve,we;return I?(we=0<=(J>>>=0)&&J<256)&&(Ve=xe[J])?Ve:(fe=be(J,(0|J)<0?-1:0,!0),we&&(xe[J]=fe),fe):(we=-128<=(J|=0)&&J<128)&&(Ve=Ye[J])?Ve:(fe=be(J,J<0?-1:0,!1),we&&(Ye[J]=fe),fe)}function Ce(J,I){if(isNaN(J))return I?Be:Oe;if(I){if(J<0)return Be;if(J>=L)return tt}else{if(J<=-W)return S;if(J+1>=W)return Ze}return J<0?Ce(-J,I).neg():be(J%M|0,J/M|0,I)}function be(J,I,fe){return new Q(J,I,fe)}Q.fromInt=Re,Q.fromNumber=Ce,Q.fromBits=be;var De=Math.pow;function pe(J,I,fe){if(0===J.length)throw Error("empty string");if("NaN"===J||"Infinity"===J||"+Infinity"===J||"-Infinity"===J)return Oe;if("number"==typeof I?(fe=I,I=!1):I=!!I,(fe=fe||10)<2||36<fe)throw RangeError("radix");var Ve;if((Ve=J.indexOf("-"))>0)throw Error("interior hyphen");if(0===Ve)return pe(J.substring(1),I,fe).neg();for(var we=Ce(De(fe,8)),We=Oe,at=0;at<J.length;at+=8){var It=Math.min(8,J.length-at),zt=parseInt(J.substring(at,at+It),fe);if(It<8){var St=Ce(De(fe,It));We=We.mul(St).add(Ce(zt))}else We=(We=We.mul(we)).add(Ce(zt))}return We.unsigned=I,We}function T(J,I){return"number"==typeof J?Ce(J,I):"string"==typeof J?pe(J,I):be(J.low,J.high,"boolean"==typeof I?I:J.unsigned)}Q.fromString=pe,Q.fromValue=T;var M=4294967296,L=M*M,W=L/2,Y=Re(1<<24),Oe=Re(0);Q.ZERO=Oe;var Be=Re(0,!0);Q.UZERO=Be;var Le=Re(1);Q.ONE=Le;var rt=Re(1,!0);Q.UONE=rt;var en=Re(-1);Q.NEG_ONE=en;var Ze=be(-1,2147483647,!1);Q.MAX_VALUE=Ze;var tt=be(-1,-1,!0);Q.MAX_UNSIGNED_VALUE=tt;var S=be(0,-2147483648,!1);Q.MIN_VALUE=S;var ee=Q.prototype;ee.toInt=function(){return this.unsigned?this.low>>>0:this.low},ee.toNumber=function(){return this.unsigned?(this.high>>>0)*M+(this.low>>>0):this.high*M+(this.low>>>0)},ee.toString=function(I){if((I=I||10)<2||36<I)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var fe=Ce(I),Ve=this.div(fe),we=Ve.mul(fe).sub(this);return Ve.toString(I)+we.toInt().toString(I)}return"-"+this.neg().toString(I)}for(var We=Ce(De(I,6),this.unsigned),at=this,It="";;){var zt=at.div(We),Ct=(at.sub(zt.mul(We)).toInt()>>>0).toString(I);if((at=zt).isZero())return Ct+It;for(;Ct.length<6;)Ct="0"+Ct;It=""+Ct+It}},ee.getHighBits=function(){return this.high},ee.getHighBitsUnsigned=function(){return this.high>>>0},ee.getLowBits=function(){return this.low},ee.getLowBitsUnsigned=function(){return this.low>>>0},ee.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var I=0!=this.high?this.high:this.low,fe=31;fe>0&&0==(I&1<<fe);fe--);return 0!=this.high?fe+33:fe+1},ee.isZero=function(){return 0===this.high&&0===this.low},ee.eqz=ee.isZero,ee.isNegative=function(){return!this.unsigned&&this.high<0},ee.isPositive=function(){return this.unsigned||this.high>=0},ee.isOdd=function(){return 1==(1&this.low)},ee.isEven=function(){return 0==(1&this.low)},ee.equals=function(I){return se(I)||(I=T(I)),(this.unsigned===I.unsigned||this.high>>>31!=1||I.high>>>31!=1)&&this.high===I.high&&this.low===I.low},ee.eq=ee.equals,ee.notEquals=function(I){return!this.eq(I)},ee.neq=ee.notEquals,ee.ne=ee.notEquals,ee.lessThan=function(I){return this.comp(I)<0},ee.lt=ee.lessThan,ee.lessThanOrEqual=function(I){return this.comp(I)<=0},ee.lte=ee.lessThanOrEqual,ee.le=ee.lessThanOrEqual,ee.greaterThan=function(I){return this.comp(I)>0},ee.gt=ee.greaterThan,ee.greaterThanOrEqual=function(I){return this.comp(I)>=0},ee.gte=ee.greaterThanOrEqual,ee.ge=ee.greaterThanOrEqual,ee.compare=function(I){if(se(I)||(I=T(I)),this.eq(I))return 0;var fe=this.isNegative(),Ve=I.isNegative();return fe&&!Ve?-1:!fe&&Ve?1:this.unsigned?I.high>>>0>this.high>>>0||I.high===this.high&&I.low>>>0>this.low>>>0?-1:1:this.sub(I).isNegative()?-1:1},ee.comp=ee.compare,ee.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(Le)},ee.neg=ee.negate,ee.add=function(I){se(I)||(I=T(I));var Ct=0,cn=0,ke=0,$t=0;return ke+=($t+=(65535&this.low)+(65535&I.low))>>>16,cn+=(ke+=(this.low>>>16)+(I.low>>>16))>>>16,Ct+=(cn+=(65535&this.high)+(65535&I.high))>>>16,Ct+=(this.high>>>16)+(I.high>>>16),be((ke&=65535)<<16|($t&=65535),(Ct&=65535)<<16|(cn&=65535),this.unsigned)},ee.subtract=function(I){return se(I)||(I=T(I)),this.add(I.neg())},ee.sub=ee.subtract,ee.multiply=function(I){if(this.isZero())return Oe;if(se(I)||(I=T(I)),Ee)return be(Ee.mul(this.low,this.high,I.low,I.high),Ee.get_high(),this.unsigned);if(I.isZero())return Oe;if(this.eq(S))return I.isOdd()?S:Oe;if(I.eq(S))return this.isOdd()?S:Oe;if(this.isNegative())return I.isNegative()?this.neg().mul(I.neg()):this.neg().mul(I).neg();if(I.isNegative())return this.mul(I.neg()).neg();if(this.lt(Y)&&I.lt(Y))return Ce(this.toNumber()*I.toNumber(),this.unsigned);var we=65535&this.high,We=this.low>>>16,at=65535&this.low,zt=65535&I.high,St=I.low>>>16,Ct=65535&I.low,cn=0,ke=0,$t=0,Et=0;return $t+=(Et+=at*Ct)>>>16,ke+=($t+=We*Ct)>>>16,$t&=65535,ke+=($t+=at*St)>>>16,cn+=(ke+=we*Ct)>>>16,ke&=65535,cn+=(ke+=We*St)>>>16,ke&=65535,cn+=(ke+=at*zt)>>>16,cn+=(this.high>>>16)*Ct+we*St+We*zt+at*(I.high>>>16),be(($t&=65535)<<16|(Et&=65535),(cn&=65535)<<16|(ke&=65535),this.unsigned)},ee.mul=ee.multiply,ee.divide=function(I){if(se(I)||(I=T(I)),I.isZero())throw Error("division by zero");var Ve,we,We;if(Ee)return this.unsigned||-2147483648!==this.high||-1!==I.low||-1!==I.high?be((this.unsigned?Ee.div_u:Ee.div_s)(this.low,this.high,I.low,I.high),Ee.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?Be:Oe;if(this.unsigned){if(I.unsigned||(I=I.toUnsigned()),I.gt(this))return Be;if(I.gt(this.shru(1)))return rt;We=Be}else{if(this.eq(S))return I.eq(Le)||I.eq(en)?S:I.eq(S)?Le:(Ve=this.shr(1).div(I).shl(1)).eq(Oe)?I.isNegative()?Le:en:(we=this.sub(I.mul(Ve)),We=Ve.add(we.div(I)));if(I.eq(S))return this.unsigned?Be:Oe;if(this.isNegative())return I.isNegative()?this.neg().div(I.neg()):this.neg().div(I).neg();if(I.isNegative())return this.div(I.neg()).neg();We=Oe}for(we=this;we.gte(I);){Ve=Math.max(1,Math.floor(we.toNumber()/I.toNumber()));for(var It=Math.ceil(Math.log(Ve)/Math.LN2),zt=It<=48?1:De(2,It-48),St=Ce(Ve),Ct=St.mul(I);Ct.isNegative()||Ct.gt(we);)Ct=(St=Ce(Ve-=zt,this.unsigned)).mul(I);St.isZero()&&(St=Le),We=We.add(St),we=we.sub(Ct)}return We},ee.div=ee.divide,ee.modulo=function(I){return se(I)||(I=T(I)),Ee?be((this.unsigned?Ee.rem_u:Ee.rem_s)(this.low,this.high,I.low,I.high),Ee.get_high(),this.unsigned):this.sub(this.div(I).mul(I))},ee.mod=ee.modulo,ee.rem=ee.modulo,ee.not=function(){return be(~this.low,~this.high,this.unsigned)},ee.and=function(I){return se(I)||(I=T(I)),be(this.low&I.low,this.high&I.high,this.unsigned)},ee.or=function(I){return se(I)||(I=T(I)),be(this.low|I.low,this.high|I.high,this.unsigned)},ee.xor=function(I){return se(I)||(I=T(I)),be(this.low^I.low,this.high^I.high,this.unsigned)},ee.shiftLeft=function(I){return se(I)&&(I=I.toInt()),0==(I&=63)?this:I<32?be(this.low<<I,this.high<<I|this.low>>>32-I,this.unsigned):be(0,this.low<<I-32,this.unsigned)},ee.shl=ee.shiftLeft,ee.shiftRight=function(I){return se(I)&&(I=I.toInt()),0==(I&=63)?this:I<32?be(this.low>>>I|this.high<<32-I,this.high>>I,this.unsigned):be(this.high>>I-32,this.high>=0?0:-1,this.unsigned)},ee.shr=ee.shiftRight,ee.shiftRightUnsigned=function(I){if(se(I)&&(I=I.toInt()),0==(I&=63))return this;var fe=this.high;return I<32?be(this.low>>>I|fe<<32-I,fe>>>I,this.unsigned):be(32===I?fe:fe>>>I-32,0,this.unsigned)},ee.shru=ee.shiftRightUnsigned,ee.shr_u=ee.shiftRightUnsigned,ee.toSigned=function(){return this.unsigned?be(this.low,this.high,!1):this},ee.toUnsigned=function(){return this.unsigned?this:be(this.low,this.high,!0)},ee.toBytes=function(I){return I?this.toBytesLE():this.toBytesBE()},ee.toBytesLE=function(){var I=this.high,fe=this.low;return[255&fe,fe>>>8&255,fe>>>16&255,fe>>>24,255&I,I>>>8&255,I>>>16&255,I>>>24]},ee.toBytesBE=function(){var I=this.high,fe=this.low;return[I>>>24,I>>>16&255,I>>>8&255,255&I,fe>>>24,fe>>>16&255,fe>>>8&255,255&fe]},Q.fromBytes=function(I,fe,Ve){return Ve?Q.fromBytesLE(I,fe):Q.fromBytesBE(I,fe)},Q.fromBytesLE=function(I,fe){return new Q(I[0]|I[1]<<8|I[2]<<16|I[3]<<24,I[4]|I[5]<<8|I[6]<<16|I[7]<<24,fe)},Q.fromBytesBE=function(I,fe){return new Q(I[4]<<24|I[5]<<16|I[6]<<8|I[7],I[0]<<24|I[1]<<16|I[2]<<8|I[3],fe)}},340:(Xe,Ee,Q)=>{var se=Q(9471),Ye=Q(2992),xe=Q(7657),Re=Q(5583),Ce=Q(1929),be=Q(8083),De=Q(3818);De.alea=se,De.xor128=Ye,De.xorwow=xe,De.xorshift7=Re,De.xor4096=Ce,De.tychei=be,Xe.exports=De},9471:function(Xe,Ee,Q){var se;!function(Ye,xe,Re){function Ce(T){var ne=this,re=function pe(){var T=4022871197;return function(re){re=String(re);for(var M=0;M<re.length;M++){var L=.02519603282416938*(T+=re.charCodeAt(M));L-=T=L>>>0,T=(L*=T)>>>0,T+=4294967296*(L-=T)}return 2.3283064365386963e-10*(T>>>0)}}();ne.next=function(){var M=2091639*ne.s0+2.3283064365386963e-10*ne.c;return ne.s0=ne.s1,ne.s1=ne.s2,ne.s2=M-(ne.c=0|M)},ne.c=1,ne.s0=re(" "),ne.s1=re(" "),ne.s2=re(" "),ne.s0-=re(T),ne.s0<0&&(ne.s0+=1),ne.s1-=re(T),ne.s1<0&&(ne.s1+=1),ne.s2-=re(T),ne.s2<0&&(ne.s2+=1),re=null}function be(T,ne){return ne.c=T.c,ne.s0=T.s0,ne.s1=T.s1,ne.s2=T.s2,ne}function De(T,ne){var re=new Ce(T),M=ne&&ne.state,L=re.next;return L.int32=function(){return 4294967296*re.next()|0},L.double=function(){return L()+11102230246251565e-32*(2097152*L()|0)},L.quick=L,M&&("object"==typeof M&&be(M,re),L.state=function(){return be(re,{})}),L}xe&&xe.exports?xe.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,xe))&&(xe.exports=se):this.alea=De}(0,Xe=Q.nmd(Xe))},8083:function(Xe,Ee,Q){var se;!function(Ye,xe,Re){function Ce(pe){var T=this,ne="";T.next=function(){var M=T.b,L=T.c,W=T.d,Y=T.a;return M=M<<25^M>>>7^L,L=L-W|0,W=W<<24^W>>>8^Y,Y=Y-M|0,T.b=M=M<<20^M>>>12^L,T.c=L=L-W|0,T.d=W<<16^L>>>16^Y,T.a=Y-M|0},T.a=0,T.b=0,T.c=-1640531527,T.d=1367130551,pe===Math.floor(pe)?(T.a=pe/4294967296|0,T.b=0|pe):ne+=pe;for(var re=0;re<ne.length+20;re++)T.b^=0|ne.charCodeAt(re),T.next()}function be(pe,T){return T.a=pe.a,T.b=pe.b,T.c=pe.c,T.d=pe.d,T}function De(pe,T){var ne=new Ce(pe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&("object"==typeof re&&be(re,ne),M.state=function(){return be(ne,{})}),M}xe&&xe.exports?xe.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,xe))&&(xe.exports=se):this.tychei=De}(0,Xe=Q.nmd(Xe))},2992:function(Xe,Ee,Q){var se;!function(Ye,xe,Re){function Ce(pe){var T=this,ne="";T.x=0,T.y=0,T.z=0,T.w=0,T.next=function(){var M=T.x^T.x<<11;return T.x=T.y,T.y=T.z,T.z=T.w,T.w^=T.w>>>19^M^M>>>8},pe===(0|pe)?T.x=pe:ne+=pe;for(var re=0;re<ne.length+64;re++)T.x^=0|ne.charCodeAt(re),T.next()}function be(pe,T){return T.x=pe.x,T.y=pe.y,T.z=pe.z,T.w=pe.w,T}function De(pe,T){var ne=new Ce(pe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&("object"==typeof re&&be(re,ne),M.state=function(){return be(ne,{})}),M}xe&&xe.exports?xe.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,xe))&&(xe.exports=se):this.xor128=De}(0,Xe=Q.nmd(Xe))},1929:function(Xe,Ee,Q){var se;!function(Ye,xe,Re){function Ce(pe){var T=this;T.next=function(){var W,Y,re=T.w,M=T.X,L=T.i;return T.w=re=re+1640531527|0,Y=M[L+34&127],W=M[L=L+1&127],Y^=Y<<13,W^=W<<17,Y=M[L]=(Y^=Y>>>15)^(W^=W>>>12),T.i=L,Y+(re^re>>>16)|0},function ne(re,M){var L,W,Y,Oe,Be,Le=[],rt=128;for(M===(0|M)?(W=M,M=null):(M+="\0",W=0,rt=Math.max(rt,M.length)),Y=0,Oe=-32;Oe<rt;++Oe)M&&(W^=M.charCodeAt((Oe+32)%M.length)),0===Oe&&(Be=W),W^=W<<10,W^=W>>>15,W^=W<<4,W^=W>>>13,Oe>=0&&(Y=0==(L=Le[127&Oe]^=W+(Be=Be+1640531527|0))?Y+1:0);for(Y>=128&&(Le[127&(M&&M.length||0)]=-1),Y=127,Oe=512;Oe>0;--Oe)W=Le[Y+34&127],L=Le[Y=Y+1&127],W^=W<<13,L^=L<<17,Le[Y]=(W^=W>>>15)^(L^=L>>>12);re.w=Be,re.X=Le,re.i=Y}(T,pe)}function be(pe,T){return T.i=pe.i,T.w=pe.w,T.X=pe.X.slice(),T}function De(pe,T){null==pe&&(pe=+new Date);var ne=new Ce(pe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&(re.X&&be(re,ne),M.state=function(){return be(ne,{})}),M}xe&&xe.exports?xe.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,xe))&&(xe.exports=se):this.xor4096=De}(0,Xe=Q.nmd(Xe))},5583:function(Xe,Ee,Q){var se;!function(Ye,xe,Re){function Ce(pe){var T=this;T.next=function(){var L,W,re=T.x,M=T.i;return L=re[M],W=(L^=L>>>7)^L<<24,W^=(L=re[M+1&7])^L>>>10,W^=(L=re[M+3&7])^L>>>3,W^=(L=re[M+4&7])^L<<7,L=re[M+7&7],re[M]=W^=(L^=L<<13)^L<<9,T.i=M+1&7,W},function ne(re,M){var L,Y=[];if(M===(0|M))Y[0]=M;else for(M=""+M,L=0;L<M.length;++L)Y[7&L]=Y[7&L]<<15^M.charCodeAt(L)+Y[L+1&7]<<13;for(;Y.length<8;)Y.push(0);for(L=0;L<8&&0===Y[L];++L);for(8==L&&(Y[7]=-1),re.x=Y,re.i=0,L=256;L>0;--L)re.next()}(T,pe)}function be(pe,T){return T.x=pe.x.slice(),T.i=pe.i,T}function De(pe,T){null==pe&&(pe=+new Date);var ne=new Ce(pe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&(re.x&&be(re,ne),M.state=function(){return be(ne,{})}),M}xe&&xe.exports?xe.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,xe))&&(xe.exports=se):this.xorshift7=De}(0,Xe=Q.nmd(Xe))},7657:function(Xe,Ee,Q){var se;!function(Ye,xe,Re){function Ce(pe){var T=this,ne="";T.next=function(){var M=T.x^T.x>>>2;return T.x=T.y,T.y=T.z,T.z=T.w,T.w=T.v,(T.d=T.d+362437|0)+(T.v=T.v^T.v<<4^M^M<<1)|0},T.x=0,T.y=0,T.z=0,T.w=0,T.v=0,pe===(0|pe)?T.x=pe:ne+=pe;for(var re=0;re<ne.length+64;re++)T.x^=0|ne.charCodeAt(re),re==ne.length&&(T.d=T.x<<10^T.x>>>4),T.next()}function be(pe,T){return T.x=pe.x,T.y=pe.y,T.z=pe.z,T.w=pe.w,T.v=pe.v,T.d=pe.d,T}function De(pe,T){var ne=new Ce(pe),re=T&&T.state,M=function(){return(ne.next()>>>0)/4294967296};return M.double=function(){do{var Y=((ne.next()>>>11)+(ne.next()>>>0)/4294967296)/(1<<21)}while(0===Y);return Y},M.int32=ne.next,M.quick=M,re&&("object"==typeof re&&be(re,ne),M.state=function(){return be(ne,{})}),M}xe&&xe.exports?xe.exports=De:Q.amdD&&Q.amdO?void 0!==(se=function(){return De}.call(Ee,Q,Ee,xe))&&(xe.exports=se):this.xorwow=De}(0,Xe=Q.nmd(Xe))},3818:function(Xe,Ee,Q){var se;!function(Ye,xe,Re){var L,Ce=256,T=Re.pow(Ce,6),ne=Re.pow(2,52),re=2*ne,M=255;function W(Ze,tt,S){var ee=[],J=Le(Be((tt=1==tt?{entropy:!0}:tt||{}).entropy?[Ze,en(xe)]:null==Ze?function rt(){try{var Ze;return L&&(Ze=L.randomBytes)?Ze=Ze(Ce):(Ze=new Uint8Array(Ce),(Ye.crypto||Ye.msCrypto).getRandomValues(Ze)),en(Ze)}catch(ee){var tt=Ye.navigator,S=tt&&tt.plugins;return[+new Date,Ye,S,Ye.screen,en(xe)]}}():Ze,3),ee),I=new Y(ee),fe=function(){for(var Ve=I.g(6),we=T,We=0;Ve<ne;)Ve=(Ve+We)*Ce,we*=Ce,We=I.g(1);for(;Ve>=re;)Ve/=2,we/=2,We>>>=1;return(Ve+We)/we};return fe.int32=function(){return 0|I.g(4)},fe.quick=function(){return I.g(4)/4294967296},fe.double=fe,Le(en(I.S),xe),(tt.pass||S||function(Ve,we,We,at){return at&&(at.S&&Oe(at,I),Ve.state=function(){return Oe(I,{})}),We?(Re.random=Ve,we):Ve})(fe,J,"global"in tt?tt.global:this==Re,tt.state)}function Y(Ze){var tt,S=Ze.length,ee=this,J=0,I=ee.i=ee.j=0,fe=ee.S=[];for(S||(Ze=[S++]);J<Ce;)fe[J]=J++;for(J=0;J<Ce;J++)fe[J]=fe[I=M&I+Ze[J%S]+(tt=fe[J])],fe[I]=tt;(ee.g=function(Ve){for(var we,We=0,at=ee.i,It=ee.j,zt=ee.S;Ve--;)we=zt[at=M&at+1],We=We*Ce+zt[M&(zt[at]=zt[It=M&It+we])+(zt[It]=we)];return ee.i=at,ee.j=It,We})(Ce)}function Oe(Ze,tt){return tt.i=Ze.i,tt.j=Ze.j,tt.S=Ze.S.slice(),tt}function Be(Ze,tt){var J,S=[],ee=typeof Ze;if(tt&&"object"==ee)for(J in Ze)try{S.push(Be(Ze[J],tt-1))}catch(I){}return S.length?S:"string"==ee?Ze:Ze+"\0"}function Le(Ze,tt){for(var ee,S=Ze+"",J=0;J<S.length;)tt[M&J]=M&(ee^=19*tt[M&J])+S.charCodeAt(J++);return en(tt)}function en(Ze){return String.fromCharCode.apply(0,Ze)}if(Le(Re.random(),xe),Xe.exports){Xe.exports=W;try{L=Q(5042)}catch(Ze){}}else void 0!==(se=function(){return W}.call(Ee,Q,Ee,Xe))&&(Xe.exports=se)}("undefined"!=typeof self?self:this,[],Math)},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{},5861:(Xe,Ee,Q)=>{"use strict";function se(xe,Re,Ce,be,De,pe,T){try{var ne=xe[pe](T),re=ne.value}catch(M){return void Ce(M)}ne.done?Re(re):Promise.resolve(re).then(be,De)}function Ye(xe){return function(){var Re=this,Ce=arguments;return new Promise(function(be,De){var pe=xe.apply(Re,Ce);function T(re){se(pe,be,De,T,ne,"next",re)}function ne(re){se(pe,be,De,T,ne,"throw",re)}T(void 0)})}}Q.d(Ee,{Z:()=>Ye})}}]);